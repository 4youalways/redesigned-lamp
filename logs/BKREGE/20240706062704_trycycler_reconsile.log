
[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 06:27:05)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/BKREGE_0.fastq.gz
  size = 407,788,601 bytes

Input contigs:
  results/clusters/BKREGE/cluster_001/1_contigs/A_Utg1192.fasta (5,532,385 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/B_Utg1120.fasta (5,532,499 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/C_Utg1092.fasta (5,532,418 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/D_Utg1120.fasta (5,532,409 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/F_contig_1.fasta (5,531,780 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/G_contig_1.fasta (5,531,781 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/H_contig_2.fasta (5,531,785 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/I_contig_2.fasta (5,531,793 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/J_contig_3.fasta (5,531,782 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/K_contig_2.fasta (5,531,776 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/L_utg000001c.fasta (5,532,411 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/O_utg000001c.fasta (5,531,942 bp)
  results/clusters/BKREGE/cluster_001/1_contigs/P_utg000001c.fasta (5,531,911 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 06:27:05)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  A_Utg1192:    [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  B_Utg1120:    1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  C_Utg1092:    1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  D_Utg1120:    1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  F_contig_1:   1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  G_contig_1:   1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  H_contig_2:   1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000
  I_contig_2:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000
  J_contig_3:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000
  K_contig_2:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000
  L_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000
  O_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000
  P_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m

Mash distances:
  A_Utg1192:    [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  B_Utg1120:    0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  C_Utg1092:    0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  D_Utg1120:    0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  F_contig_1:   0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_1:   0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  H_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  I_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  J_contig_3:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  K_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  L_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  O_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 06:27:17)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  TGATTATCGGCAGGTTACTGAATGACAACGCCAGCGCGCCCGTGAGCACC
  ACCGGCTGTTTAAAGGCGCGGACAAACTCGGAAAATACCTCTCCCGGACG
  AAACCCCCGGCCCTGAGAGGTGACCGTTTCTGGCATGTTAAAAATCAGTA
  ACGCCCAGGCCAGCAAGCTCATGGCGCCGATGATCGCAAACAATAACTTC
  CAGTGCAGGAAATTCATCAGGCCAGCGCCCGCCAGGGGCCCGATTACCGG

A_Utg1192:    + strand (using original sequence)
B_Utg1120:    + strand (using original sequence)
C_Utg1092:    + strand (using original sequence)
D_Utg1120:    + strand (using original sequence)
F_contig_1:   + strand (using original sequence)
G_contig_1:   - strand (using reverse complement)
H_contig_2:   + strand (using original sequence)
I_contig_2:   - strand (using reverse complement)
J_contig_3:   - strand (using reverse complement)
K_contig_2:   - strand (using reverse complement)
L_utg000001c: - strand (using reverse complement)
O_utg000001c: - strand (using reverse complement)
P_utg000001c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 06:27:29)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising A_Utg1192:
  using B_Utg1120:
    no adjustment needed (A_Utg1192 is already circular)
  using C_Utg1092:
    no adjustment needed (A_Utg1192 is already circular)
  using D_Utg1120:
    unable to circularise: A_Utg1192's start/end is the same as D_Utg1120's start/end
  using F_contig_1:
    no adjustment needed (A_Utg1192 is already circular)
  using G_contig_1:
    no adjustment needed (A_Utg1192 is already circular)
  using H_contig_2:
    no adjustment needed (A_Utg1192 is already circular)
  using I_contig_2:
    no adjustment needed (A_Utg1192 is already circular)
  using J_contig_3:
    no adjustment needed (A_Utg1192 is already circular)
  using K_contig_2:
    no adjustment needed (A_Utg1192 is already circular)
  using L_utg000001c:
    no adjustment needed (A_Utg1192 is already circular)
  using O_utg000001c:
    no adjustment needed (A_Utg1192 is already circular)
  using P_utg000001c:
    no adjustment needed (A_Utg1192 is already circular)
  circularisation complete (5,532,385 bp)

Circularising B_Utg1120:
  using A_Utg1192:
    no adjustment needed (B_Utg1120 is already circular)
  using C_Utg1092:
    unable to circularise: B_Utg1120's start could not be found in C_Utg1092
  using D_Utg1120:
    no adjustment needed (B_Utg1120 is already circular)
  using F_contig_1:
    no adjustment needed (B_Utg1120 is already circular)
  using G_contig_1:
    no adjustment needed (B_Utg1120 is already circular)
  using H_contig_2:
    no adjustment needed (B_Utg1120 is already circular)
  using I_contig_2:
    no adjustment needed (B_Utg1120 is already circular)
  using J_contig_3:
    no adjustment needed (B_Utg1120 is already circular)
  using K_contig_2:
    no adjustment needed (B_Utg1120 is already circular)
  using L_utg000001c:
    no adjustment needed (B_Utg1120 is already circular)
  using O_utg000001c:
    no adjustment needed (B_Utg1120 is already circular)
  using P_utg000001c:
    no adjustment needed (B_Utg1120 is already circular)
  circularisation complete (5,532,499 bp)

Circularising C_Utg1092:
  using A_Utg1192:
    no adjustment needed (C_Utg1092 is already circular)
  using B_Utg1120:
    unable to circularise: C_Utg1092's end could not be found in B_Utg1120
  using D_Utg1120:
    no adjustment needed (C_Utg1092 is already circular)
  using F_contig_1:
    no adjustment needed (C_Utg1092 is already circular)
  using G_contig_1:
    no adjustment needed (C_Utg1092 is already circular)
  using H_contig_2:
    no adjustment needed (C_Utg1092 is already circular)
  using I_contig_2:
    no adjustment needed (C_Utg1092 is already circular)
  using J_contig_3:
    no adjustment needed (C_Utg1092 is already circular)
  using K_contig_2:
    no adjustment needed (C_Utg1092 is already circular)
  using L_utg000001c:
    no adjustment needed (C_Utg1092 is already circular)
  using O_utg000001c:
    no adjustment needed (C_Utg1092 is already circular)
  using P_utg000001c:
    no adjustment needed (C_Utg1092 is already circular)
  circularisation complete (5,532,418 bp)

Circularising D_Utg1120:
  using A_Utg1192:
    unable to circularise: D_Utg1120's start/end is the same as A_Utg1192's start/end
  using B_Utg1120:
    no adjustment needed (D_Utg1120 is already circular)
  using C_Utg1092:
    no adjustment needed (D_Utg1120 is already circular)
  using F_contig_1:
    no adjustment needed (D_Utg1120 is already circular)
  using G_contig_1:
    no adjustment needed (D_Utg1120 is already circular)
  using H_contig_2:
    no adjustment needed (D_Utg1120 is already circular)
  using I_contig_2:
    no adjustment needed (D_Utg1120 is already circular)
  using J_contig_3:
    no adjustment needed (D_Utg1120 is already circular)
  using K_contig_2:
    no adjustment needed (D_Utg1120 is already circular)
  using L_utg000001c:
    no adjustment needed (D_Utg1120 is already circular)
  using O_utg000001c:
    no adjustment needed (D_Utg1120 is already circular)
  using P_utg000001c:
    no adjustment needed (D_Utg1120 is already circular)
  circularisation complete (5,532,409 bp)

Circularising F_contig_1:
  using A_Utg1192:
    no adjustment needed (F_contig_1 is already circular)
  using B_Utg1120:
    no adjustment needed (F_contig_1 is already circular)
  using C_Utg1092:
    no adjustment needed (F_contig_1 is already circular)
  using D_Utg1120:
    no adjustment needed (F_contig_1 is already circular)
  using G_contig_1:
    no adjustment needed (F_contig_1 is already circular)
  using H_contig_2:
    no adjustment needed (F_contig_1 is already circular)
  using I_contig_2:
    no adjustment needed (F_contig_1 is already circular)
  using J_contig_3:
    no adjustment needed (F_contig_1 is already circular)
  using K_contig_2:
    no adjustment needed (F_contig_1 is already circular)
  using L_utg000001c:
    no adjustment needed (F_contig_1 is already circular)
  using O_utg000001c:
    no adjustment needed (F_contig_1 is already circular)
  using P_utg000001c:
    no adjustment needed (F_contig_1 is already circular)
  circularisation complete (5,531,780 bp)

Circularising G_contig_1:
  using A_Utg1192:
    no adjustment needed (G_contig_1 is already circular)
  using B_Utg1120:
    no adjustment needed (G_contig_1 is already circular)
  using C_Utg1092:
    no adjustment needed (G_contig_1 is already circular)
  using D_Utg1120:
    no adjustment needed (G_contig_1 is already circular)
  using F_contig_1:
    no adjustment needed (G_contig_1 is already circular)
  using H_contig_2:
    no adjustment needed (G_contig_1 is already circular)
  using I_contig_2:
    no adjustment needed (G_contig_1 is already circular)
  using J_contig_3:
    no adjustment needed (G_contig_1 is already circular)
  using K_contig_2:
    no adjustment needed (G_contig_1 is already circular)
  using L_utg000001c:
    no adjustment needed (G_contig_1 is already circular)
  using O_utg000001c:
    no adjustment needed (G_contig_1 is already circular)
  using P_utg000001c:
    no adjustment needed (G_contig_1 is already circular)
  circularisation complete (5,531,781 bp)

Circularising H_contig_2:
  using A_Utg1192:
    no adjustment needed (H_contig_2 is already circular)
  using B_Utg1120:
    no adjustment needed (H_contig_2 is already circular)
  using C_Utg1092:
    no adjustment needed (H_contig_2 is already circular)
  using D_Utg1120:
    no adjustment needed (H_contig_2 is already circular)
  using F_contig_1:
    no adjustment needed (H_contig_2 is already circular)
  using G_contig_1:
    no adjustment needed (H_contig_2 is already circular)
  using I_contig_2:
    no adjustment needed (H_contig_2 is already circular)
  using J_contig_3:
    no adjustment needed (H_contig_2 is already circular)
  using K_contig_2:
    no adjustment needed (H_contig_2 is already circular)
  using L_utg000001c:
    no adjustment needed (H_contig_2 is already circular)
  using O_utg000001c:
    no adjustment needed (H_contig_2 is already circular)
  using P_utg000001c:
    no adjustment needed (H_contig_2 is already circular)
  circularisation complete (5,531,785 bp)

Circularising I_contig_2:
  using A_Utg1192:
    no adjustment needed (I_contig_2 is already circular)
  using B_Utg1120:
    no adjustment needed (I_contig_2 is already circular)
  using C_Utg1092:
    no adjustment needed (I_contig_2 is already circular)
  using D_Utg1120:
    no adjustment needed (I_contig_2 is already circular)
  using F_contig_1:
    no adjustment needed (I_contig_2 is already circular)
  using G_contig_1:
    no adjustment needed (I_contig_2 is already circular)
  using H_contig_2:
    no adjustment needed (I_contig_2 is already circular)
  using J_contig_3:
    no adjustment needed (I_contig_2 is already circular)
  using K_contig_2:
    no adjustment needed (I_contig_2 is already circular)
  using L_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  using O_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  using P_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  circularisation complete (5,531,793 bp)

Circularising J_contig_3:
  using A_Utg1192:
    no adjustment needed (J_contig_3 is already circular)
  using B_Utg1120:
    no adjustment needed (J_contig_3 is already circular)
  using C_Utg1092:
    no adjustment needed (J_contig_3 is already circular)
  using D_Utg1120:
    no adjustment needed (J_contig_3 is already circular)
  using F_contig_1:
    no adjustment needed (J_contig_3 is already circular)
  using G_contig_1:
    no adjustment needed (J_contig_3 is already circular)
  using H_contig_2:
    no adjustment needed (J_contig_3 is already circular)
  using I_contig_2:
    no adjustment needed (J_contig_3 is already circular)
  using K_contig_2:
    no adjustment needed (J_contig_3 is already circular)
  using L_utg000001c:
    no adjustment needed (J_contig_3 is already circular)
  using O_utg000001c:
    no adjustment needed (J_contig_3 is already circular)
  using P_utg000001c:
    no adjustment needed (J_contig_3 is already circular)
  circularisation complete (5,531,782 bp)

Circularising K_contig_2:
  using A_Utg1192:
    no adjustment needed (K_contig_2 is already circular)
  using B_Utg1120:
    no adjustment needed (K_contig_2 is already circular)
  using C_Utg1092:
    no adjustment needed (K_contig_2 is already circular)
  using D_Utg1120:
    no adjustment needed (K_contig_2 is already circular)
  using F_contig_1:
    no adjustment needed (K_contig_2 is already circular)
  using G_contig_1:
    no adjustment needed (K_contig_2 is already circular)
  using H_contig_2:
    no adjustment needed (K_contig_2 is already circular)
  using I_contig_2:
    no adjustment needed (K_contig_2 is already circular)
  using J_contig_3:
    no adjustment needed (K_contig_2 is already circular)
  using L_utg000001c:
    no adjustment needed (K_contig_2 is already circular)
  using O_utg000001c:
    no adjustment needed (K_contig_2 is already circular)
  using P_utg000001c:
    no adjustment needed (K_contig_2 is already circular)
  circularisation complete (5,531,776 bp)

Circularising L_utg000001c:
  using A_Utg1192:
    no adjustment needed (L_utg000001c is already circular)
  using B_Utg1120:
    no adjustment needed (L_utg000001c is already circular)
  using C_Utg1092:
    no adjustment needed (L_utg000001c is already circular)
  using D_Utg1120:
    no adjustment needed (L_utg000001c is already circular)
  using F_contig_1:
    no adjustment needed (L_utg000001c is already circular)
  using G_contig_1:
    no adjustment needed (L_utg000001c is already circular)
  using H_contig_2:
    no adjustment needed (L_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (L_utg000001c is already circular)
  using J_contig_3:
    no adjustment needed (L_utg000001c is already circular)
  using K_contig_2:
    no adjustment needed (L_utg000001c is already circular)
  using O_utg000001c:
    no adjustment needed (L_utg000001c is already circular)
  using P_utg000001c:
    no adjustment needed (L_utg000001c is already circular)
  circularisation complete (5,532,411 bp)

Circularising O_utg000001c:
  using A_Utg1192:
    no adjustment needed (O_utg000001c is already circular)
  using B_Utg1120:
    no adjustment needed (O_utg000001c is already circular)
  using C_Utg1092:
    no adjustment needed (O_utg000001c is already circular)
  using D_Utg1120:
    no adjustment needed (O_utg000001c is already circular)
  using F_contig_1:
    no adjustment needed (O_utg000001c is already circular)
  using G_contig_1:
    no adjustment needed (O_utg000001c is already circular)
  using H_contig_2:
    no adjustment needed (O_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (O_utg000001c is already circular)
  using J_contig_3:
    no adjustment needed (O_utg000001c is already circular)
  using K_contig_2:
    no adjustment needed (O_utg000001c is already circular)
  using L_utg000001c:
    no adjustment needed (O_utg000001c is already circular)
  using P_utg000001c:
    no adjustment needed (O_utg000001c is already circular)
  circularisation complete (5,531,942 bp)

Circularising P_utg000001c:
  using A_Utg1192:
    no adjustment needed (P_utg000001c is already circular)
  using B_Utg1120:
    no adjustment needed (P_utg000001c is already circular)
  using C_Utg1092:
    no adjustment needed (P_utg000001c is already circular)
  using D_Utg1120:
    no adjustment needed (P_utg000001c is already circular)
  using F_contig_1:
    no adjustment needed (P_utg000001c is already circular)
  using G_contig_1:
    no adjustment needed (P_utg000001c is already circular)
  using H_contig_2:
    no adjustment needed (P_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (P_utg000001c is already circular)
  using J_contig_3:
    no adjustment needed (P_utg000001c is already circular)
  using K_contig_2:
    no adjustment needed (P_utg000001c is already circular)
  using L_utg000001c:
    no adjustment needed (P_utg000001c is already circular)
  using O_utg000001c:
    no adjustment needed (P_utg000001c is already circular)
  circularisation complete (5,531,911 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 06:28:59)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0003_A4U70_RS00005 (chromosomal replication initiator protein DnaA)
  GTGTCACTTTCGCTTTGGCAGCAGTGTCTTGCCCGATTGCAGGATGAGTT...

A_Utg1192:    + strand (using original sequence)
B_Utg1120:    + strand (using original sequence)
C_Utg1092:    + strand (using original sequence)
D_Utg1120:    + strand (using original sequence)
F_contig_1:   + strand (using original sequence)
G_contig_1:   + strand (using original sequence)
H_contig_2:   + strand (using original sequence)
I_contig_2:   + strand (using original sequence)
J_contig_3:   + strand (using original sequence)
K_contig_2:   + strand (using original sequence)
L_utg000001c: + strand (using original sequence)
O_utg000001c: + strand (using original sequence)
P_utg000001c: + strand (using original sequence)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 06:29:08)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

A_Utg1192: rotating by 5,521,464 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,532,385 bp)

B_Utg1120: rotating by 2,610,522 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,532,499 bp)

C_Utg1092: rotating by 2,610,306 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,532,418 bp)

D_Utg1120: rotating by 5,521,501 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,532,409 bp)

F_contig_1: rotating by 2,211,923 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,531,780 bp)

G_contig_1: rotating by 3,330,650 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,531,781 bp)

H_contig_2: rotating by 2,905,176 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,531,785 bp)

I_contig_2: rotating by 3,593,368 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,531,793 bp)

J_contig_3: rotating by 1,513,036 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,531,782 bp)

K_contig_2: rotating by 803,699 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,531,776 bp)

L_utg000001c: rotating by 2,963,880 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,532,411 bp)

O_utg000001c: rotating by 4,799,673 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,531,942 bp)

P_utg000001c: rotating by 1,561,214 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,531,911 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 06:29:13)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   A_Utg1192 vs B_Utg1120...    99.961% overall identity, 62.2% worst-1kbp identity
   A_Utg1192 vs C_Utg1092...    99.954% overall identity, 59.7% worst-1kbp identity
   A_Utg1192 vs D_Utg1120...    99.941% overall identity, 59.6% worst-1kbp identity
   A_Utg1192 vs F_contig_1...   99.960% overall identity, 59.7% worst-1kbp identity
   A_Utg1192 vs G_contig_1...   99.960% overall identity, 59.7% worst-1kbp identity
   A_Utg1192 vs H_contig_2...   99.960% overall identity, 59.7% worst-1kbp identity
   A_Utg1192 vs I_contig_2...   99.959% overall identity, 59.7% worst-1kbp identity
   A_Utg1192 vs J_contig_3...   99.959% overall identity, 59.7% worst-1kbp identity
   A_Utg1192 vs K_contig_2...   99.959% overall identity, 59.7% worst-1kbp identity
   A_Utg1192 vs L_utg000001c... 99.952% overall identity, 59.7% worst-1kbp identity
   A_Utg1192 vs O_utg000001c... 99.959% overall identity, 59.7% worst-1kbp identity
   A_Utg1192 vs P_utg000001c... 99.960% overall identity, 59.7% worst-1kbp identity
   B_Utg1120 vs C_Utg1092...    99.954% overall identity, 60.0% worst-1kbp identity
   B_Utg1120 vs D_Utg1120...    99.938% overall identity, 59.9% worst-1kbp identity
   B_Utg1120 vs F_contig_1...   99.958% overall identity, 60.0% worst-1kbp identity
   B_Utg1120 vs G_contig_1...   99.958% overall identity, 60.0% worst-1kbp identity
   B_Utg1120 vs H_contig_2...   99.959% overall identity, 60.0% worst-1kbp identity
   B_Utg1120 vs I_contig_2...   99.958% overall identity, 60.0% worst-1kbp identity
   B_Utg1120 vs J_contig_3...   99.958% overall identity, 60.0% worst-1kbp identity
   B_Utg1120 vs K_contig_2...   99.957% overall identity, 60.0% worst-1kbp identity
   B_Utg1120 vs L_utg000001c... 99.950% overall identity, 60.0% worst-1kbp identity
   B_Utg1120 vs O_utg000001c... 99.957% overall identity, 60.0% worst-1kbp identity
   B_Utg1120 vs P_utg000001c... 99.957% overall identity, 60.0% worst-1kbp identity
   C_Utg1092 vs D_Utg1120...    99.951% overall identity, 66.1% worst-1kbp identity
   C_Utg1092 vs F_contig_1...   99.967% overall identity, 66.0% worst-1kbp identity
   C_Utg1092 vs G_contig_1...   99.968% overall identity, 66.0% worst-1kbp identity
   C_Utg1092 vs H_contig_2...   99.969% overall identity, 66.1% worst-1kbp identity
   C_Utg1092 vs I_contig_2...   99.968% overall identity, 66.1% worst-1kbp identity
   C_Utg1092 vs J_contig_3...   99.968% overall identity, 66.1% worst-1kbp identity
   C_Utg1092 vs K_contig_2...   99.967% overall identity, 66.1% worst-1kbp identity
   C_Utg1092 vs L_utg000001c... 99.959% overall identity, 65.6% worst-1kbp identity
   C_Utg1092 vs O_utg000001c... 99.967% overall identity, 66.1% worst-1kbp identity
   C_Utg1092 vs P_utg000001c... 99.967% overall identity, 66.1% worst-1kbp identity
   D_Utg1120 vs F_contig_1...   99.965% overall identity, 73.9% worst-1kbp identity
   D_Utg1120 vs G_contig_1...   99.965% overall identity, 73.9% worst-1kbp identity
   D_Utg1120 vs H_contig_2...   99.965% overall identity, 73.9% worst-1kbp identity
   D_Utg1120 vs I_contig_2...   99.966% overall identity, 73.9% worst-1kbp identity
   D_Utg1120 vs J_contig_3...   99.966% overall identity, 73.9% worst-1kbp identity
   D_Utg1120 vs K_contig_2...   99.965% overall identity, 73.9% worst-1kbp identity
   D_Utg1120 vs L_utg000001c... 99.956% overall identity, 65.7% worst-1kbp identity
   D_Utg1120 vs O_utg000001c... 99.966% overall identity, 73.9% worst-1kbp identity
   D_Utg1120 vs P_utg000001c... 99.965% overall identity, 73.9% worst-1kbp identity
  F_contig_1 vs G_contig_1...   99.997% overall identity, 99.8% worst-1kbp identity
  F_contig_1 vs H_contig_2...   99.993% overall identity, 99.7% worst-1kbp identity
  F_contig_1 vs I_contig_2...   99.993% overall identity, 99.6% worst-1kbp identity
  F_contig_1 vs J_contig_3...   99.994% overall identity, 99.7% worst-1kbp identity
  F_contig_1 vs K_contig_2...   99.995% overall identity, 99.7% worst-1kbp identity
  F_contig_1 vs L_utg000001c... 99.981% overall identity, 65.7% worst-1kbp identity
  F_contig_1 vs O_utg000001c... 99.988% overall identity, 99.5% worst-1kbp identity
  F_contig_1 vs P_utg000001c... 99.990% overall identity, 99.5% worst-1kbp identity
  G_contig_1 vs H_contig_2...   99.994% overall identity, 99.7% worst-1kbp identity
  G_contig_1 vs I_contig_2...   99.993% overall identity, 99.6% worst-1kbp identity
  G_contig_1 vs J_contig_3...   99.993% overall identity, 99.7% worst-1kbp identity
  G_contig_1 vs K_contig_2...   99.994% overall identity, 99.7% worst-1kbp identity
  G_contig_1 vs L_utg000001c... 99.981% overall identity, 65.7% worst-1kbp identity
  G_contig_1 vs O_utg000001c... 99.988% overall identity, 99.5% worst-1kbp identity
  G_contig_1 vs P_utg000001c... 99.990% overall identity, 99.5% worst-1kbp identity
  H_contig_2 vs I_contig_2...   99.994% overall identity, 99.7% worst-1kbp identity
  H_contig_2 vs J_contig_3...   99.993% overall identity, 99.7% worst-1kbp identity
  H_contig_2 vs K_contig_2...   99.993% overall identity, 99.7% worst-1kbp identity
  H_contig_2 vs L_utg000001c... 99.981% overall identity, 65.7% worst-1kbp identity
  H_contig_2 vs O_utg000001c... 99.989% overall identity, 99.5% worst-1kbp identity
  H_contig_2 vs P_utg000001c... 99.989% overall identity, 99.5% worst-1kbp identity
  I_contig_2 vs J_contig_3...   99.995% overall identity, 99.7% worst-1kbp identity
  I_contig_2 vs K_contig_2...   99.994% overall identity, 99.7% worst-1kbp identity
  I_contig_2 vs L_utg000001c... 99.980% overall identity, 65.7% worst-1kbp identity
  I_contig_2 vs O_utg000001c... 99.990% overall identity, 99.5% worst-1kbp identity
  I_contig_2 vs P_utg000001c... 99.989% overall identity, 99.5% worst-1kbp identity
  J_contig_3 vs K_contig_2...   99.997% overall identity, 99.8% worst-1kbp identity
  J_contig_3 vs L_utg000001c... 99.980% overall identity, 65.7% worst-1kbp identity
  J_contig_3 vs O_utg000001c... 99.990% overall identity, 99.5% worst-1kbp identity
  J_contig_3 vs P_utg000001c... 99.990% overall identity, 99.4% worst-1kbp identity
  K_contig_2 vs L_utg000001c... 99.980% overall identity, 65.7% worst-1kbp identity
  K_contig_2 vs O_utg000001c... 99.990% overall identity, 99.5% worst-1kbp identity
  K_contig_2 vs P_utg000001c... 99.990% overall identity, 99.4% worst-1kbp identity
L_utg000001c vs O_utg000001c... 99.980% overall identity, 65.7% worst-1kbp identity
L_utg000001c vs P_utg000001c... 99.980% overall identity, 65.7% worst-1kbp identity
O_utg000001c vs P_utg000001c... 99.989% overall identity, 99.3% worst-1kbp identity

Overall pairwise identities:
  A_Utg1192:    [2m100.000%[0m   99.961%   99.954%   99.941%   99.960%   99.960%   99.960%   99.959%   99.959%   99.959%   99.952%   99.959%   99.960%
  B_Utg1120:     99.961%  [2m100.000%[0m   99.954%   99.938%   99.958%   99.958%   99.959%   99.958%   99.958%   99.957%   99.950%   99.957%   99.957%
  C_Utg1092:     99.954%   99.954%  [2m100.000%[0m   99.951%   99.967%   99.968%   99.969%   99.968%   99.968%   99.967%   99.959%   99.967%   99.967%
  D_Utg1120:     99.941%   99.938%   99.951%  [2m100.000%[0m   99.965%   99.965%   99.965%   99.966%   99.966%   99.965%   99.956%   99.966%   99.965%
  F_contig_1:    99.960%   99.958%   99.967%   99.965%  [2m100.000%[0m   99.997%   99.993%   99.993%   99.994%   99.995%   99.981%   99.988%   99.990%
  G_contig_1:    99.960%   99.958%   99.968%   99.965%   99.997%  [2m100.000%[0m   99.994%   99.993%   99.993%   99.994%   99.981%   99.988%   99.990%
  H_contig_2:    99.960%   99.959%   99.969%   99.965%   99.993%   99.994%  [2m100.000%[0m   99.994%   99.993%   99.993%   99.981%   99.989%   99.989%
  I_contig_2:    99.959%   99.958%   99.968%   99.966%   99.993%   99.993%   99.994%  [2m100.000%[0m   99.995%   99.994%   99.980%   99.990%   99.989%
  J_contig_3:    99.959%   99.958%   99.968%   99.966%   99.994%   99.993%   99.993%   99.995%  [2m100.000%[0m   99.997%   99.980%   99.990%   99.990%
  K_contig_2:    99.959%   99.957%   99.967%   99.965%   99.995%   99.994%   99.993%   99.994%   99.997%  [2m100.000%[0m   99.980%   99.990%   99.990%
  L_utg000001c:  99.952%   99.950%   99.959%   99.956%   99.981%   99.981%   99.981%   99.980%   99.980%   99.980%  [2m100.000%[0m   99.980%   99.980%
  O_utg000001c:  99.959%   99.957%   99.967%   99.966%   99.988%   99.988%   99.989%   99.990%   99.990%   99.990%   99.980%  [2m100.000%[0m   99.989%
  P_utg000001c:  99.960%   99.957%   99.967%   99.965%   99.990%   99.990%   99.989%   99.989%   99.990%   99.990%   99.980%   99.989%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  A_Utg1192:    [2m100.0%[0m   62.2%   59.7%   59.6%   59.7%   59.7%   59.7%   59.7%   59.7%   59.7%   59.7%   59.7%   59.7%
  B_Utg1120:     62.2%  [2m100.0%[0m   60.0%   59.9%   60.0%   60.0%   60.0%   60.0%   60.0%   60.0%   60.0%   60.0%   60.0%
  C_Utg1092:     59.7%   60.0%  [2m100.0%[0m   66.1%   66.0%   66.0%   66.1%   66.1%   66.1%   66.1%   65.6%   66.1%   66.1%
  D_Utg1120:     59.6%   59.9%   66.1%  [2m100.0%[0m   73.9%   73.9%   73.9%   73.9%   73.9%   73.9%   65.7%   73.9%   73.9%
  F_contig_1:    59.7%   60.0%   66.0%   73.9%  [2m100.0%[0m   99.8%   99.7%   99.6%   99.7%   99.7%   65.7%   99.5%   99.5%
  G_contig_1:    59.7%   60.0%   66.0%   73.9%   99.8%  [2m100.0%[0m   99.7%   99.6%   99.7%   99.7%   65.7%   99.5%   99.5%
  H_contig_2:    59.7%   60.0%   66.1%   73.9%   99.7%   99.7%  [2m100.0%[0m   99.7%   99.7%   99.7%   65.7%   99.5%   99.5%
  I_contig_2:    59.7%   60.0%   66.1%   73.9%   99.6%   99.6%   99.7%  [2m100.0%[0m   99.7%   99.7%   65.7%   99.5%   99.5%
  J_contig_3:    59.7%   60.0%   66.1%   73.9%   99.7%   99.7%   99.7%   99.7%  [2m100.0%[0m   99.8%   65.7%   99.5%   99.4%
  K_contig_2:    59.7%   60.0%   66.1%   73.9%   99.7%   99.7%   99.7%   99.7%   99.8%  [2m100.0%[0m   65.7%   99.5%   99.4%
  L_utg000001c:  59.7%   60.0%   65.6%   65.7%   65.7%   65.7%   65.7%   65.7%   65.7%   65.7%  [2m100.0%[0m   65.7%   65.7%
  O_utg000001c:  59.7%   60.0%   66.1%   73.9%   99.5%   99.5%   99.5%   99.5%   99.5%   99.5%   65.7%  [2m100.0%[0m   99.3%
  P_utg000001c:  59.7%   60.0%   66.1%   73.9%   99.5%   99.5%   99.5%   99.5%   99.4%   99.4%   65.7%   99.3%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 06:36:06)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/BKREGE/cluster_001/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 06:36:06)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/BKREGE_0.fastq.gz
  size = 407,788,601 bytes

Input contigs:
  results/clusters/BKREGE/cluster_002/1_contigs/B_Utg1122.fasta (192,580 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/C_Utg1094.fasta (192,725 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/F_contig_2.fasta (193,156 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/G_contig_2.fasta (193,161 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/H_contig_1.fasta (193,159 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/I_contig_1.fasta (193,122 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/J_contig_2.fasta (193,162 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/K_contig_3.fasta (193,159 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/L_utg000002c.fasta (193,163 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/M_utg000002c.fasta (192,815 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/N_utg000002c.fasta (193,160 bp)
  results/clusters/BKREGE/cluster_002/1_contigs/P_utg000003c.fasta (192,815 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 06:36:06)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  B_Utg1122:    [2m1.000[0m  0.999  0.997  0.997  0.997  0.997  0.997  0.997  0.997  0.999  0.997  0.999
  C_Utg1094:    1.001  [2m1.000[0m  0.998  0.998  0.998  0.998  0.998  0.998  0.998  1.000  0.998  1.000
  F_contig_2:   1.003  1.002  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.002  1.000  1.002
  G_contig_2:   1.003  1.002  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.002  1.000  1.002
  H_contig_1:   1.003  1.002  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.002  1.000  1.002
  I_contig_1:   1.003  1.002  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.002  1.000  1.002
  J_contig_2:   1.003  1.002  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.002  1.000  1.002
  K_contig_3:   1.003  1.002  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.002  1.000  1.002
  L_utg000002c: 1.003  1.002  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.002  1.000  1.002
  M_utg000002c: 1.001  1.000  0.998  0.998  0.998  0.998  0.998  0.998  0.998  [2m1.000[0m  0.998  1.000
  N_utg000002c: 1.003  1.002  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.002  [2m1.000[0m  1.002
  P_utg000003c: 1.001  1.000  0.998  0.998  0.998  0.998  0.998  0.998  0.998  1.000  0.998  [2m1.000[0m

Mash distances:
  B_Utg1122:    [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  C_Utg1094:    0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  F_contig_2:   0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_2:   0.000  0.001  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  H_contig_1:   0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  I_contig_1:   0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  J_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  K_contig_3:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  L_utg000002c: 0.000  0.001  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  M_utg000002c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  N_utg000002c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000003c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 06:36:07)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  GGTTCCTGCGGCCATCTCCAGCACCGTACAGGTTTCCCCCAATATCGCCC
  GATGGGTGACGGTACCCCGATCGTCAAAATTCAGCACCACGAAACGACCC
  CTTAATGGCAACAGTAGCTCGAAGGTGTGAGGGTGTCGGTGCGGGCGCAC
  GTAGGTCCCAGGTCATATTCCTTCCGGCGTCCGGCATTTTACCGCCAGAC
  AGCTCGGGATTCGTGATATCACCGTTCTTGCAGAATACGGTCAGAGGGAA

B_Utg1122:    + strand (using original sequence)
C_Utg1094:    + strand (using original sequence)
F_contig_2:   + strand (using original sequence)
G_contig_2:   - strand (using reverse complement)
H_contig_1:   + strand (using original sequence)
I_contig_1:   + strand (using original sequence)
J_contig_2:   + strand (using original sequence)
K_contig_3:   + strand (using original sequence)
L_utg000002c: - strand (using reverse complement)
M_utg000002c: + strand (using original sequence)
N_utg000002c: + strand (using original sequence)
P_utg000003c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 06:36:08)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising B_Utg1122:
  using C_Utg1094:
    unable to circularise: B_Utg1122's end could not be found in C_Utg1094
  using F_contig_2:
    no adjustment needed (B_Utg1122 is already circular)
  using G_contig_2:
    no adjustment needed (B_Utg1122 is already circular)
  using H_contig_1:
    no adjustment needed (B_Utg1122 is already circular)
  using I_contig_1:
    unable to circularise: B_Utg1122's end could not be found in I_contig_1
  using J_contig_2:
    no adjustment needed (B_Utg1122 is already circular)
  using K_contig_3:
    no adjustment needed (B_Utg1122 is already circular)
  using L_utg000002c:
    no adjustment needed (B_Utg1122 is already circular)
  using M_utg000002c:
    no adjustment needed (B_Utg1122 is already circular)
  using N_utg000002c:
    no adjustment needed (B_Utg1122 is already circular)
  using P_utg000003c:
    no adjustment needed (B_Utg1122 is already circular)
  circularisation complete (192,580 bp)

Circularising C_Utg1094:
  using B_Utg1122:
    unable to circularise: C_Utg1094's start could not be found in B_Utg1122
  using F_contig_2:
    no adjustment needed (C_Utg1094 is already circular)
  using G_contig_2:
    no adjustment needed (C_Utg1094 is already circular)
  using H_contig_1:
    no adjustment needed (C_Utg1094 is already circular)
  using I_contig_1:
    unable to circularise: C_Utg1094's start/end is the same as I_contig_1's start/end
  using J_contig_2:
    no adjustment needed (C_Utg1094 is already circular)
  using K_contig_3:
    no adjustment needed (C_Utg1094 is already circular)
  using L_utg000002c:
    no adjustment needed (C_Utg1094 is already circular)
  using M_utg000002c:
    no adjustment needed (C_Utg1094 is already circular)
  using N_utg000002c:
    no adjustment needed (C_Utg1094 is already circular)
  using P_utg000003c:
    no adjustment needed (C_Utg1094 is already circular)
  circularisation complete (192,725 bp)

Circularising F_contig_2:
  using B_Utg1122:
    no adjustment needed (F_contig_2 is already circular)
  using C_Utg1094:
    no adjustment needed (F_contig_2 is already circular)
  using G_contig_2:
    no adjustment needed (F_contig_2 is already circular)
  using H_contig_1:
    no adjustment needed (F_contig_2 is already circular)
  using I_contig_1:
    no adjustment needed (F_contig_2 is already circular)
  using J_contig_2:
    unable to circularise: F_contig_2's end could not be found in J_contig_2
  using K_contig_3:
    no adjustment needed (F_contig_2 is already circular)
  using L_utg000002c:
    no adjustment needed (F_contig_2 is already circular)
  using M_utg000002c:
    no adjustment needed (F_contig_2 is already circular)
  using N_utg000002c:
    no adjustment needed (F_contig_2 is already circular)
  using P_utg000003c:
    no adjustment needed (F_contig_2 is already circular)
  circularisation complete (193,156 bp)

Circularising G_contig_2:
  using B_Utg1122:
    no adjustment needed (G_contig_2 is already circular)
  using C_Utg1094:
    no adjustment needed (G_contig_2 is already circular)
  using F_contig_2:
    no adjustment needed (G_contig_2 is already circular)
  using H_contig_1:
    no adjustment needed (G_contig_2 is already circular)
  using I_contig_1:
    no adjustment needed (G_contig_2 is already circular)
  using J_contig_2:
    no adjustment needed (G_contig_2 is already circular)
  using K_contig_3:
    no adjustment needed (G_contig_2 is already circular)
  using L_utg000002c:
    no adjustment needed (G_contig_2 is already circular)
  using M_utg000002c:
    no adjustment needed (G_contig_2 is already circular)
  using N_utg000002c:
    no adjustment needed (G_contig_2 is already circular)
  using P_utg000003c:
    no adjustment needed (G_contig_2 is already circular)
  circularisation complete (193,161 bp)

Circularising H_contig_1:
  using B_Utg1122:
    no adjustment needed (H_contig_1 is already circular)
  using C_Utg1094:
    no adjustment needed (H_contig_1 is already circular)
  using F_contig_2:
    no adjustment needed (H_contig_1 is already circular)
  using G_contig_2:
    no adjustment needed (H_contig_1 is already circular)
  using I_contig_1:
    no adjustment needed (H_contig_1 is already circular)
  using J_contig_2:
    no adjustment needed (H_contig_1 is already circular)
  using K_contig_3:
    no adjustment needed (H_contig_1 is already circular)
  using L_utg000002c:
    no adjustment needed (H_contig_1 is already circular)
  using M_utg000002c:
    no adjustment needed (H_contig_1 is already circular)
  using N_utg000002c:
    no adjustment needed (H_contig_1 is already circular)
  using P_utg000003c:
    no adjustment needed (H_contig_1 is already circular)
  circularisation complete (193,159 bp)

Circularising I_contig_1:
  using B_Utg1122:
    unable to circularise: I_contig_1's start could not be found in B_Utg1122
  using C_Utg1094:
    unable to circularise: I_contig_1's start/end is the same as C_Utg1094's start/end
  using F_contig_2:
    circularising I_contig_1 by adding 37 bp of sequence from F_contig_2 (22671-22708)
  using G_contig_2:
    circularising I_contig_1 by adding 37 bp of sequence from G_contig_2 (157306-157343)
  using H_contig_1:
    circularising I_contig_1 by adding 37 bp of sequence from H_contig_1 (33822-33859)
  using J_contig_2:
    circularising I_contig_1 by adding 37 bp of sequence from J_contig_2 (22769-22806)
  using K_contig_3:
    circularising I_contig_1 by adding 37 bp of sequence from K_contig_3 (182196-182233)
  using L_utg000002c:
    circularising I_contig_1 by adding 37 bp of sequence from L_utg000002c (145960-145997)
  using M_utg000002c:
    circularising I_contig_1 by adding 37 bp of sequence from M_utg000002c (140553-140590)
  using N_utg000002c:
    circularising I_contig_1 by adding 37 bp of sequence from N_utg000002c (140870-140907)
  using P_utg000003c:
    circularising I_contig_1 by adding 37 bp of sequence from P_utg000003c (47576-47613)
  circularisation complete (193,159 bp)

Circularising J_contig_2:
  using B_Utg1122:
    no adjustment needed (J_contig_2 is already circular)
  using C_Utg1094:
    no adjustment needed (J_contig_2 is already circular)
  using F_contig_2:
    unable to circularise: J_contig_2's start could not be found in F_contig_2
  using G_contig_2:
    no adjustment needed (J_contig_2 is already circular)
  using H_contig_1:
    no adjustment needed (J_contig_2 is already circular)
  using I_contig_1:
    no adjustment needed (J_contig_2 is already circular)
  using K_contig_3:
    no adjustment needed (J_contig_2 is already circular)
  using L_utg000002c:
    no adjustment needed (J_contig_2 is already circular)
  using M_utg000002c:
    no adjustment needed (J_contig_2 is already circular)
  using N_utg000002c:
    no adjustment needed (J_contig_2 is already circular)
  using P_utg000003c:
    no adjustment needed (J_contig_2 is already circular)
  circularisation complete (193,162 bp)

Circularising K_contig_3:
  using B_Utg1122:
    no adjustment needed (K_contig_3 is already circular)
  using C_Utg1094:
    no adjustment needed (K_contig_3 is already circular)
  using F_contig_2:
    no adjustment needed (K_contig_3 is already circular)
  using G_contig_2:
    no adjustment needed (K_contig_3 is already circular)
  using H_contig_1:
    no adjustment needed (K_contig_3 is already circular)
  using I_contig_1:
    no adjustment needed (K_contig_3 is already circular)
  using J_contig_2:
    no adjustment needed (K_contig_3 is already circular)
  using L_utg000002c:
    no adjustment needed (K_contig_3 is already circular)
  using M_utg000002c:
    no adjustment needed (K_contig_3 is already circular)
  using N_utg000002c:
    no adjustment needed (K_contig_3 is already circular)
  using P_utg000003c:
    no adjustment needed (K_contig_3 is already circular)
  circularisation complete (193,159 bp)

Circularising L_utg000002c:
  using B_Utg1122:
    no adjustment needed (L_utg000002c is already circular)
  using C_Utg1094:
    no adjustment needed (L_utg000002c is already circular)
  using F_contig_2:
    no adjustment needed (L_utg000002c is already circular)
  using G_contig_2:
    no adjustment needed (L_utg000002c is already circular)
  using H_contig_1:
    no adjustment needed (L_utg000002c is already circular)
  using I_contig_1:
    no adjustment needed (L_utg000002c is already circular)
  using J_contig_2:
    no adjustment needed (L_utg000002c is already circular)
  using K_contig_3:
    no adjustment needed (L_utg000002c is already circular)
  using M_utg000002c:
    no adjustment needed (L_utg000002c is already circular)
  using N_utg000002c:
    no adjustment needed (L_utg000002c is already circular)
  using P_utg000003c:
    no adjustment needed (L_utg000002c is already circular)
  circularisation complete (193,163 bp)

Circularising M_utg000002c:
  using B_Utg1122:
    no adjustment needed (M_utg000002c is already circular)
  using C_Utg1094:
    no adjustment needed (M_utg000002c is already circular)
  using F_contig_2:
    no adjustment needed (M_utg000002c is already circular)
  using G_contig_2:
    no adjustment needed (M_utg000002c is already circular)
  using H_contig_1:
    no adjustment needed (M_utg000002c is already circular)
  using I_contig_1:
    no adjustment needed (M_utg000002c is already circular)
  using J_contig_2:
    no adjustment needed (M_utg000002c is already circular)
  using K_contig_3:
    no adjustment needed (M_utg000002c is already circular)
  using L_utg000002c:
    no adjustment needed (M_utg000002c is already circular)
  using N_utg000002c:
    unable to circularise: M_utg000002c's start/end is the same as N_utg000002c's start/end
  using P_utg000003c:
    no adjustment needed (M_utg000002c is already circular)
  circularisation complete (192,815 bp)

Circularising N_utg000002c:
  using B_Utg1122:
    no adjustment needed (N_utg000002c is already circular)
  using C_Utg1094:
    no adjustment needed (N_utg000002c is already circular)
  using F_contig_2:
    no adjustment needed (N_utg000002c is already circular)
  using G_contig_2:
    no adjustment needed (N_utg000002c is already circular)
  using H_contig_1:
    no adjustment needed (N_utg000002c is already circular)
  using I_contig_1:
    no adjustment needed (N_utg000002c is already circular)
  using J_contig_2:
    no adjustment needed (N_utg000002c is already circular)
  using K_contig_3:
    no adjustment needed (N_utg000002c is already circular)
  using L_utg000002c:
    no adjustment needed (N_utg000002c is already circular)
  using M_utg000002c:
    unable to circularise: N_utg000002c's start/end is the same as M_utg000002c's start/end
  using P_utg000003c:
    no adjustment needed (N_utg000002c is already circular)
  circularisation complete (193,160 bp)

Circularising P_utg000003c:
  using B_Utg1122:
    no adjustment needed (P_utg000003c is already circular)
  using C_Utg1094:
    no adjustment needed (P_utg000003c is already circular)
  using F_contig_2:
    no adjustment needed (P_utg000003c is already circular)
  using G_contig_2:
    no adjustment needed (P_utg000003c is already circular)
  using H_contig_1:
    no adjustment needed (P_utg000003c is already circular)
  using I_contig_1:
    no adjustment needed (P_utg000003c is already circular)
  using J_contig_2:
    no adjustment needed (P_utg000003c is already circular)
  using K_contig_3:
    no adjustment needed (P_utg000003c is already circular)
  using L_utg000002c:
    no adjustment needed (P_utg000003c is already circular)
  using M_utg000002c:
    no adjustment needed (P_utg000003c is already circular)
  using N_utg000002c:
    no adjustment needed (P_utg000003c is already circular)
  circularisation complete (192,815 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 06:36:14)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0014_A6D67_RS27660 (replication initiation protein)
  ATGACGAGCGAAAATAACAGCTTACTTCTGAACCTTCAGGAAGTTGATAA...

B_Utg1122:    + strand (using original sequence)
C_Utg1094:    + strand (using original sequence)
F_contig_2:   + strand (using original sequence)
G_contig_2:   + strand (using original sequence)
H_contig_1:   + strand (using original sequence)
I_contig_1:   + strand (using original sequence)
J_contig_2:   + strand (using original sequence)
K_contig_3:   + strand (using original sequence)
L_utg000002c: + strand (using original sequence)
M_utg000002c: + strand (using original sequence)
N_utg000002c: + strand (using original sequence)
P_utg000003c: + strand (using original sequence)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 06:36:15)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

B_Utg1122: rotating by 73,092 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (192,580 bp)

C_Utg1094: rotating by 73,173 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (192,725 bp)

F_contig_2: rotating by 95,739 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (193,156 bp)

G_contig_2: rotating by 37,215 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (193,161 bp)

H_contig_1: rotating by 106,892 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (193,159 bp)

I_contig_1: rotating by 73,034 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (193,159 bp)

J_contig_2: rotating by 95,841 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (193,162 bp)

K_contig_3: rotating by 62,110 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (193,159 bp)

L_utg000002c: rotating by 25,872 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (193,163 bp)

M_utg000002c: rotating by 20,811 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (192,815 bp)

N_utg000002c: rotating by 20,782 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (193,160 bp)

P_utg000003c: rotating by 120,648 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (192,815 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 06:36:16)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   B_Utg1122 vs C_Utg1094...    99.809% overall identity, 82.1% worst-1kbp identity
   B_Utg1122 vs F_contig_2...   99.487% overall identity, 61.3% worst-1kbp identity
   B_Utg1122 vs G_contig_2...   99.489% overall identity, 61.3% worst-1kbp identity
   B_Utg1122 vs H_contig_1...   99.486% overall identity, 61.3% worst-1kbp identity
   B_Utg1122 vs I_contig_1...   99.488% overall identity, 61.3% worst-1kbp identity
   B_Utg1122 vs J_contig_2...   99.489% overall identity, 61.3% worst-1kbp identity
   B_Utg1122 vs K_contig_3...   99.487% overall identity, 61.3% worst-1kbp identity
   B_Utg1122 vs L_utg000002c... 99.489% overall identity, 61.3% worst-1kbp identity
   B_Utg1122 vs M_utg000002c... 99.668% overall identity, 70.4% worst-1kbp identity
   B_Utg1122 vs N_utg000002c... 99.491% overall identity, 61.3% worst-1kbp identity
   B_Utg1122 vs P_utg000003c... 99.664% overall identity, 68.3% worst-1kbp identity
   C_Utg1094 vs F_contig_2...   99.634% overall identity, 65.6% worst-1kbp identity
   C_Utg1094 vs G_contig_2...   99.638% overall identity, 65.6% worst-1kbp identity
   C_Utg1094 vs H_contig_1...   99.636% overall identity, 65.6% worst-1kbp identity
   C_Utg1094 vs I_contig_1...   99.636% overall identity, 65.6% worst-1kbp identity
   C_Utg1094 vs J_contig_2...   99.635% overall identity, 65.6% worst-1kbp identity
   C_Utg1094 vs K_contig_3...   99.633% overall identity, 65.6% worst-1kbp identity
   C_Utg1094 vs L_utg000002c... 99.637% overall identity, 65.6% worst-1kbp identity
   C_Utg1094 vs M_utg000002c... 99.819% overall identity, 88.3% worst-1kbp identity
   C_Utg1094 vs N_utg000002c... 99.638% overall identity, 65.6% worst-1kbp identity
   C_Utg1094 vs P_utg000003c... 99.812% overall identity, 86.2% worst-1kbp identity
  F_contig_2 vs G_contig_2...   99.994% overall identity, 99.9% worst-1kbp identity
  F_contig_2 vs H_contig_1...   99.989% overall identity, 99.9% worst-1kbp identity
  F_contig_2 vs I_contig_1...   99.990% overall identity, 99.8% worst-1kbp identity
  F_contig_2 vs J_contig_2...   99.991% overall identity, 99.9% worst-1kbp identity
  F_contig_2 vs K_contig_3...   99.993% overall identity, 99.9% worst-1kbp identity
  F_contig_2 vs L_utg000002c... 99.986% overall identity, 99.7% worst-1kbp identity
  F_contig_2 vs M_utg000002c... 99.806% overall identity, 70.9% worst-1kbp identity
  F_contig_2 vs N_utg000002c... 99.984% overall identity, 99.8% worst-1kbp identity
  F_contig_2 vs P_utg000003c... 99.809% overall identity, 68.8% worst-1kbp identity
  G_contig_2 vs H_contig_1...   99.989% overall identity, 99.9% worst-1kbp identity
  G_contig_2 vs I_contig_1...   99.990% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs J_contig_2...   99.990% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs K_contig_3...   99.991% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs L_utg000002c... 99.989% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs M_utg000002c... 99.807% overall identity, 70.9% worst-1kbp identity
  G_contig_2 vs N_utg000002c... 99.987% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs P_utg000003c... 99.812% overall identity, 68.8% worst-1kbp identity
  H_contig_1 vs I_contig_1...   99.989% overall identity, 99.8% worst-1kbp identity
  H_contig_1 vs J_contig_2...   99.990% overall identity, 99.8% worst-1kbp identity
  H_contig_1 vs K_contig_3...   99.990% overall identity, 99.8% worst-1kbp identity
  H_contig_1 vs L_utg000002c... 99.985% overall identity, 99.7% worst-1kbp identity
  H_contig_1 vs M_utg000002c... 99.808% overall identity, 70.9% worst-1kbp identity
  H_contig_1 vs N_utg000002c... 99.983% overall identity, 99.8% worst-1kbp identity
  H_contig_1 vs P_utg000003c... 99.809% overall identity, 68.8% worst-1kbp identity
  I_contig_1 vs J_contig_2...   99.994% overall identity, 99.8% worst-1kbp identity
  I_contig_1 vs K_contig_3...   99.992% overall identity, 99.8% worst-1kbp identity
  I_contig_1 vs L_utg000002c... 99.984% overall identity, 99.7% worst-1kbp identity
  I_contig_1 vs M_utg000002c... 99.807% overall identity, 70.9% worst-1kbp identity
  I_contig_1 vs N_utg000002c... 99.986% overall identity, 99.8% worst-1kbp identity
  I_contig_1 vs P_utg000003c... 99.809% overall identity, 68.8% worst-1kbp identity
  J_contig_2 vs K_contig_3...   99.994% overall identity, 99.8% worst-1kbp identity
  J_contig_2 vs L_utg000002c... 99.985% overall identity, 99.7% worst-1kbp identity
  J_contig_2 vs M_utg000002c... 99.807% overall identity, 70.9% worst-1kbp identity
  J_contig_2 vs N_utg000002c... 99.984% overall identity, 99.8% worst-1kbp identity
  J_contig_2 vs P_utg000003c... 99.810% overall identity, 68.8% worst-1kbp identity
  K_contig_3 vs L_utg000002c... 99.988% overall identity, 99.7% worst-1kbp identity
  K_contig_3 vs M_utg000002c... 99.805% overall identity, 70.9% worst-1kbp identity
  K_contig_3 vs N_utg000002c... 99.985% overall identity, 99.8% worst-1kbp identity
  K_contig_3 vs P_utg000003c... 99.813% overall identity, 68.8% worst-1kbp identity
L_utg000002c vs M_utg000002c... 99.812% overall identity, 70.9% worst-1kbp identity
L_utg000002c vs N_utg000002c... 99.989% overall identity, 99.8% worst-1kbp identity
L_utg000002c vs P_utg000003c... 99.809% overall identity, 68.8% worst-1kbp identity
M_utg000002c vs N_utg000002c... 99.814% overall identity, 70.9% worst-1kbp identity
M_utg000002c vs P_utg000003c... 99.964% overall identity, 97.9% worst-1kbp identity
N_utg000002c vs P_utg000003c... 99.810% overall identity, 68.8% worst-1kbp identity

Overall pairwise identities:
  B_Utg1122:    [2m100.000%[0m   99.809%   99.487%   99.489%   99.486%   99.488%   99.489%   99.487%   99.489%   99.668%   99.491%   99.664%
  C_Utg1094:     99.809%  [2m100.000%[0m   99.634%   99.638%   99.636%   99.636%   99.635%   99.633%   99.637%   99.819%   99.638%   99.812%
  F_contig_2:    99.487%   99.634%  [2m100.000%[0m   99.994%   99.989%   99.990%   99.991%   99.993%   99.986%   99.806%   99.984%   99.809%
  G_contig_2:    99.489%   99.638%   99.994%  [2m100.000%[0m   99.989%   99.990%   99.990%   99.991%   99.989%   99.807%   99.987%   99.812%
  H_contig_1:    99.486%   99.636%   99.989%   99.989%  [2m100.000%[0m   99.989%   99.990%   99.990%   99.985%   99.808%   99.983%   99.809%
  I_contig_1:    99.488%   99.636%   99.990%   99.990%   99.989%  [2m100.000%[0m   99.994%   99.992%   99.984%   99.807%   99.986%   99.809%
  J_contig_2:    99.489%   99.635%   99.991%   99.990%   99.990%   99.994%  [2m100.000%[0m   99.994%   99.985%   99.807%   99.984%   99.810%
  K_contig_3:    99.487%   99.633%   99.993%   99.991%   99.990%   99.992%   99.994%  [2m100.000%[0m   99.988%   99.805%   99.985%   99.813%
  L_utg000002c:  99.489%   99.637%   99.986%   99.989%   99.985%   99.984%   99.985%   99.988%  [2m100.000%[0m   99.812%   99.989%   99.809%
  M_utg000002c:  99.668%   99.819%   99.806%   99.807%   99.808%   99.807%   99.807%   99.805%   99.812%  [2m100.000%[0m   99.814%   99.964%
  N_utg000002c:  99.491%   99.638%   99.984%   99.987%   99.983%   99.986%   99.984%   99.985%   99.989%   99.814%  [2m100.000%[0m   99.810%
  P_utg000003c:  99.664%   99.812%   99.809%   99.812%   99.809%   99.809%   99.810%   99.813%   99.809%   99.964%   99.810%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  B_Utg1122:    [2m100.0%[0m   82.1%   61.3%   61.3%   61.3%   61.3%   61.3%   61.3%   61.3%   70.4%   61.3%   68.3%
  C_Utg1094:     82.1%  [2m100.0%[0m   65.6%   65.6%   65.6%   65.6%   65.6%   65.6%   65.6%   88.3%   65.6%   86.2%
  F_contig_2:    61.3%   65.6%  [2m100.0%[0m   99.9%   99.9%   99.8%   99.9%   99.9%   99.7%   70.9%   99.8%   68.8%
  G_contig_2:    61.3%   65.6%   99.9%  [2m100.0%[0m   99.9%   99.8%   99.8%   99.8%   99.7%   70.9%   99.8%   68.8%
  H_contig_1:    61.3%   65.6%   99.9%   99.9%  [2m100.0%[0m   99.8%   99.8%   99.8%   99.7%   70.9%   99.8%   68.8%
  I_contig_1:    61.3%   65.6%   99.8%   99.8%   99.8%  [2m100.0%[0m   99.8%   99.8%   99.7%   70.9%   99.8%   68.8%
  J_contig_2:    61.3%   65.6%   99.9%   99.8%   99.8%   99.8%  [2m100.0%[0m   99.8%   99.7%   70.9%   99.8%   68.8%
  K_contig_3:    61.3%   65.6%   99.9%   99.8%   99.8%   99.8%   99.8%  [2m100.0%[0m   99.7%   70.9%   99.8%   68.8%
  L_utg000002c:  61.3%   65.6%   99.7%   99.7%   99.7%   99.7%   99.7%   99.7%  [2m100.0%[0m   70.9%   99.8%   68.8%
  M_utg000002c:  70.4%   88.3%   70.9%   70.9%   70.9%   70.9%   70.9%   70.9%   70.9%  [2m100.0%[0m   70.9%   97.9%
  N_utg000002c:  61.3%   65.6%   99.8%   99.8%   99.8%   99.8%   99.8%   99.8%   99.8%   70.9%  [2m100.0%[0m   68.8%
  P_utg000003c:  68.3%   86.2%   68.8%   68.8%   68.8%   68.8%   68.8%   68.8%   68.8%   97.9%   68.8%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 06:36:23)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/BKREGE/cluster_002/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 06:36:23)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/BKREGE_0.fastq.gz
  size = 407,788,601 bytes

Input contigs:
  results/clusters/BKREGE/cluster_003/1_contigs/F_contig_3.fasta (16,278 bp)
  results/clusters/BKREGE/cluster_003/1_contigs/G_contig_3.fasta (16,278 bp)
  results/clusters/BKREGE/cluster_003/1_contigs/H_contig_3.fasta (16,275 bp)
  results/clusters/BKREGE/cluster_003/1_contigs/I_contig_3.fasta (16,278 bp)
  results/clusters/BKREGE/cluster_003/1_contigs/J_contig_1.fasta (16,278 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 06:36:23)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  F_contig_3: [2m1.000[0m  1.000  1.000  1.000  1.000
  G_contig_3: 1.000  [2m1.000[0m  1.000  1.000  1.000
  H_contig_3: 1.000  1.000  [2m1.000[0m  1.000  1.000
  I_contig_3: 1.000  1.000  1.000  [2m1.000[0m  1.000
  J_contig_1: 1.000  1.000  1.000  1.000  [2m1.000[0m

Mash distances:
  F_contig_3: [2m0.000[0m  0.000  0.000  0.000  0.000
  G_contig_3: 0.000  [2m0.000[0m  0.000  0.000  0.000
  H_contig_3: 0.000  0.000  [2m0.000[0m  0.000  0.000
  I_contig_3: 0.000  0.000  0.000  [2m0.000[0m  0.000
  J_contig_1: 0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 06:36:23)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m


Error: unable to find a suitable common sequence
