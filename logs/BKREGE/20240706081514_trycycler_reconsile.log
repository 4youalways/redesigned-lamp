
[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 08:15:14)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAA8N9_0.fastq.gz
  size = 284,436,473 bytes

Input contigs:
  results/clusters/CAA8N9/cluster_001/1_contigs/A_Utg1226.fasta (5,530,816 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/B_Utg1222.fasta (5,530,980 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/C_Utg1264.fasta (5,527,781 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/D_Utg1180.fasta (5,529,069 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/E_Utg1184.fasta (5,529,728 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/F_contig_2.fasta (5,531,887 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/G_contig_4.fasta (5,531,896 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/H_contig_4.fasta (5,531,905 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/I_contig_1.fasta (5,531,898 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/J_contig_2.fasta (5,531,912 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/K_contig_2.fasta (5,531,894 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/L_utg000001c.fasta (5,532,013 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/M_utg000001c.fasta (5,532,240 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/N_utg000001c.fasta (5,532,057 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/O_utg000001c.fasta (5,532,331 bp)
  results/clusters/CAA8N9/cluster_001/1_contigs/P_utg000001c.fasta (5,532,061 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 08:15:15)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  A_Utg1226:    [2m1.000[0m  1.000  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  B_Utg1222:    1.000  [2m1.000[0m  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  C_Utg1264:    0.999  0.999  [2m1.000[0m  1.000  1.000  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999
  D_Utg1180:    1.000  1.000  1.000  [2m1.000[0m  1.000  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999
  E_Utg1184:    1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  F_contig_2:   1.000  1.000  1.001  1.001  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  G_contig_4:   1.000  1.000  1.001  1.001  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  H_contig_4:   1.000  1.000  1.001  1.001  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  I_contig_1:   1.000  1.000  1.001  1.001  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  J_contig_2:   1.000  1.000  1.001  1.001  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000
  K_contig_2:   1.000  1.000  1.001  1.001  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000
  L_utg000001c: 1.000  1.000  1.001  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000
  M_utg000001c: 1.000  1.000  1.001  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000
  N_utg000001c: 1.000  1.000  1.001  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000
  O_utg000001c: 1.000  1.000  1.001  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000
  P_utg000001c: 1.000  1.000  1.001  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m

Mash distances:
  A_Utg1226:    [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  B_Utg1222:    0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  C_Utg1264:    0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  D_Utg1180:    0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  E_Utg1184:    0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  F_contig_2:   0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_4:   0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  H_contig_4:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  I_contig_1:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  J_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  K_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  L_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  M_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  N_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  O_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 08:15:31)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  GAAGCGTTTTATTTGGGCGCTTCTGAGGAATACACTTGGGCGCTGGGACT
  CTGTAGCTTCCCCATTCGCCACGGCGGCCGCATGGAGATCATTAAGGCTA
  TAGCGTCCCTCATTGTCGACACGAACAGAGACGCCGTTTACTGATACGGT
  TGGATACTTCATCGTGTTTACCTTTCTGTGGTGTGAGCCTGCTCGCGTAG
  ACGTGGGCGGCCAAGAGCGGAACGATGAAATCCACCGCCCTGTCTCAGAC

A_Utg1226:    - strand (using reverse complement)
B_Utg1222:    - strand (using reverse complement)
C_Utg1264:    - strand (using reverse complement)
D_Utg1180:    - strand (using reverse complement)
E_Utg1184:    - strand (using reverse complement)
F_contig_2:   - strand (using reverse complement)
G_contig_4:   + strand (using original sequence)
H_contig_4:   + strand (using original sequence)
I_contig_1:   - strand (using reverse complement)
J_contig_2:   + strand (using original sequence)
K_contig_2:   - strand (using reverse complement)
L_utg000001c: - strand (using reverse complement)
M_utg000001c: + strand (using original sequence)
N_utg000001c: + strand (using original sequence)
O_utg000001c: + strand (using original sequence)
P_utg000001c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 08:15:46)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising A_Utg1226:
  using B_Utg1222:
    unable to circularise: A_Utg1226's start could not be found in B_Utg1222
  using C_Utg1264:
    unable to circularise: A_Utg1226's end could not be found in C_Utg1264
  using D_Utg1180:
    unable to circularise: A_Utg1226's end could not be found in D_Utg1180
  using E_Utg1184:
    unable to circularise: A_Utg1226's start/end is the same as E_Utg1184's start/end
  using F_contig_2:
    circularising A_Utg1226 by adding 1907 bp of sequence from F_contig_2 (1051393-1053300)
  using G_contig_4:
    circularising A_Utg1226 by adding 1908 bp of sequence from G_contig_4 (3871393-3873301)
  using H_contig_4:
    circularising A_Utg1226 by adding 1908 bp of sequence from H_contig_4 (5410745-5412653)
  using I_contig_1:
    circularising A_Utg1226 by adding 1908 bp of sequence from I_contig_1 (3888812-3890720)
  using J_contig_2:
    circularising A_Utg1226 by adding 1908 bp of sequence from J_contig_2 (459519-461427)
  using K_contig_2:
    circularising A_Utg1226 by adding 1908 bp of sequence from K_contig_2 (157329-159237)
  using L_utg000001c:
    circularising A_Utg1226 by adding 1908 bp of sequence from L_utg000001c (4467443-4469351)
  using M_utg000001c:
    circularising A_Utg1226 by adding 1908 bp of sequence from M_utg000001c (2966478-2968386)
  using N_utg000001c:
    circularising A_Utg1226 by adding 1908 bp of sequence from N_utg000001c (4926107-4928015)
  using O_utg000001c:
    circularising A_Utg1226 by adding 1909 bp of sequence from O_utg000001c (1132097-1134006)
  using P_utg000001c:
    circularising A_Utg1226 by adding 1908 bp of sequence from P_utg000001c (2964804-2966712)
  choosing most common circularisation
  circularisation complete (5,532,724 bp)

Circularising B_Utg1222:
  using A_Utg1226:
    unable to circularise: B_Utg1222's start/end is the same as A_Utg1226's start/end
  using C_Utg1264:
    unable to circularise: B_Utg1222's end could not be found in C_Utg1264
  using D_Utg1180:
    unable to circularise: B_Utg1222's end could not be found in D_Utg1180
  using E_Utg1184:
    unable to circularise: cannot determine trim amount
  using F_contig_2:
    circularising B_Utg1222 by adding 2271 bp of sequence from F_contig_2 (1051393-1053664)
  using G_contig_4:
    circularising B_Utg1222 by adding 2272 bp of sequence from G_contig_4 (3871393-3873665)
  using H_contig_4:
    circularising B_Utg1222 by adding 2272 bp of sequence from H_contig_4 (5410745-5413017)
  using I_contig_1:
    circularising B_Utg1222 by adding 2272 bp of sequence from I_contig_1 (3888812-3891084)
  using J_contig_2:
    circularising B_Utg1222 by adding 2272 bp of sequence from J_contig_2 (459519-461791)
  using K_contig_2:
    circularising B_Utg1222 by adding 2272 bp of sequence from K_contig_2 (157329-159601)
  using L_utg000001c:
Traceback (most recent call last):
  File "/usr/local/bin/trycycler", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.10/dist-packages/trycycler/__main__.py", line 48, in main
    reconcile(args)
  File "/usr/local/lib/python3.10/dist-packages/trycycler/reconcile.py", line 36, in reconcile
    seqs = circularise(seqs, args)
  File "/usr/local/lib/python3.10/dist-packages/trycycler/circularisation.py", line 33, in circularise
    circularised_seq = circularise_seq_with_others(name, seqs, args)
  File "/usr/local/lib/python3.10/dist-packages/trycycler/circularisation.py", line 47, in circularise_seq_with_others
    circularise_seq_with_another(seq_a, seq_b, name_a, name_b, args)
  File "/usr/local/lib/python3.10/dist-packages/trycycler/circularisation.py", line 117, in circularise_seq_with_another
    find_end_and_start(seq_a, seq_b, name_a, name_b, args)
  File "/usr/local/lib/python3.10/dist-packages/trycycler/circularisation.py", line 195, in find_end_and_start
    end_alignments = align_a_to_b(end_seq, seq_b, preset='map-ont')
  File "/usr/local/lib/python3.10/dist-packages/trycycler/alignment.py", line 71, in align_a_to_b
    write_seq_to_fasta(seq_b, 'B', temp_b)
  File "/usr/local/lib/python3.10/dist-packages/trycycler/misc.py", line 161, in write_seq_to_fasta
    f.write(f'{seq.upper()}\n')
KeyboardInterrupt
