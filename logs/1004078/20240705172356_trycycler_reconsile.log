
[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-05 17:23:57)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/1004078_0.fastq.gz
  size = 243,197,721 bytes

Input contigs:
  results/clusters/1004078/cluster_001/1_contigs/A_Utg996.fasta (5,337,410 bp)
  results/clusters/1004078/cluster_001/1_contigs/B_Utg1032.fasta (5,337,094 bp)
  results/clusters/1004078/cluster_001/1_contigs/C_Utg1014.fasta (5,334,266 bp)
  results/clusters/1004078/cluster_001/1_contigs/D_Utg1018.fasta (5,335,428 bp)
  results/clusters/1004078/cluster_001/1_contigs/E_Utg998.fasta (5,338,200 bp)
  results/clusters/1004078/cluster_001/1_contigs/F_contig_1.fasta (5,337,226 bp)
  results/clusters/1004078/cluster_001/1_contigs/G_contig_1.fasta (5,337,234 bp)
  results/clusters/1004078/cluster_001/1_contigs/H_contig_3.fasta (5,337,240 bp)
  results/clusters/1004078/cluster_001/1_contigs/I_contig_2.fasta (5,337,240 bp)
  results/clusters/1004078/cluster_001/1_contigs/J_contig_2.fasta (5,337,237 bp)
  results/clusters/1004078/cluster_001/1_contigs/K_contig_1.fasta (5,337,231 bp)
  results/clusters/1004078/cluster_001/1_contigs/M_utg000002c.fasta (5,337,376 bp)
  results/clusters/1004078/cluster_001/1_contigs/N_utg000002c.fasta (5,337,357 bp)
  results/clusters/1004078/cluster_001/1_contigs/O_utg000002c.fasta (5,337,644 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-05 17:23:57)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  A_Utg996:     [2m1.000[0m  1.000  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  B_Utg1032:    1.000  [2m1.000[0m  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  C_Utg1014:    0.999  0.999  [2m1.000[0m  1.000  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999
  D_Utg1018:    1.000  1.000  1.000  [2m1.000[0m  0.999  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  E_Utg998:     1.000  1.000  1.001  1.001  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  F_contig_1:   1.000  1.000  1.001  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  G_contig_1:   1.000  1.000  1.001  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  H_contig_3:   1.000  1.000  1.001  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000
  I_contig_2:   1.000  1.000  1.001  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000
  J_contig_2:   1.000  1.000  1.001  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000
  K_contig_1:   1.000  1.000  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000
  M_utg000002c: 1.000  1.000  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000
  N_utg000002c: 1.000  1.000  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000
  O_utg000002c: 1.000  1.000  1.001  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m

Mash distances:
  A_Utg996:     [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  B_Utg1032:    0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  C_Utg1014:    0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  D_Utg1018:    0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  E_Utg998:     0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  F_contig_1:   0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_1:   0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  H_contig_3:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  I_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  J_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  K_contig_1:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  M_utg000002c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  N_utg000002c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  O_utg000002c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-05 17:24:09)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  CGGCTGGTCTTCCGTATTAACCGCCACCCACAGCGGAGCCTCCGGTAAAA
  ATGCGCGTACCATCTCCTCCAGCTCCTTTCGATACGCTTTTGTCAGAAAA
  TCATGCGTGGCGTCGACCGACCGACACCAGATCGCAGTCAGTTTATCCCC
  TTCATCAGGCCGGGAACGGCGGATGTTAATAACCATACTTTCTCCTTTTC
  TACATTCTTATATTCTAACTCAACAAGCGCCGTGAAATTTTCTCACCGTG

A_Utg996:     + strand (using original sequence)
B_Utg1032:    + strand (using original sequence)
C_Utg1014:    - strand (using reverse complement)
D_Utg1018:    - strand (using reverse complement)
E_Utg998:     - strand (using reverse complement)
F_contig_1:   - strand (using reverse complement)
G_contig_1:   - strand (using reverse complement)
H_contig_3:   - strand (using reverse complement)
I_contig_2:   - strand (using reverse complement)
J_contig_2:   + strand (using original sequence)
K_contig_1:   - strand (using reverse complement)
M_utg000002c: - strand (using reverse complement)
N_utg000002c: - strand (using reverse complement)
O_utg000002c: - strand (using reverse complement)


[93m[1m[4mCircularisation[0m [2m(2024-07-05 17:24:22)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising A_Utg996:
  using B_Utg1032:
    unable to circularise: A_Utg996's end could not be found in B_Utg1032
  using C_Utg1014:
    no adjustment needed (A_Utg996 is already circular)
  using D_Utg1018:
    no adjustment needed (A_Utg996 is already circular)
  using E_Utg998:
    no adjustment needed (A_Utg996 is already circular)
  using F_contig_1:
    no adjustment needed (A_Utg996 is already circular)
  using G_contig_1:
    no adjustment needed (A_Utg996 is already circular)
  using H_contig_3:
    no adjustment needed (A_Utg996 is already circular)
  using I_contig_2:
    no adjustment needed (A_Utg996 is already circular)
  using J_contig_2:
    no adjustment needed (A_Utg996 is already circular)
  using K_contig_1:
    no adjustment needed (A_Utg996 is already circular)
  using M_utg000002c:
    no adjustment needed (A_Utg996 is already circular)
  using N_utg000002c:
    no adjustment needed (A_Utg996 is already circular)
  using O_utg000002c:
    no adjustment needed (A_Utg996 is already circular)
  circularisation complete (5,337,410 bp)

Circularising B_Utg1032:
  using A_Utg996:
    unable to circularise: B_Utg1032's start could not be found in A_Utg996
  using C_Utg1014:
    no adjustment needed (B_Utg1032 is already circular)
  using D_Utg1018:
    no adjustment needed (B_Utg1032 is already circular)
  using E_Utg998:
    no adjustment needed (B_Utg1032 is already circular)
  using F_contig_1:
    no adjustment needed (B_Utg1032 is already circular)
  using G_contig_1:
    no adjustment needed (B_Utg1032 is already circular)
  using H_contig_3:
    no adjustment needed (B_Utg1032 is already circular)
  using I_contig_2:
    no adjustment needed (B_Utg1032 is already circular)
  using J_contig_2:
    no adjustment needed (B_Utg1032 is already circular)
  using K_contig_1:
    no adjustment needed (B_Utg1032 is already circular)
  using M_utg000002c:
    no adjustment needed (B_Utg1032 is already circular)
  using N_utg000002c:
    no adjustment needed (B_Utg1032 is already circular)
  using O_utg000002c:
    no adjustment needed (B_Utg1032 is already circular)
  circularisation complete (5,337,094 bp)

Circularising C_Utg1014:
  using A_Utg996:
    circularising C_Utg1014 by adding 2949 bp of sequence from A_Utg996 (3015894-3018843)
  using B_Utg1032:
    circularising C_Utg1014 by adding 2950 bp of sequence from B_Utg1032 (3015498-3018448)
  using D_Utg1018:
    unable to circularise: C_Utg1014's start/end is the same as D_Utg1018's start/end
  using E_Utg998:
    unable to circularise: C_Utg1014 requires 3054 bp to be added but settings only allow 3000 bp
  using F_contig_1:
    circularising C_Utg1014 by adding 2949 bp of sequence from F_contig_1 (2098436-2101385)
  using G_contig_1:
    circularising C_Utg1014 by adding 2949 bp of sequence from G_contig_1 (4420878-4423827)
  using H_contig_3:
    circularising C_Utg1014 by adding 2949 bp of sequence from H_contig_3 (1505662-1508611)
  using I_contig_2:
    circularising C_Utg1014 by adding 2950 bp of sequence from I_contig_2 (2161794-2164744)
  using J_contig_2:
    circularising C_Utg1014 by adding 2949 bp of sequence from J_contig_2 (996516-999465)
  using K_contig_1:
    circularising C_Utg1014 by adding 2950 bp of sequence from K_contig_1 (1552927-1555877)
  using M_utg000002c:
    circularising C_Utg1014 by adding 2950 bp of sequence from M_utg000002c (2140571-2143521)
  using N_utg000002c:
    circularising C_Utg1014 by adding 2950 bp of sequence from N_utg000002c (2140984-2143934)
  using O_utg000002c:
    circularising C_Utg1014 by adding 2948 bp of sequence from O_utg000002c (682995-685943)
  choosing best circularisation of 2 alternatives
    alternative 1 (5,337,216 bp): score = 396,398,065
    alternative 2 (5,337,215 bp): score = 396,398,043
    best alternative: 1
  circularisation complete (5,337,216 bp)

Circularising D_Utg1018:
  using A_Utg996:
    circularising D_Utg1018 by adding 2095 bp of sequence from A_Utg996 (3015894-3017989)
  using B_Utg1032:
    circularising D_Utg1018 by adding 2095 bp of sequence from B_Utg1032 (3015498-3017593)
  using C_Utg1014:
    unable to circularise: D_Utg1018's start could not be found in C_Utg1014
  using E_Utg998:
    circularising D_Utg1018 by adding 2199 bp of sequence from E_Utg998 (2424069-2426268)
  using F_contig_1:
    circularising D_Utg1018 by adding 2095 bp of sequence from F_contig_1 (2098436-2100531)
  using G_contig_1:
    circularising D_Utg1018 by adding 2094 bp of sequence from G_contig_1 (4420878-4422972)
  using H_contig_3:
    circularising D_Utg1018 by adding 2095 bp of sequence from H_contig_3 (1505662-1507757)
  using I_contig_2:
    circularising D_Utg1018 by adding 2095 bp of sequence from I_contig_2 (2161794-2163889)
  using J_contig_2:
    circularising D_Utg1018 by adding 2095 bp of sequence from J_contig_2 (996516-998611)
  using K_contig_1:
    circularising D_Utg1018 by adding 2095 bp of sequence from K_contig_1 (1552927-1555022)
  using M_utg000002c:
    circularising D_Utg1018 by adding 2095 bp of sequence from M_utg000002c (2140571-2142666)
  using N_utg000002c:
    circularising D_Utg1018 by adding 2095 bp of sequence from N_utg000002c (2140984-2143079)
  using O_utg000002c:
    circularising D_Utg1018 by adding 2093 bp of sequence from O_utg000002c (682995-685088)
  choosing most common circularisation
  circularisation complete (5,337,523 bp)

Circularising E_Utg998:
  using A_Utg996:
    no adjustment needed (E_Utg998 is already circular)
  using B_Utg1032:
    no adjustment needed (E_Utg998 is already circular)
  using C_Utg1014:
    no adjustment needed (E_Utg998 is already circular)
  using D_Utg1018:
    circularising E_Utg998 by adding 1 bp of sequence from D_Utg1018 (2911452-2911453)
  using F_contig_1:
    no adjustment needed (E_Utg998 is already circular)
  using G_contig_1:
    no adjustment needed (E_Utg998 is already circular)
  using H_contig_3:
    no adjustment needed (E_Utg998 is already circular)
  using I_contig_2:
    no adjustment needed (E_Utg998 is already circular)
  using J_contig_2:
    no adjustment needed (E_Utg998 is already circular)
  using K_contig_1:
    no adjustment needed (E_Utg998 is already circular)
  using M_utg000002c:
    no adjustment needed (E_Utg998 is already circular)
  using N_utg000002c:
    no adjustment needed (E_Utg998 is already circular)
  using O_utg000002c:
    no adjustment needed (E_Utg998 is already circular)
  choosing most common circularisation
  circularisation complete (5,338,200 bp)

Circularising F_contig_1:
  using A_Utg996:
    no adjustment needed (F_contig_1 is already circular)
  using B_Utg1032:
    no adjustment needed (F_contig_1 is already circular)
  using C_Utg1014:
    no adjustment needed (F_contig_1 is already circular)
  using D_Utg1018:
    no adjustment needed (F_contig_1 is already circular)
  using E_Utg998:
    no adjustment needed (F_contig_1 is already circular)
  using G_contig_1:
    no adjustment needed (F_contig_1 is already circular)
  using H_contig_3:
    no adjustment needed (F_contig_1 is already circular)
  using I_contig_2:
    no adjustment needed (F_contig_1 is already circular)
  using J_contig_2:
    no adjustment needed (F_contig_1 is already circular)
  using K_contig_1:
    no adjustment needed (F_contig_1 is already circular)
  using M_utg000002c:
    no adjustment needed (F_contig_1 is already circular)
  using N_utg000002c:
    no adjustment needed (F_contig_1 is already circular)
  using O_utg000002c:
    no adjustment needed (F_contig_1 is already circular)
  circularisation complete (5,337,226 bp)

Circularising G_contig_1:
  using A_Utg996:
    no adjustment needed (G_contig_1 is already circular)
  using B_Utg1032:
    no adjustment needed (G_contig_1 is already circular)
  using C_Utg1014:
    no adjustment needed (G_contig_1 is already circular)
  using D_Utg1018:
    no adjustment needed (G_contig_1 is already circular)
  using E_Utg998:
    no adjustment needed (G_contig_1 is already circular)
  using F_contig_1:
    no adjustment needed (G_contig_1 is already circular)
  using H_contig_3:
    no adjustment needed (G_contig_1 is already circular)
  using I_contig_2:
    no adjustment needed (G_contig_1 is already circular)
  using J_contig_2:
    no adjustment needed (G_contig_1 is already circular)
  using K_contig_1:
    no adjustment needed (G_contig_1 is already circular)
  using M_utg000002c:
    no adjustment needed (G_contig_1 is already circular)
  using N_utg000002c:
    no adjustment needed (G_contig_1 is already circular)
  using O_utg000002c:
    no adjustment needed (G_contig_1 is already circular)
  circularisation complete (5,337,234 bp)

Circularising H_contig_3:
  using A_Utg996:
    no adjustment needed (H_contig_3 is already circular)
  using B_Utg1032:
    no adjustment needed (H_contig_3 is already circular)
  using C_Utg1014:
    no adjustment needed (H_contig_3 is already circular)
  using D_Utg1018:
    no adjustment needed (H_contig_3 is already circular)
  using E_Utg998:
    no adjustment needed (H_contig_3 is already circular)
  using F_contig_1:
    no adjustment needed (H_contig_3 is already circular)
  using G_contig_1:
    no adjustment needed (H_contig_3 is already circular)
  using I_contig_2:
    no adjustment needed (H_contig_3 is already circular)
  using J_contig_2:
    no adjustment needed (H_contig_3 is already circular)
  using K_contig_1:
    no adjustment needed (H_contig_3 is already circular)
  using M_utg000002c:
    no adjustment needed (H_contig_3 is already circular)
  using N_utg000002c:
    no adjustment needed (H_contig_3 is already circular)
  using O_utg000002c:
    no adjustment needed (H_contig_3 is already circular)
  circularisation complete (5,337,240 bp)

Circularising I_contig_2:
  using A_Utg996:
    no adjustment needed (I_contig_2 is already circular)
  using B_Utg1032:
    no adjustment needed (I_contig_2 is already circular)
  using C_Utg1014:
    no adjustment needed (I_contig_2 is already circular)
  using D_Utg1018:
    no adjustment needed (I_contig_2 is already circular)
  using E_Utg998:
    no adjustment needed (I_contig_2 is already circular)
  using F_contig_1:
    no adjustment needed (I_contig_2 is already circular)
  using G_contig_1:
    no adjustment needed (I_contig_2 is already circular)
  using H_contig_3:
    no adjustment needed (I_contig_2 is already circular)
  using J_contig_2:
    no adjustment needed (I_contig_2 is already circular)
  using K_contig_1:
    no adjustment needed (I_contig_2 is already circular)
  using M_utg000002c:
    no adjustment needed (I_contig_2 is already circular)
  using N_utg000002c:
    no adjustment needed (I_contig_2 is already circular)
  using O_utg000002c:
    no adjustment needed (I_contig_2 is already circular)
  circularisation complete (5,337,240 bp)

Circularising J_contig_2:
  using A_Utg996:
    no adjustment needed (J_contig_2 is already circular)
  using B_Utg1032:
    no adjustment needed (J_contig_2 is already circular)
  using C_Utg1014:
    no adjustment needed (J_contig_2 is already circular)
  using D_Utg1018:
    no adjustment needed (J_contig_2 is already circular)
  using E_Utg998:
    no adjustment needed (J_contig_2 is already circular)
  using F_contig_1:
    no adjustment needed (J_contig_2 is already circular)
  using G_contig_1:
    no adjustment needed (J_contig_2 is already circular)
  using H_contig_3:
    no adjustment needed (J_contig_2 is already circular)
  using I_contig_2:
    no adjustment needed (J_contig_2 is already circular)
  using K_contig_1:
    no adjustment needed (J_contig_2 is already circular)
  using M_utg000002c:
    no adjustment needed (J_contig_2 is already circular)
  using N_utg000002c:
    no adjustment needed (J_contig_2 is already circular)
  using O_utg000002c:
    no adjustment needed (J_contig_2 is already circular)
  circularisation complete (5,337,237 bp)

Circularising K_contig_1:
  using A_Utg996:
    no adjustment needed (K_contig_1 is already circular)
  using B_Utg1032:
    no adjustment needed (K_contig_1 is already circular)
  using C_Utg1014:
    no adjustment needed (K_contig_1 is already circular)
  using D_Utg1018:
    no adjustment needed (K_contig_1 is already circular)
  using E_Utg998:
    no adjustment needed (K_contig_1 is already circular)
  using F_contig_1:
    no adjustment needed (K_contig_1 is already circular)
  using G_contig_1:
    no adjustment needed (K_contig_1 is already circular)
  using H_contig_3:
    no adjustment needed (K_contig_1 is already circular)
  using I_contig_2:
    no adjustment needed (K_contig_1 is already circular)
  using J_contig_2:
    no adjustment needed (K_contig_1 is already circular)
  using M_utg000002c:
    no adjustment needed (K_contig_1 is already circular)
  using N_utg000002c:
    no adjustment needed (K_contig_1 is already circular)
  using O_utg000002c:
    no adjustment needed (K_contig_1 is already circular)
  circularisation complete (5,337,231 bp)

Circularising M_utg000002c:
  using A_Utg996:
    no adjustment needed (M_utg000002c is already circular)
  using B_Utg1032:
    no adjustment needed (M_utg000002c is already circular)
  using C_Utg1014:
    no adjustment needed (M_utg000002c is already circular)
  using D_Utg1018:
    no adjustment needed (M_utg000002c is already circular)
  using E_Utg998:
    no adjustment needed (M_utg000002c is already circular)
  using F_contig_1:
    no adjustment needed (M_utg000002c is already circular)
  using G_contig_1:
    no adjustment needed (M_utg000002c is already circular)
  using H_contig_3:
    no adjustment needed (M_utg000002c is already circular)
  using I_contig_2:
    no adjustment needed (M_utg000002c is already circular)
  using J_contig_2:
    no adjustment needed (M_utg000002c is already circular)
  using K_contig_1:
    no adjustment needed (M_utg000002c is already circular)
  using N_utg000002c:
    unable to circularise: M_utg000002c's end could not be found in N_utg000002c
  using O_utg000002c:
    no adjustment needed (M_utg000002c is already circular)
  circularisation complete (5,337,376 bp)

Circularising N_utg000002c:
  using A_Utg996:
    no adjustment needed (N_utg000002c is already circular)
  using B_Utg1032:
    no adjustment needed (N_utg000002c is already circular)
  using C_Utg1014:
    no adjustment needed (N_utg000002c is already circular)
  using D_Utg1018:
    no adjustment needed (N_utg000002c is already circular)
  using E_Utg998:
    no adjustment needed (N_utg000002c is already circular)
  using F_contig_1:
    no adjustment needed (N_utg000002c is already circular)
  using G_contig_1:
    no adjustment needed (N_utg000002c is already circular)
  using H_contig_3:
    no adjustment needed (N_utg000002c is already circular)
  using I_contig_2:
    no adjustment needed (N_utg000002c is already circular)
  using J_contig_2:
    no adjustment needed (N_utg000002c is already circular)
  using K_contig_1:
    no adjustment needed (N_utg000002c is already circular)
  using M_utg000002c:
    unable to circularise: N_utg000002c's start could not be found in M_utg000002c
  using O_utg000002c:
    no adjustment needed (N_utg000002c is already circular)
  circularisation complete (5,337,357 bp)

Circularising O_utg000002c:
  using A_Utg996:
    no adjustment needed (O_utg000002c is already circular)
  using B_Utg1032:
    no adjustment needed (O_utg000002c is already circular)
  using C_Utg1014:
    no adjustment needed (O_utg000002c is already circular)
  using D_Utg1018:
    no adjustment needed (O_utg000002c is already circular)
  using E_Utg998:
    no adjustment needed (O_utg000002c is already circular)
  using F_contig_1:
    no adjustment needed (O_utg000002c is already circular)
  using G_contig_1:
    no adjustment needed (O_utg000002c is already circular)
  using H_contig_3:
    no adjustment needed (O_utg000002c is already circular)
  using I_contig_2:
    no adjustment needed (O_utg000002c is already circular)
  using J_contig_2:
    no adjustment needed (O_utg000002c is already circular)
  using K_contig_1:
    no adjustment needed (O_utg000002c is already circular)
  using M_utg000002c:
    no adjustment needed (O_utg000002c is already circular)
  using N_utg000002c:
    no adjustment needed (O_utg000002c is already circular)
  circularisation complete (5,337,644 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-05 17:26:19)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0003_A4U70_RS00005 (chromosomal replication initiator protein DnaA)
  GTGTCACTTTCGCTTTGGCAGCAGTGTCTTGCCCGATTGCAGGATGAGTT...

A_Utg996:     - strand (using reverse complement)
B_Utg1032:    - strand (using reverse complement)
C_Utg1014:    - strand (using reverse complement)
D_Utg1018:    - strand (using reverse complement)
E_Utg998:     - strand (using reverse complement)
F_contig_1:   - strand (using reverse complement)
G_contig_1:   - strand (using reverse complement)
H_contig_3:   - strand (using reverse complement)
I_contig_2:   - strand (using reverse complement)
J_contig_2:   - strand (using reverse complement)
K_contig_1:   - strand (using reverse complement)
M_utg000002c: - strand (using reverse complement)
N_utg000002c: - strand (using reverse complement)
O_utg000002c: - strand (using reverse complement)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-05 17:26:36)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

A_Utg996: rotating by 5,293,887 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,410 bp)

B_Utg1032: rotating by 5,293,065 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,094 bp)

C_Utg1014: rotating by 2,974,815 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,216 bp)

D_Utg1018: rotating by 2,974,463 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,523 bp)

E_Utg998: rotating by 548,405 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,338,200 bp)

F_contig_1: rotating by 873,439 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,226 bp)

G_contig_1: rotating by 3,888,231 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,234 bp)

H_contig_3: rotating by 1,466,213 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,240 bp)

I_contig_2: rotating by 810,078 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,240 bp)

J_contig_2: rotating by 1,975,350 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,237 bp)

K_contig_1: rotating by 1,418,943 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,231 bp)

M_utg000002c: rotating by 831,368 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,376 bp)

N_utg000002c: rotating by 830,954 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,357 bp)

O_utg000002c: rotating by 2,289,171 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,337,644 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-05 17:26:40)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

    A_Utg996 vs B_Utg1032...    99.918% overall identity, 52.1% worst-1kbp identity
    A_Utg996 vs C_Utg1014...    99.926% overall identity, 62.1% worst-1kbp identity
    A_Utg996 vs D_Utg1018...    99.934% overall identity, 67.0% worst-1kbp identity
    A_Utg996 vs E_Utg998...     99.927% overall identity, 66.9% worst-1kbp identity
    A_Utg996 vs F_contig_1...   99.939% overall identity, 62.2% worst-1kbp identity
    A_Utg996 vs G_contig_1...   99.940% overall identity, 62.2% worst-1kbp identity
    A_Utg996 vs H_contig_3...   99.939% overall identity, 62.2% worst-1kbp identity
    A_Utg996 vs I_contig_2...   99.939% overall identity, 62.2% worst-1kbp identity
    A_Utg996 vs J_contig_2...   99.939% overall identity, 62.1% worst-1kbp identity
    A_Utg996 vs K_contig_1...   99.939% overall identity, 62.2% worst-1kbp identity
    A_Utg996 vs M_utg000002c... 99.938% overall identity, 62.2% worst-1kbp identity
    A_Utg996 vs N_utg000002c... 99.939% overall identity, 62.2% worst-1kbp identity
    A_Utg996 vs O_utg000002c... 99.934% overall identity, 62.1% worst-1kbp identity
   B_Utg1032 vs C_Utg1014...    99.941% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs D_Utg1018...    99.930% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs E_Utg998...     99.926% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs F_contig_1...   99.952% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs G_contig_1...   99.952% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs H_contig_3...   99.953% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs I_contig_2...   99.952% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs J_contig_2...   99.952% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs K_contig_1...   99.952% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs M_utg000002c... 99.951% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs N_utg000002c... 99.952% overall identity, 52.1% worst-1kbp identity
   B_Utg1032 vs O_utg000002c... 99.948% overall identity, 52.1% worst-1kbp identity
   C_Utg1014 vs D_Utg1018...    99.951% overall identity, 61.4% worst-1kbp identity
   C_Utg1014 vs E_Utg998...     99.944% overall identity, 61.4% worst-1kbp identity
   C_Utg1014 vs F_contig_1...   99.968% overall identity, 82.3% worst-1kbp identity
   C_Utg1014 vs G_contig_1...   99.969% overall identity, 82.3% worst-1kbp identity
   C_Utg1014 vs H_contig_3...   99.969% overall identity, 82.3% worst-1kbp identity
   C_Utg1014 vs I_contig_2...   99.969% overall identity, 82.3% worst-1kbp identity
   C_Utg1014 vs J_contig_2...   99.968% overall identity, 82.3% worst-1kbp identity
   C_Utg1014 vs K_contig_1...   99.968% overall identity, 82.3% worst-1kbp identity
   C_Utg1014 vs M_utg000002c... 99.968% overall identity, 82.3% worst-1kbp identity
   C_Utg1014 vs N_utg000002c... 99.968% overall identity, 82.2% worst-1kbp identity
   C_Utg1014 vs O_utg000002c... 99.962% overall identity, 82.3% worst-1kbp identity
   D_Utg1018 vs E_Utg998...     99.960% overall identity, 68.7% worst-1kbp identity
   D_Utg1018 vs F_contig_1...   99.961% overall identity, 61.5% worst-1kbp identity
   D_Utg1018 vs G_contig_1...   99.961% overall identity, 61.5% worst-1kbp identity
   D_Utg1018 vs H_contig_3...   99.961% overall identity, 61.5% worst-1kbp identity
   D_Utg1018 vs I_contig_2...   99.962% overall identity, 61.5% worst-1kbp identity
   D_Utg1018 vs J_contig_2...   99.961% overall identity, 61.4% worst-1kbp identity
   D_Utg1018 vs K_contig_1...   99.961% overall identity, 61.5% worst-1kbp identity
   D_Utg1018 vs M_utg000002c... 99.960% overall identity, 61.5% worst-1kbp identity
   D_Utg1018 vs N_utg000002c... 99.961% overall identity, 61.5% worst-1kbp identity
   D_Utg1018 vs O_utg000002c... 99.962% overall identity, 61.4% worst-1kbp identity
    E_Utg998 vs F_contig_1...   99.957% overall identity, 61.5% worst-1kbp identity
    E_Utg998 vs G_contig_1...   99.957% overall identity, 61.5% worst-1kbp identity
    E_Utg998 vs H_contig_3...   99.957% overall identity, 61.5% worst-1kbp identity
    E_Utg998 vs I_contig_2...   99.957% overall identity, 61.5% worst-1kbp identity
    E_Utg998 vs J_contig_2...   99.957% overall identity, 61.4% worst-1kbp identity
    E_Utg998 vs K_contig_1...   99.957% overall identity, 61.5% worst-1kbp identity
    E_Utg998 vs M_utg000002c... 99.956% overall identity, 61.5% worst-1kbp identity
    E_Utg998 vs N_utg000002c... 99.957% overall identity, 61.5% worst-1kbp identity
    E_Utg998 vs O_utg000002c... 99.957% overall identity, 61.4% worst-1kbp identity
  F_contig_1 vs G_contig_1...   99.998% overall identity, 99.8% worst-1kbp identity
  F_contig_1 vs H_contig_3...   99.996% overall identity, 99.7% worst-1kbp identity
  F_contig_1 vs I_contig_2...   99.996% overall identity, 99.6% worst-1kbp identity
  F_contig_1 vs J_contig_2...   99.996% overall identity, 99.5% worst-1kbp identity
  F_contig_1 vs K_contig_1...   99.996% overall identity, 99.7% worst-1kbp identity
  F_contig_1 vs M_utg000002c... 99.991% overall identity, 95.6% worst-1kbp identity
  F_contig_1 vs N_utg000002c... 99.992% overall identity, 99.4% worst-1kbp identity
  F_contig_1 vs O_utg000002c... 99.986% overall identity, 83.6% worst-1kbp identity
  G_contig_1 vs H_contig_3...   99.996% overall identity, 99.6% worst-1kbp identity
  G_contig_1 vs I_contig_2...   99.996% overall identity, 99.7% worst-1kbp identity
  G_contig_1 vs J_contig_2...   99.996% overall identity, 99.4% worst-1kbp identity
  G_contig_1 vs K_contig_1...   99.996% overall identity, 99.8% worst-1kbp identity
  G_contig_1 vs M_utg000002c... 99.991% overall identity, 95.6% worst-1kbp identity
  G_contig_1 vs N_utg000002c... 99.992% overall identity, 99.5% worst-1kbp identity
  G_contig_1 vs O_utg000002c... 99.986% overall identity, 83.6% worst-1kbp identity
  H_contig_3 vs I_contig_2...   99.996% overall identity, 99.7% worst-1kbp identity
  H_contig_3 vs J_contig_2...   99.996% overall identity, 99.4% worst-1kbp identity
  H_contig_3 vs K_contig_1...   99.996% overall identity, 99.6% worst-1kbp identity
  H_contig_3 vs M_utg000002c... 99.991% overall identity, 95.6% worst-1kbp identity
  H_contig_3 vs N_utg000002c... 99.992% overall identity, 99.5% worst-1kbp identity
  H_contig_3 vs O_utg000002c... 99.986% overall identity, 83.6% worst-1kbp identity
  I_contig_2 vs J_contig_2...   99.996% overall identity, 99.1% worst-1kbp identity
  I_contig_2 vs K_contig_1...   99.996% overall identity, 99.5% worst-1kbp identity
  I_contig_2 vs M_utg000002c... 99.991% overall identity, 95.6% worst-1kbp identity
  I_contig_2 vs N_utg000002c... 99.992% overall identity, 99.5% worst-1kbp identity
  I_contig_2 vs O_utg000002c... 99.986% overall identity, 83.6% worst-1kbp identity
  J_contig_2 vs K_contig_1...   99.997% overall identity, 99.4% worst-1kbp identity
  J_contig_2 vs M_utg000002c... 99.991% overall identity, 95.6% worst-1kbp identity
  J_contig_2 vs N_utg000002c... 99.991% overall identity, 99.4% worst-1kbp identity
  J_contig_2 vs O_utg000002c... 99.986% overall identity, 83.6% worst-1kbp identity
  K_contig_1 vs M_utg000002c... 99.991% overall identity, 95.6% worst-1kbp identity
  K_contig_1 vs N_utg000002c... 99.991% overall identity, 99.5% worst-1kbp identity
  K_contig_1 vs O_utg000002c... 99.986% overall identity, 83.6% worst-1kbp identity
M_utg000002c vs N_utg000002c... 99.993% overall identity, 95.6% worst-1kbp identity
M_utg000002c vs O_utg000002c... 99.986% overall identity, 83.6% worst-1kbp identity
N_utg000002c vs O_utg000002c... 99.987% overall identity, 83.6% worst-1kbp identity

Overall pairwise identities:
  A_Utg996:     [2m100.000%[0m   99.918%   99.926%   99.934%   99.927%   99.939%   99.940%   99.939%   99.939%   99.939%   99.939%   99.938%   99.939%   99.934%
  B_Utg1032:     99.918%  [2m100.000%[0m   99.941%   99.930%   99.926%   99.952%   99.952%   99.953%   99.952%   99.952%   99.952%   99.951%   99.952%   99.948%
  C_Utg1014:     99.926%   99.941%  [2m100.000%[0m   99.951%   99.944%   99.968%   99.969%   99.969%   99.969%   99.968%   99.968%   99.968%   99.968%   99.962%
  D_Utg1018:     99.934%   99.930%   99.951%  [2m100.000%[0m   99.960%   99.961%   99.961%   99.961%   99.962%   99.961%   99.961%   99.960%   99.961%   99.962%
  E_Utg998:      99.927%   99.926%   99.944%   99.960%  [2m100.000%[0m   99.957%   99.957%   99.957%   99.957%   99.957%   99.957%   99.956%   99.957%   99.957%
  F_contig_1:    99.939%   99.952%   99.968%   99.961%   99.957%  [2m100.000%[0m   99.998%   99.996%   99.996%   99.996%   99.996%   99.991%   99.992%   99.986%
  G_contig_1:    99.940%   99.952%   99.969%   99.961%   99.957%   99.998%  [2m100.000%[0m   99.996%   99.996%   99.996%   99.996%   99.991%   99.992%   99.986%
  H_contig_3:    99.939%   99.953%   99.969%   99.961%   99.957%   99.996%   99.996%  [2m100.000%[0m   99.996%   99.996%   99.996%   99.991%   99.992%   99.986%
  I_contig_2:    99.939%   99.952%   99.969%   99.962%   99.957%   99.996%   99.996%   99.996%  [2m100.000%[0m   99.996%   99.996%   99.991%   99.992%   99.986%
  J_contig_2:    99.939%   99.952%   99.968%   99.961%   99.957%   99.996%   99.996%   99.996%   99.996%  [2m100.000%[0m   99.997%   99.991%   99.991%   99.986%
  K_contig_1:    99.939%   99.952%   99.968%   99.961%   99.957%   99.996%   99.996%   99.996%   99.996%   99.997%  [2m100.000%[0m   99.991%   99.991%   99.986%
  M_utg000002c:  99.938%   99.951%   99.968%   99.960%   99.956%   99.991%   99.991%   99.991%   99.991%   99.991%   99.991%  [2m100.000%[0m   99.993%   99.986%
  N_utg000002c:  99.939%   99.952%   99.968%   99.961%   99.957%   99.992%   99.992%   99.992%   99.992%   99.991%   99.991%   99.993%  [2m100.000%[0m   99.987%
  O_utg000002c:  99.934%   99.948%   99.962%   99.962%   99.957%   99.986%   99.986%   99.986%   99.986%   99.986%   99.986%   99.986%   99.987%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  A_Utg996:     [2m100.0%[0m   52.1%   62.1%   67.0%   66.9%   62.2%   62.2%   62.2%   62.2%   62.1%   62.2%   62.2%   62.2%   62.1%
  B_Utg1032:     52.1%  [2m100.0%[0m   52.1%   52.1%   52.1%   52.1%   52.1%   52.1%   52.1%   52.1%   52.1%   52.1%   52.1%   52.1%
  C_Utg1014:     62.1%   52.1%  [2m100.0%[0m   61.4%   61.4%   82.3%   82.3%   82.3%   82.3%   82.3%   82.3%   82.3%   82.2%   82.3%
  D_Utg1018:     67.0%   52.1%   61.4%  [2m100.0%[0m   68.7%   61.5%   61.5%   61.5%   61.5%   61.4%   61.5%   61.5%   61.5%   61.4%
  E_Utg998:      66.9%   52.1%   61.4%   68.7%  [2m100.0%[0m   61.5%   61.5%   61.5%   61.5%   61.4%   61.5%   61.5%   61.5%   61.4%
  F_contig_1:    62.2%   52.1%   82.3%   61.5%   61.5%  [2m100.0%[0m   99.8%   99.7%   99.6%   99.5%   99.7%   95.6%   99.4%   83.6%
  G_contig_1:    62.2%   52.1%   82.3%   61.5%   61.5%   99.8%  [2m100.0%[0m   99.6%   99.7%   99.4%   99.8%   95.6%   99.5%   83.6%
  H_contig_3:    62.2%   52.1%   82.3%   61.5%   61.5%   99.7%   99.6%  [2m100.0%[0m   99.7%   99.4%   99.6%   95.6%   99.5%   83.6%
  I_contig_2:    62.2%   52.1%   82.3%   61.5%   61.5%   99.6%   99.7%   99.7%  [2m100.0%[0m   99.1%   99.5%   95.6%   99.5%   83.6%
  J_contig_2:    62.1%   52.1%   82.3%   61.4%   61.4%   99.5%   99.4%   99.4%   99.1%  [2m100.0%[0m   99.4%   95.6%   99.4%   83.6%
  K_contig_1:    62.2%   52.1%   82.3%   61.5%   61.5%   99.7%   99.8%   99.6%   99.5%   99.4%  [2m100.0%[0m   95.6%   99.5%   83.6%
  M_utg000002c:  62.2%   52.1%   82.3%   61.5%   61.5%   95.6%   95.6%   95.6%   95.6%   95.6%   95.6%  [2m100.0%[0m   95.6%   83.6%
  N_utg000002c:  62.2%   52.1%   82.2%   61.5%   61.5%   99.4%   99.5%   99.5%   99.5%   99.4%   99.5%   95.6%  [2m100.0%[0m   83.6%
  O_utg000002c:  62.1%   52.1%   82.3%   61.4%   61.4%   83.6%   83.6%   83.6%   83.6%   83.6%   83.6%   83.6%   83.6%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-05 17:33:33)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/1004078/cluster_001/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-05 17:33:34)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/1004078_0.fastq.gz
  size = 243,197,721 bytes

Input contigs:
  results/clusters/1004078/cluster_002/1_contigs/A_Utg1000.fasta (147,494 bp)
  results/clusters/1004078/cluster_002/1_contigs/B_Utg1034.fasta (147,496 bp)
  results/clusters/1004078/cluster_002/1_contigs/C_Utg1012.fasta (147,658 bp)
  results/clusters/1004078/cluster_002/1_contigs/D_Utg1014.fasta (147,502 bp)
  results/clusters/1004078/cluster_002/1_contigs/L_utg000001c.fasta (147,508 bp)
  results/clusters/1004078/cluster_002/1_contigs/M_utg000001c.fasta (147,689 bp)
  results/clusters/1004078/cluster_002/1_contigs/N_utg000001c.fasta (147,692 bp)
  results/clusters/1004078/cluster_002/1_contigs/O_utg000001c.fasta (147,504 bp)
  results/clusters/1004078/cluster_002/1_contigs/P_utg000001c.fasta (147,512 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-05 17:33:34)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  A_Utg1000:    [2m1.000[0m  1.000  0.999  1.000  1.000  0.999  0.999  1.000  1.000
  B_Utg1034:    1.000  [2m1.000[0m  0.999  1.000  1.000  0.999  0.999  1.000  1.000
  C_Utg1012:    1.001  1.001  [2m1.000[0m  1.001  1.001  1.000  1.000  1.001  1.001
  D_Utg1014:    1.000  1.000  0.999  [2m1.000[0m  1.000  0.999  0.999  1.000  1.000
  L_utg000001c: 1.000  1.000  0.999  1.000  [2m1.000[0m  0.999  0.999  1.000  1.000
  M_utg000001c: 1.001  1.001  1.000  1.001  1.001  [2m1.000[0m  1.000  1.001  1.001
  N_utg000001c: 1.001  1.001  1.000  1.001  1.001  1.000  [2m1.000[0m  1.001  1.001
  O_utg000001c: 1.000  1.000  0.999  1.000  1.000  0.999  0.999  [2m1.000[0m  1.000
  P_utg000001c: 1.000  1.000  0.999  1.000  1.000  0.999  0.999  1.000  [2m1.000[0m

Mash distances:
  A_Utg1000:    [2m0.000[0m  0.001  0.001  0.001  0.000  0.000  0.000  0.001  0.001
  B_Utg1034:    0.001  [2m0.000[0m  0.001  0.001  0.001  0.001  0.001  0.001  0.001
  C_Utg1012:    0.001  0.001  [2m0.000[0m  0.001  0.001  0.001  0.001  0.001  0.001
  D_Utg1014:    0.001  0.001  0.001  [2m0.000[0m  0.000  0.000  0.000  0.001  0.001
  L_utg000001c: 0.000  0.001  0.001  0.001  [2m0.000[0m  0.000  0.000  0.000  0.000
  M_utg000001c: 0.000  0.001  0.001  0.001  0.000  [2m0.000[0m  0.000  0.000  0.000
  N_utg000001c: 0.000  0.001  0.001  0.001  0.000  0.000  [2m0.000[0m  0.000  0.000
  O_utg000001c: 0.000  0.001  0.001  0.001  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000001c: 0.001  0.001  0.001  0.001  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-05 17:33:34)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  TGTTGCCGGGCATGTCGCCAGAAATTCGATTAGCTTTGGTCGGGTGAATT
  TTTTACGGTAAACGGCCTTCCCACGATGATCCTGACAATGAATATGGAAA
  GAGTTCTTACCCAGATCGATACCAATAAGCGCAATGTTTTCCATGATGGT
  TCTCCGAATGAAAGCCTGTCCTCAGCATAGTACTGGGAAGGAGGGAGTGA
  CCATCTCATTAAATAAAGCACGCTAAGCCGGTTGCAGCGGTCGTAGCGGC

A_Utg1000:    - strand (using reverse complement)
B_Utg1034:    + strand (using original sequence)
C_Utg1012:    + strand (using original sequence)
D_Utg1014:    - strand (using reverse complement)
L_utg000001c: + strand (using original sequence)
M_utg000001c: + strand (using original sequence)
N_utg000001c: + strand (using original sequence)
O_utg000001c: + strand (using original sequence)
P_utg000001c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-05 17:33:35)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising A_Utg1000:
  using B_Utg1034:
    no adjustment needed (A_Utg1000 is already circular)
  using C_Utg1012:
    no adjustment needed (A_Utg1000 is already circular)
  using D_Utg1014:
    no adjustment needed (A_Utg1000 is already circular)
  using L_utg000001c:
    no adjustment needed (A_Utg1000 is already circular)
  using M_utg000001c:
    no adjustment needed (A_Utg1000 is already circular)
  using N_utg000001c:
    no adjustment needed (A_Utg1000 is already circular)
  using O_utg000001c:
    no adjustment needed (A_Utg1000 is already circular)
  using P_utg000001c:
    no adjustment needed (A_Utg1000 is already circular)
  circularisation complete (147,494 bp)

Circularising B_Utg1034:
  using A_Utg1000:
    no adjustment needed (B_Utg1034 is already circular)
  using C_Utg1012:
    no adjustment needed (B_Utg1034 is already circular)
  using D_Utg1014:
    no adjustment needed (B_Utg1034 is already circular)
  using L_utg000001c:
    no adjustment needed (B_Utg1034 is already circular)
  using M_utg000001c:
    no adjustment needed (B_Utg1034 is already circular)
  using N_utg000001c:
    no adjustment needed (B_Utg1034 is already circular)
  using O_utg000001c:
    no adjustment needed (B_Utg1034 is already circular)
  using P_utg000001c:
    no adjustment needed (B_Utg1034 is already circular)
  circularisation complete (147,496 bp)

Circularising C_Utg1012:
  using A_Utg1000:
    no adjustment needed (C_Utg1012 is already circular)
  using B_Utg1034:
    no adjustment needed (C_Utg1012 is already circular)
  using D_Utg1014:
    no adjustment needed (C_Utg1012 is already circular)
  using L_utg000001c:
    no adjustment needed (C_Utg1012 is already circular)
  using M_utg000001c:
    no adjustment needed (C_Utg1012 is already circular)
  using N_utg000001c:
    no adjustment needed (C_Utg1012 is already circular)
  using O_utg000001c:
    no adjustment needed (C_Utg1012 is already circular)
  using P_utg000001c:
    no adjustment needed (C_Utg1012 is already circular)
  circularisation complete (147,658 bp)

Circularising D_Utg1014:
  using A_Utg1000:
    circularising D_Utg1014 by adding 3 bp of sequence from A_Utg1000 (47165-47168)
  using B_Utg1034:
    circularising D_Utg1014 by adding 3 bp of sequence from B_Utg1034 (13147-13150)
  using C_Utg1012:
    circularising D_Utg1014 by adding 3 bp of sequence from C_Utg1012 (145887-145890)
  using L_utg000001c:
    no adjustment needed (D_Utg1014 is already circular)
  using M_utg000001c:
    no adjustment needed (D_Utg1014 is already circular)
  using N_utg000001c:
    no adjustment needed (D_Utg1014 is already circular)
  using O_utg000001c:
    no adjustment needed (D_Utg1014 is already circular)
  using P_utg000001c:
    no adjustment needed (D_Utg1014 is already circular)
  choosing best circularisation of 2 alternatives
    alternative 1 (147,505 bp): score = 7,553,326
    alternative 2 (147,502 bp): score = 7,553,266
    best alternative: 1
  circularisation complete (147,505 bp)

Circularising L_utg000001c:
  using A_Utg1000:
    no adjustment needed (L_utg000001c is already circular)
  using B_Utg1034:
    no adjustment needed (L_utg000001c is already circular)
  using C_Utg1012:
    no adjustment needed (L_utg000001c is already circular)
  using D_Utg1014:
    no adjustment needed (L_utg000001c is already circular)
  using M_utg000001c:
    no adjustment needed (L_utg000001c is already circular)
  using N_utg000001c:
    unable to circularise: L_utg000001c's start could not be found in N_utg000001c
  using O_utg000001c:
    no adjustment needed (L_utg000001c is already circular)
  using P_utg000001c:
    unable to circularise: L_utg000001c's start could not be found in P_utg000001c
  circularisation complete (147,508 bp)

Circularising M_utg000001c:
  using A_Utg1000:
    no adjustment needed (M_utg000001c is already circular)
  using B_Utg1034:
    no adjustment needed (M_utg000001c is already circular)
  using C_Utg1012:
    no adjustment needed (M_utg000001c is already circular)
  using D_Utg1014:
    no adjustment needed (M_utg000001c is already circular)
  using L_utg000001c:
    no adjustment needed (M_utg000001c is already circular)
  using N_utg000001c:
    no adjustment needed (M_utg000001c is already circular)
  using O_utg000001c:
    no adjustment needed (M_utg000001c is already circular)
  using P_utg000001c:
    no adjustment needed (M_utg000001c is already circular)
  circularisation complete (147,689 bp)

Circularising N_utg000001c:
  using A_Utg1000:
    no adjustment needed (N_utg000001c is already circular)
  using B_Utg1034:
    no adjustment needed (N_utg000001c is already circular)
  using C_Utg1012:
    no adjustment needed (N_utg000001c is already circular)
  using D_Utg1014:
    no adjustment needed (N_utg000001c is already circular)
  using L_utg000001c:
    unable to circularise: N_utg000001c's end could not be found in L_utg000001c
  using M_utg000001c:
    no adjustment needed (N_utg000001c is already circular)
  using O_utg000001c:
    no adjustment needed (N_utg000001c is already circular)
  using P_utg000001c:
    unable to circularise: N_utg000001c's start/end is the same as P_utg000001c's start/end
  circularisation complete (147,692 bp)

Circularising O_utg000001c:
  using A_Utg1000:
    no adjustment needed (O_utg000001c is already circular)
  using B_Utg1034:
    no adjustment needed (O_utg000001c is already circular)
  using C_Utg1012:
    no adjustment needed (O_utg000001c is already circular)
  using D_Utg1014:
    no adjustment needed (O_utg000001c is already circular)
  using L_utg000001c:
    no adjustment needed (O_utg000001c is already circular)
  using M_utg000001c:
    no adjustment needed (O_utg000001c is already circular)
  using N_utg000001c:
    no adjustment needed (O_utg000001c is already circular)
  using P_utg000001c:
    no adjustment needed (O_utg000001c is already circular)
  circularisation complete (147,504 bp)

Circularising P_utg000001c:
  using A_Utg1000:
    no adjustment needed (P_utg000001c is already circular)
  using B_Utg1034:
    no adjustment needed (P_utg000001c is already circular)
  using C_Utg1012:
    no adjustment needed (P_utg000001c is already circular)
  using D_Utg1014:
    no adjustment needed (P_utg000001c is already circular)
  using L_utg000001c:
    unable to circularise: P_utg000001c's end could not be found in L_utg000001c
  using M_utg000001c:
    no adjustment needed (P_utg000001c is already circular)
  using N_utg000001c:
    unable to circularise: P_utg000001c's start/end is the same as N_utg000001c's start/end
  using O_utg000001c:
    no adjustment needed (P_utg000001c is already circular)
  circularisation complete (147,512 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-05 17:33:44)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0100_A6D67_RS28830 (replication initiation protein)
  ATGGGAAAGAGGTCAAGTTCAGTTCTCAATTATCCACTTGTGGATAAAGT...

A_Utg1000:    + strand (using original sequence)
B_Utg1034:    + strand (using original sequence)
C_Utg1012:    + strand (using original sequence)
D_Utg1014:    + strand (using original sequence)
L_utg000001c: + strand (using original sequence)
M_utg000001c: + strand (using original sequence)
N_utg000001c: + strand (using original sequence)
O_utg000001c: + strand (using original sequence)
P_utg000001c: + strand (using original sequence)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-05 17:33:45)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

A_Utg1000: rotating by 14,909 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (147,494 bp)

B_Utg1034: rotating by 128,397 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (147,496 bp)

C_Utg1012: rotating by 113,582 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (147,658 bp)

D_Utg1014: rotating by 115,249 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (147,505 bp)

L_utg000001c: rotating by 78,037 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (147,508 bp)

M_utg000001c: rotating by 66,717 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (147,689 bp)

N_utg000001c: rotating by 77,941 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (147,692 bp)

O_utg000001c: rotating by 143,902 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (147,504 bp)

P_utg000001c: rotating by 77,758 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (147,512 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-05 17:33:45)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   A_Utg1000 vs B_Utg1034...    99.835% overall identity, 97.3% worst-1kbp identity
   A_Utg1000 vs C_Utg1012...    99.575% overall identity, 71.3% worst-1kbp identity
   A_Utg1000 vs D_Utg1014...    99.884% overall identity, 98.1% worst-1kbp identity
   A_Utg1000 vs L_utg000001c... 99.909% overall identity, 98.6% worst-1kbp identity
   A_Utg1000 vs M_utg000001c... 99.783% overall identity, 81.1% worst-1kbp identity
   A_Utg1000 vs N_utg000001c... 99.783% overall identity, 81.2% worst-1kbp identity
   A_Utg1000 vs O_utg000001c... 99.910% overall identity, 98.6% worst-1kbp identity
   A_Utg1000 vs P_utg000001c... 99.901% overall identity, 98.6% worst-1kbp identity
   B_Utg1034 vs C_Utg1012...    99.538% overall identity, 71.3% worst-1kbp identity
   B_Utg1034 vs D_Utg1014...    99.850% overall identity, 96.6% worst-1kbp identity
   B_Utg1034 vs L_utg000001c... 99.875% overall identity, 97.4% worst-1kbp identity
   B_Utg1034 vs M_utg000001c... 99.748% overall identity, 81.2% worst-1kbp identity
   B_Utg1034 vs N_utg000001c... 99.749% overall identity, 81.1% worst-1kbp identity
   B_Utg1034 vs O_utg000001c... 99.876% overall identity, 97.4% worst-1kbp identity
   B_Utg1034 vs P_utg000001c... 99.868% overall identity, 97.4% worst-1kbp identity
   C_Utg1012 vs D_Utg1014...    99.565% overall identity, 71.3% worst-1kbp identity
   C_Utg1012 vs L_utg000001c... 99.606% overall identity, 71.3% worst-1kbp identity
   C_Utg1012 vs M_utg000001c... 99.714% overall identity, 83.2% worst-1kbp identity
   C_Utg1012 vs N_utg000001c... 99.712% overall identity, 83.2% worst-1kbp identity
   C_Utg1012 vs O_utg000001c... 99.609% overall identity, 71.3% worst-1kbp identity
   C_Utg1012 vs P_utg000001c... 99.599% overall identity, 71.3% worst-1kbp identity
   D_Utg1014 vs L_utg000001c... 99.911% overall identity, 98.5% worst-1kbp identity
   D_Utg1014 vs M_utg000001c... 99.786% overall identity, 81.3% worst-1kbp identity
   D_Utg1014 vs N_utg000001c... 99.787% overall identity, 81.4% worst-1kbp identity
   D_Utg1014 vs O_utg000001c... 99.913% overall identity, 98.5% worst-1kbp identity
   D_Utg1014 vs P_utg000001c... 99.904% overall identity, 98.2% worst-1kbp identity
L_utg000001c vs M_utg000001c... 99.863% overall identity, 81.3% worst-1kbp identity
L_utg000001c vs N_utg000001c... 99.866% overall identity, 81.4% worst-1kbp identity
L_utg000001c vs O_utg000001c... 99.989% overall identity, 99.8% worst-1kbp identity
L_utg000001c vs P_utg000001c... 99.982% overall identity, 99.7% worst-1kbp identity
M_utg000001c vs N_utg000001c... 99.990% overall identity, 99.7% worst-1kbp identity
M_utg000001c vs O_utg000001c... 99.863% overall identity, 81.3% worst-1kbp identity
M_utg000001c vs P_utg000001c... 99.856% overall identity, 81.3% worst-1kbp identity
N_utg000001c vs O_utg000001c... 99.865% overall identity, 81.4% worst-1kbp identity
N_utg000001c vs P_utg000001c... 99.858% overall identity, 81.4% worst-1kbp identity
O_utg000001c vs P_utg000001c... 99.984% overall identity, 99.7% worst-1kbp identity

Overall pairwise identities:
  A_Utg1000:    [2m100.000%[0m   99.835%   99.575%   99.884%   99.909%   99.783%   99.783%   99.910%   99.901%
  B_Utg1034:     99.835%  [2m100.000%[0m   99.538%   99.850%   99.875%   99.748%   99.749%   99.876%   99.868%
  C_Utg1012:     99.575%   99.538%  [2m100.000%[0m   99.565%   99.606%   99.714%   99.712%   99.609%   99.599%
  D_Utg1014:     99.884%   99.850%   99.565%  [2m100.000%[0m   99.911%   99.786%   99.787%   99.913%   99.904%
  L_utg000001c:  99.909%   99.875%   99.606%   99.911%  [2m100.000%[0m   99.863%   99.866%   99.989%   99.982%
  M_utg000001c:  99.783%   99.748%   99.714%   99.786%   99.863%  [2m100.000%[0m   99.990%   99.863%   99.856%
  N_utg000001c:  99.783%   99.749%   99.712%   99.787%   99.866%   99.990%  [2m100.000%[0m   99.865%   99.858%
  O_utg000001c:  99.910%   99.876%   99.609%   99.913%   99.989%   99.863%   99.865%  [2m100.000%[0m   99.984%
  P_utg000001c:  99.901%   99.868%   99.599%   99.904%   99.982%   99.856%   99.858%   99.984%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  A_Utg1000:    [2m100.0%[0m   97.3%   71.3%   98.1%   98.6%   81.1%   81.2%   98.6%   98.6%
  B_Utg1034:     97.3%  [2m100.0%[0m   71.3%   96.6%   97.4%   81.2%   81.1%   97.4%   97.4%
  C_Utg1012:     71.3%   71.3%  [2m100.0%[0m   71.3%   71.3%   83.2%   83.2%   71.3%   71.3%
  D_Utg1014:     98.1%   96.6%   71.3%  [2m100.0%[0m   98.5%   81.3%   81.4%   98.5%   98.2%
  L_utg000001c:  98.6%   97.4%   71.3%   98.5%  [2m100.0%[0m   81.3%   81.4%   99.8%   99.7%
  M_utg000001c:  81.1%   81.2%   83.2%   81.3%   81.3%  [2m100.0%[0m   99.7%   81.3%   81.3%
  N_utg000001c:  81.2%   81.1%   83.2%   81.4%   81.4%   99.7%  [2m100.0%[0m   81.4%   81.4%
  O_utg000001c:  98.6%   97.4%   71.3%   98.5%   99.8%   81.3%   81.4%  [2m100.0%[0m   99.7%
  P_utg000001c:  98.6%   97.4%   71.3%   98.2%   99.7%   81.3%   81.4%   99.7%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-05 17:33:48)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/1004078/cluster_002/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-05 17:33:48)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/1004078_0.fastq.gz
  size = 243,197,721 bytes

Input contigs:
  results/clusters/1004078/cluster_003/1_contigs/A_Utg994.fasta (114,319 bp)
  results/clusters/1004078/cluster_003/1_contigs/B_Utg1030.fasta (114,312 bp)
  results/clusters/1004078/cluster_003/1_contigs/C_Utg1004.fasta (114,288 bp)
  results/clusters/1004078/cluster_003/1_contigs/D_Utg1016.fasta (113,862 bp)
  results/clusters/1004078/cluster_003/1_contigs/F_contig_2.fasta (114,387 bp)
  results/clusters/1004078/cluster_003/1_contigs/G_contig_2.fasta (114,385 bp)
  results/clusters/1004078/cluster_003/1_contigs/H_contig_2.fasta (114,384 bp)
  results/clusters/1004078/cluster_003/1_contigs/I_contig_1.fasta (114,386 bp)
  results/clusters/1004078/cluster_003/1_contigs/J_contig_3.fasta (114,397 bp)
  results/clusters/1004078/cluster_003/1_contigs/K_contig_2.fasta (114,400 bp)
  results/clusters/1004078/cluster_003/1_contigs/L_utg000003c.fasta (114,361 bp)
  results/clusters/1004078/cluster_003/1_contigs/M_utg000003c.fasta (114,367 bp)
  results/clusters/1004078/cluster_003/1_contigs/N_utg000003c.fasta (114,370 bp)
  results/clusters/1004078/cluster_003/1_contigs/O_utg000003l.fasta (115,490 bp)
  results/clusters/1004078/cluster_003/1_contigs/P_utg000004c.fasta (114,371 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-05 17:33:48)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  A_Utg994:     [2m1.000[0m  1.000  1.000  1.004  0.999  0.999  0.999  0.999  0.999  0.999  1.000  1.000  1.000  0.990  1.000
  B_Utg1030:    1.000  [2m1.000[0m  1.000  1.004  0.999  0.999  0.999  0.999  0.999  0.999  1.000  1.000  0.999  0.990  0.999
  C_Utg1004:    1.000  1.000  [2m1.000[0m  1.004  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.999  0.990  0.999
  D_Utg1016:    0.996  0.996  0.996  [2m1.000[0m  0.995  0.995  0.995  0.995  0.995  0.995  0.996  0.996  0.996  0.986  0.996
  F_contig_2:   1.001  1.001  1.001  1.005  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  0.990  1.000
  G_contig_2:   1.001  1.001  1.001  1.005  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  0.990  1.000
  H_contig_2:   1.001  1.001  1.001  1.005  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  0.990  1.000
  I_contig_1:   1.001  1.001  1.001  1.005  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  0.990  1.000
  J_contig_3:   1.001  1.001  1.001  1.005  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  0.991  1.000
  K_contig_2:   1.001  1.001  1.001  1.005  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  0.991  1.000
  L_utg000003c: 1.000  1.000  1.001  1.004  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  0.990  1.000
  M_utg000003c: 1.000  1.000  1.001  1.004  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  0.990  1.000
  N_utg000003c: 1.000  1.001  1.001  1.004  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  0.990  1.000
  O_utg000003l: 1.010  1.010  1.011  1.014  1.010  1.010  1.010  1.010  1.010  1.010  1.010  1.010  1.010  [2m1.000[0m  1.010
  P_utg000004c: 1.000  1.001  1.001  1.004  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  0.990  [2m1.000[0m

Mash distances:
  A_Utg994:     [2m0.000[0m  0.002  0.001  0.002  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001
  B_Utg1030:    0.002  [2m0.000[0m  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002
  C_Utg1004:    0.001  0.002  [2m0.000[0m  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002
  D_Utg1016:    0.002  0.002  0.002  [2m0.000[0m  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002  0.002
  F_contig_2:   0.001  0.002  0.002  0.002  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_2:   0.002  0.002  0.002  0.002  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  H_contig_2:   0.001  0.002  0.002  0.002  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  I_contig_1:   0.001  0.002  0.002  0.002  0.000  0.000  0.000  [2m0.000[0m  0.001  0.000  0.000  0.000  0.000  0.000  0.000
  J_contig_3:   0.001  0.002  0.002  0.002  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  K_contig_2:   0.002  0.002  0.002  0.002  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  L_utg000003c: 0.001  0.002  0.002  0.002  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  M_utg000003c: 0.001  0.002  0.002  0.002  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  N_utg000003c: 0.001  0.002  0.002  0.002  0.000  0.000  0.000  0.000  0.000  0.001  0.000  0.000  [2m0.000[0m  0.000  0.000
  O_utg000003l: 0.001  0.002  0.002  0.002  0.000  0.000  0.000  0.000  0.000  0.001  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000004c: 0.001  0.002  0.002  0.002  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-05 17:33:50)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  CGGCGAAGAACACGAGGTAATACGCCGTTGGCTTGCTCTGGGACCAAAGC
  TTATCGTGGTCACCCGCGGGGCTGACGGCGCCGATGCCTGGACCGCTAAT
  TTCCATCTTCATGTTCCAGGGATTCGCGTAACGGTTGCCGATACCGTCGG
  CGCCGGGGATACGGTCAATGCCGGTATTCTCGCCAGCCTTTCGCAGGCCG
  GACTCCTTGAGAAGCCTAAATTAGTGACACTGTCACGAGAACAGGTGCGC

A_Utg994:     + strand (using original sequence)
B_Utg1030:    + strand (using original sequence)
C_Utg1004:    + strand (using original sequence)
D_Utg1016:    + strand (using original sequence)
F_contig_2:   + strand (using original sequence)
G_contig_2:   - strand (using reverse complement)
H_contig_2:   + strand (using original sequence)
I_contig_1:   + strand (using original sequence)
J_contig_3:   - strand (using reverse complement)
K_contig_2:   - strand (using reverse complement)
L_utg000003c: + strand (using original sequence)
M_utg000003c: + strand (using original sequence)
N_utg000003c: + strand (using original sequence)
O_utg000003l: + strand (using original sequence)
P_utg000004c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-05 17:33:51)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising A_Utg994:
  using B_Utg1030:
    unable to circularise: A_Utg994's start/end is the same as B_Utg1030's start/end
  using C_Utg1004:
    unable to circularise: A_Utg994's start/end is the same as C_Utg1004's start/end
  using D_Utg1016:
    no adjustment needed (A_Utg994 is already circular)
  using F_contig_2:
    no adjustment needed (A_Utg994 is already circular)
  using G_contig_2:
    no adjustment needed (A_Utg994 is already circular)
  using H_contig_2:
    no adjustment needed (A_Utg994 is already circular)
  using I_contig_1:
    no adjustment needed (A_Utg994 is already circular)
  using J_contig_3:
    no adjustment needed (A_Utg994 is already circular)
  using K_contig_2:
    no adjustment needed (A_Utg994 is already circular)
  using L_utg000003c:
    no adjustment needed (A_Utg994 is already circular)
  using M_utg000003c:
    no adjustment needed (A_Utg994 is already circular)
  using N_utg000003c:
    no adjustment needed (A_Utg994 is already circular)
  using O_utg000003l:
    no adjustment needed (A_Utg994 is already circular)
  using P_utg000004c:
    no adjustment needed (A_Utg994 is already circular)
  circularisation complete (114,319 bp)

Circularising B_Utg1030:
  using A_Utg994:
    unable to circularise: B_Utg1030's start/end is the same as A_Utg994's start/end
  using C_Utg1004:
    unable to circularise: B_Utg1030's end could not be found in C_Utg1004
  using D_Utg1016:
    no adjustment needed (B_Utg1030 is already circular)
  using F_contig_2:
    no adjustment needed (B_Utg1030 is already circular)
  using G_contig_2:
    no adjustment needed (B_Utg1030 is already circular)
  using H_contig_2:
    no adjustment needed (B_Utg1030 is already circular)
  using I_contig_1:
    no adjustment needed (B_Utg1030 is already circular)
  using J_contig_3:
    no adjustment needed (B_Utg1030 is already circular)
  using K_contig_2:
    no adjustment needed (B_Utg1030 is already circular)
  using L_utg000003c:
    no adjustment needed (B_Utg1030 is already circular)
  using M_utg000003c:
    no adjustment needed (B_Utg1030 is already circular)
  using N_utg000003c:
    no adjustment needed (B_Utg1030 is already circular)
  using O_utg000003l:
    no adjustment needed (B_Utg1030 is already circular)
  using P_utg000004c:
    no adjustment needed (B_Utg1030 is already circular)
  circularisation complete (114,312 bp)

Circularising C_Utg1004:
  using A_Utg994:
    unable to circularise: C_Utg1004 requires 90812 bp to be trimmed but settings only allow 11429 bp
  using B_Utg1030:
    unable to circularise: C_Utg1004 requires 90812 bp to be trimmed but settings only allow 11429 bp
  using D_Utg1016:
    no adjustment needed (C_Utg1004 is already circular)
  using F_contig_2:
    no adjustment needed (C_Utg1004 is already circular)
  using G_contig_2:
    no adjustment needed (C_Utg1004 is already circular)
  using H_contig_2:
    no adjustment needed (C_Utg1004 is already circular)
  using I_contig_1:
    no adjustment needed (C_Utg1004 is already circular)
  using J_contig_3:
    no adjustment needed (C_Utg1004 is already circular)
  using K_contig_2:
    no adjustment needed (C_Utg1004 is already circular)
  using L_utg000003c:
    no adjustment needed (C_Utg1004 is already circular)
  using M_utg000003c:
    no adjustment needed (C_Utg1004 is already circular)
  using N_utg000003c:
    no adjustment needed (C_Utg1004 is already circular)
  using O_utg000003l:
    no adjustment needed (C_Utg1004 is already circular)
  using P_utg000004c:
    no adjustment needed (C_Utg1004 is already circular)
  circularisation complete (114,288 bp)

Circularising D_Utg1016:
  using A_Utg994:
    unable to circularise: D_Utg1016's start could not be found in A_Utg994
  using B_Utg1030:
    unable to circularise: D_Utg1016's start could not be found in B_Utg1030
  using C_Utg1004:
    unable to circularise: D_Utg1016's start could not be found in C_Utg1004
  using F_contig_2:
    unable to circularise: cannot determine trim amount
  using G_contig_2:
    circularising D_Utg1016 by adding 427 bp of sequence from G_contig_2 (107130-107557)
  using H_contig_2:
    circularising D_Utg1016 by adding 428 bp of sequence from H_contig_2 (81490-81918)
  using I_contig_1:
    circularising D_Utg1016 by adding 429 bp of sequence from I_contig_1 (108978-109407)
  using J_contig_3:
    circularising D_Utg1016 by adding 430 bp of sequence from J_contig_3 (82406-82836)
  using K_contig_2:
    circularising D_Utg1016 by adding 427 bp of sequence from K_contig_2 (107134-107561)
  using L_utg000003c:
    circularising D_Utg1016 by adding 427 bp of sequence from L_utg000003c (3281-3708)
  using M_utg000003c:
    circularising D_Utg1016 by adding 425 bp of sequence from M_utg000003c (49696-50121)
  using N_utg000003c:
    circularising D_Utg1016 by adding 425 bp of sequence from N_utg000003c (49696-50121)
  using O_utg000003l:
    circularising D_Utg1016 by adding 422 bp of sequence from O_utg000003l (113956-114378)
  using P_utg000004c:
    circularising D_Utg1016 by adding 427 bp of sequence from P_utg000004c (85952-86379)
  choosing best circularisation of 2 alternatives
    alternative 1 (114,289 bp): score = 4,216,235
    alternative 2 (114,287 bp): score = 4,216,219
    best alternative: 1
  circularisation complete (114,289 bp)

Circularising F_contig_2:
  using A_Utg994:
    unable to circularise: F_contig_2's start could not be found in A_Utg994
  using B_Utg1030:
    unable to circularise: F_contig_2's start could not be found in B_Utg1030
  using C_Utg1004:
    no adjustment needed (F_contig_2 is already circular)
  using D_Utg1016:
    unable to circularise: F_contig_2's start could not be found in D_Utg1016
  using G_contig_2:
    no adjustment needed (F_contig_2 is already circular)
  using H_contig_2:
    no adjustment needed (F_contig_2 is already circular)
  using I_contig_1:
    no adjustment needed (F_contig_2 is already circular)
  using J_contig_3:
    no adjustment needed (F_contig_2 is already circular)
  using K_contig_2:
    no adjustment needed (F_contig_2 is already circular)
  using L_utg000003c:
    no adjustment needed (F_contig_2 is already circular)
  using M_utg000003c:
    no adjustment needed (F_contig_2 is already circular)
  using N_utg000003c:
    no adjustment needed (F_contig_2 is already circular)
  using O_utg000003l:
    no adjustment needed (F_contig_2 is already circular)
  using P_utg000004c:
    no adjustment needed (F_contig_2 is already circular)
  circularisation complete (114,387 bp)

Circularising G_contig_2:
  using A_Utg994:
    no adjustment needed (G_contig_2 is already circular)
  using B_Utg1030:
    no adjustment needed (G_contig_2 is already circular)
  using C_Utg1004:
    no adjustment needed (G_contig_2 is already circular)
  using D_Utg1016:
    no adjustment needed (G_contig_2 is already circular)
  using F_contig_2:
    no adjustment needed (G_contig_2 is already circular)
  using H_contig_2:
    no adjustment needed (G_contig_2 is already circular)
  using I_contig_1:
    no adjustment needed (G_contig_2 is already circular)
  using J_contig_3:
    no adjustment needed (G_contig_2 is already circular)
  using K_contig_2:
    unable to circularise: G_contig_2's start/end is the same as K_contig_2's start/end
  using L_utg000003c:
    no adjustment needed (G_contig_2 is already circular)
  using M_utg000003c:
    no adjustment needed (G_contig_2 is already circular)
  using N_utg000003c:
    no adjustment needed (G_contig_2 is already circular)
  using O_utg000003l:
    no adjustment needed (G_contig_2 is already circular)
  using P_utg000004c:
    no adjustment needed (G_contig_2 is already circular)
  circularisation complete (114,385 bp)

Circularising H_contig_2:
  using A_Utg994:
    no adjustment needed (H_contig_2 is already circular)
  using B_Utg1030:
    no adjustment needed (H_contig_2 is already circular)
  using C_Utg1004:
    no adjustment needed (H_contig_2 is already circular)
  using D_Utg1016:
    no adjustment needed (H_contig_2 is already circular)
  using F_contig_2:
    no adjustment needed (H_contig_2 is already circular)
  using G_contig_2:
    no adjustment needed (H_contig_2 is already circular)
  using I_contig_1:
    no adjustment needed (H_contig_2 is already circular)
  using J_contig_3:
    unable to circularise: H_contig_2's end could not be found in J_contig_3
  using K_contig_2:
    no adjustment needed (H_contig_2 is already circular)
  using L_utg000003c:
    no adjustment needed (H_contig_2 is already circular)
  using M_utg000003c:
    no adjustment needed (H_contig_2 is already circular)
  using N_utg000003c:
    no adjustment needed (H_contig_2 is already circular)
  using O_utg000003l:
    no adjustment needed (H_contig_2 is already circular)
  using P_utg000004c:
    no adjustment needed (H_contig_2 is already circular)
  circularisation complete (114,384 bp)

Circularising I_contig_1:
  using A_Utg994:
    no adjustment needed (I_contig_1 is already circular)
  using B_Utg1030:
    no adjustment needed (I_contig_1 is already circular)
  using C_Utg1004:
    no adjustment needed (I_contig_1 is already circular)
  using D_Utg1016:
    no adjustment needed (I_contig_1 is already circular)
  using F_contig_2:
    no adjustment needed (I_contig_1 is already circular)
  using G_contig_2:
    no adjustment needed (I_contig_1 is already circular)
  using H_contig_2:
    no adjustment needed (I_contig_1 is already circular)
  using J_contig_3:
    no adjustment needed (I_contig_1 is already circular)
  using K_contig_2:
    no adjustment needed (I_contig_1 is already circular)
  using L_utg000003c:
    no adjustment needed (I_contig_1 is already circular)
  using M_utg000003c:
    no adjustment needed (I_contig_1 is already circular)
  using N_utg000003c:
    no adjustment needed (I_contig_1 is already circular)
  using O_utg000003l:
    no adjustment needed (I_contig_1 is already circular)
  using P_utg000004c:
    no adjustment needed (I_contig_1 is already circular)
  circularisation complete (114,386 bp)

Circularising J_contig_3:
  using A_Utg994:
    no adjustment needed (J_contig_3 is already circular)
  using B_Utg1030:
    no adjustment needed (J_contig_3 is already circular)
  using C_Utg1004:
    no adjustment needed (J_contig_3 is already circular)
  using D_Utg1016:
    no adjustment needed (J_contig_3 is already circular)
  using F_contig_2:
    no adjustment needed (J_contig_3 is already circular)
  using G_contig_2:
    no adjustment needed (J_contig_3 is already circular)
  using H_contig_2:
    unable to circularise: J_contig_3's start could not be found in H_contig_2
  using I_contig_1:
    no adjustment needed (J_contig_3 is already circular)
  using K_contig_2:
    no adjustment needed (J_contig_3 is already circular)
  using L_utg000003c:
    no adjustment needed (J_contig_3 is already circular)
  using M_utg000003c:
    no adjustment needed (J_contig_3 is already circular)
  using N_utg000003c:
    no adjustment needed (J_contig_3 is already circular)
  using O_utg000003l:
    no adjustment needed (J_contig_3 is already circular)
  using P_utg000004c:
    no adjustment needed (J_contig_3 is already circular)
  circularisation complete (114,397 bp)

Circularising K_contig_2:
  using A_Utg994:
    no adjustment needed (K_contig_2 is already circular)
  using B_Utg1030:
    no adjustment needed (K_contig_2 is already circular)
  using C_Utg1004:
    no adjustment needed (K_contig_2 is already circular)
  using D_Utg1016:
    no adjustment needed (K_contig_2 is already circular)
  using F_contig_2:
    no adjustment needed (K_contig_2 is already circular)
  using G_contig_2:
    unable to circularise: K_contig_2's start/end is the same as G_contig_2's start/end
  using H_contig_2:
    no adjustment needed (K_contig_2 is already circular)
  using I_contig_1:
    no adjustment needed (K_contig_2 is already circular)
  using J_contig_3:
    no adjustment needed (K_contig_2 is already circular)
  using L_utg000003c:
    no adjustment needed (K_contig_2 is already circular)
  using M_utg000003c:
    no adjustment needed (K_contig_2 is already circular)
  using N_utg000003c:
    no adjustment needed (K_contig_2 is already circular)
  using O_utg000003l:
    no adjustment needed (K_contig_2 is already circular)
  using P_utg000004c:
    no adjustment needed (K_contig_2 is already circular)
  circularisation complete (114,400 bp)

Circularising L_utg000003c:
  using A_Utg994:
    no adjustment needed (L_utg000003c is already circular)
  using B_Utg1030:
    no adjustment needed (L_utg000003c is already circular)
  using C_Utg1004:
    no adjustment needed (L_utg000003c is already circular)
  using D_Utg1016:
    no adjustment needed (L_utg000003c is already circular)
  using F_contig_2:
    no adjustment needed (L_utg000003c is already circular)
  using G_contig_2:
    no adjustment needed (L_utg000003c is already circular)
  using H_contig_2:
    no adjustment needed (L_utg000003c is already circular)
  using I_contig_1:
    no adjustment needed (L_utg000003c is already circular)
  using J_contig_3:
    no adjustment needed (L_utg000003c is already circular)
  using K_contig_2:
    no adjustment needed (L_utg000003c is already circular)
  using M_utg000003c:
    no adjustment needed (L_utg000003c is already circular)
  using N_utg000003c:
    no adjustment needed (L_utg000003c is already circular)
  using O_utg000003l:
    no adjustment needed (L_utg000003c is already circular)
  using P_utg000004c:
    no adjustment needed (L_utg000003c is already circular)
  circularisation complete (114,361 bp)

Circularising M_utg000003c:
  using A_Utg994:
    no adjustment needed (M_utg000003c is already circular)
  using B_Utg1030:
    no adjustment needed (M_utg000003c is already circular)
  using C_Utg1004:
    no adjustment needed (M_utg000003c is already circular)
  using D_Utg1016:
    no adjustment needed (M_utg000003c is already circular)
  using F_contig_2:
    no adjustment needed (M_utg000003c is already circular)
  using G_contig_2:
    no adjustment needed (M_utg000003c is already circular)
  using H_contig_2:
    no adjustment needed (M_utg000003c is already circular)
  using I_contig_1:
    no adjustment needed (M_utg000003c is already circular)
  using J_contig_3:
    no adjustment needed (M_utg000003c is already circular)
  using K_contig_2:
    no adjustment needed (M_utg000003c is already circular)
  using L_utg000003c:
    no adjustment needed (M_utg000003c is already circular)
  using N_utg000003c:
    unable to circularise: M_utg000003c's start/end is the same as N_utg000003c's start/end
  using O_utg000003l:
    no adjustment needed (M_utg000003c is already circular)
  using P_utg000004c:
    no adjustment needed (M_utg000003c is already circular)
  circularisation complete (114,367 bp)

Circularising N_utg000003c:
  using A_Utg994:
    no adjustment needed (N_utg000003c is already circular)
  using B_Utg1030:
    no adjustment needed (N_utg000003c is already circular)
  using C_Utg1004:
    no adjustment needed (N_utg000003c is already circular)
  using D_Utg1016:
    no adjustment needed (N_utg000003c is already circular)
  using F_contig_2:
    no adjustment needed (N_utg000003c is already circular)
  using G_contig_2:
    no adjustment needed (N_utg000003c is already circular)
  using H_contig_2:
    no adjustment needed (N_utg000003c is already circular)
  using I_contig_1:
    no adjustment needed (N_utg000003c is already circular)
  using J_contig_3:
    no adjustment needed (N_utg000003c is already circular)
  using K_contig_2:
    no adjustment needed (N_utg000003c is already circular)
  using L_utg000003c:
    no adjustment needed (N_utg000003c is already circular)
  using M_utg000003c:
    unable to circularise: N_utg000003c's start/end is the same as M_utg000003c's start/end
  using O_utg000003l:
    no adjustment needed (N_utg000003c is already circular)
  using P_utg000004c:
    no adjustment needed (N_utg000003c is already circular)
  circularisation complete (114,370 bp)

Circularising O_utg000003l:
  using A_Utg994:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  using B_Utg1030:
    unable to circularise: O_utg000003l's end could not be found in B_Utg1030
  using C_Utg1004:
    unable to circularise: O_utg000003l's end could not be found in C_Utg1004
  using D_Utg1016:
    unable to circularise: O_utg000003l's start/end is the same as D_Utg1016's start/end
  using F_contig_2:
    unable to circularise: cannot determine trim amount
  using G_contig_2:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  using H_contig_2:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  using I_contig_1:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  using J_contig_3:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  using K_contig_2:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  using L_utg000003c:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  using M_utg000003c:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  using N_utg000003c:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  using P_utg000004c:
    circularising O_utg000003l by trimming 1125 bp of sequence from the end
  circularisation complete (114,365 bp)

Circularising P_utg000004c:
  using A_Utg994:
    no adjustment needed (P_utg000004c is already circular)
  using B_Utg1030:
    no adjustment needed (P_utg000004c is already circular)
  using C_Utg1004:
    no adjustment needed (P_utg000004c is already circular)
  using D_Utg1016:
    no adjustment needed (P_utg000004c is already circular)
  using F_contig_2:
    no adjustment needed (P_utg000004c is already circular)
  using G_contig_2:
    no adjustment needed (P_utg000004c is already circular)
  using H_contig_2:
    no adjustment needed (P_utg000004c is already circular)
  using I_contig_1:
    no adjustment needed (P_utg000004c is already circular)
  using J_contig_3:
    no adjustment needed (P_utg000004c is already circular)
  using K_contig_2:
    no adjustment needed (P_utg000004c is already circular)
  using L_utg000003c:
    no adjustment needed (P_utg000004c is already circular)
  using M_utg000003c:
    no adjustment needed (P_utg000004c is already circular)
  using N_utg000003c:
    no adjustment needed (P_utg000004c is already circular)
  using O_utg000003l:
    no adjustment needed (P_utg000004c is already circular)
  circularisation complete (114,371 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-05 17:34:06)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0014_A6D67_RS27660 (replication initiation protein)
  ATGACGAGCGAAAATAACAGCTTACTTCTGAACCTTCAGGAAGTTGATAA...

A_Utg994:     + strand (using original sequence)
B_Utg1030:    + strand (using original sequence)
C_Utg1004:    + strand (using original sequence)
D_Utg1016:    + strand (using original sequence)
F_contig_2:   + strand (using original sequence)
G_contig_2:   + strand (using original sequence)
H_contig_2:   + strand (using original sequence)
I_contig_1:   + strand (using original sequence)
J_contig_3:   + strand (using original sequence)
K_contig_2:   + strand (using original sequence)
L_utg000003c: + strand (using original sequence)
M_utg000003c: + strand (using original sequence)
N_utg000003c: + strand (using original sequence)
O_utg000003l: + strand (using original sequence)
P_utg000004c: + strand (using original sequence)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-05 17:34:08)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

A_Utg994: rotating by 70,968 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,319 bp)

B_Utg1030: rotating by 70,957 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,312 bp)

C_Utg1004: rotating by 70,985 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,288 bp)

D_Utg1016: rotating by 58,483 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,289 bp)

F_contig_2: rotating by 58,961 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,387 bp)

G_contig_2: rotating by 51,748 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,385 bp)

H_contig_2: rotating by 26,106 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,384 bp)

I_contig_1: rotating by 53,596 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,386 bp)

J_contig_3: rotating by 27,021 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,397 bp)

K_contig_2: rotating by 51,749 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,400 bp)

L_utg000003c: rotating by 62,262 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,361 bp)

M_utg000003c: rotating by 108,688 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,367 bp)

N_utg000003c: rotating by 108,686 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,370 bp)

O_utg000003l: rotating by 58,580 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,365 bp)

P_utg000004c: rotating by 30,573 bp
   ATGACGAGCGAAAATAATAG...GATAACCGTTGAGGATCAAG (114,371 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-05 17:34:08)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

    A_Utg994 vs B_Utg1030...    99.446% overall identity, 71.1% worst-1kbp identity
    A_Utg994 vs C_Utg1004...    99.624% overall identity, 84.1% worst-1kbp identity
    A_Utg994 vs D_Utg1016...    99.481% overall identity, 76.4% worst-1kbp identity
    A_Utg994 vs F_contig_2...   99.593% overall identity, 76.3% worst-1kbp identity
    A_Utg994 vs G_contig_2...   99.596% overall identity, 76.4% worst-1kbp identity
    A_Utg994 vs H_contig_2...   99.593% overall identity, 76.2% worst-1kbp identity
    A_Utg994 vs I_contig_1...   99.590% overall identity, 76.3% worst-1kbp identity
    A_Utg994 vs J_contig_3...   99.594% overall identity, 76.7% worst-1kbp identity
    A_Utg994 vs K_contig_2...   99.588% overall identity, 76.7% worst-1kbp identity
    A_Utg994 vs L_utg000003c... 99.587% overall identity, 76.1% worst-1kbp identity
    A_Utg994 vs M_utg000003c... 99.582% overall identity, 76.1% worst-1kbp identity
    A_Utg994 vs N_utg000003c... 99.580% overall identity, 76.1% worst-1kbp identity
    A_Utg994 vs O_utg000003l... 99.595% overall identity, 76.5% worst-1kbp identity
    A_Utg994 vs P_utg000004c... 99.587% overall identity, 76.1% worst-1kbp identity
   B_Utg1030 vs C_Utg1004...    99.529% overall identity, 71.0% worst-1kbp identity
   B_Utg1030 vs D_Utg1016...    99.460% overall identity, 84.3% worst-1kbp identity
   B_Utg1030 vs F_contig_2...   99.585% overall identity, 85.9% worst-1kbp identity
   B_Utg1030 vs G_contig_2...   99.582% overall identity, 85.4% worst-1kbp identity
   B_Utg1030 vs H_contig_2...   99.584% overall identity, 85.9% worst-1kbp identity
   B_Utg1030 vs I_contig_1...   99.576% overall identity, 85.8% worst-1kbp identity
   B_Utg1030 vs J_contig_3...   99.582% overall identity, 85.6% worst-1kbp identity
   B_Utg1030 vs K_contig_2...   99.576% overall identity, 85.6% worst-1kbp identity
   B_Utg1030 vs L_utg000003c... 99.573% overall identity, 84.1% worst-1kbp identity
   B_Utg1030 vs M_utg000003c... 99.571% overall identity, 85.0% worst-1kbp identity
   B_Utg1030 vs N_utg000003c... 99.569% overall identity, 85.0% worst-1kbp identity
   B_Utg1030 vs O_utg000003l... 99.581% overall identity, 85.4% worst-1kbp identity
   B_Utg1030 vs P_utg000004c... 99.579% overall identity, 85.2% worst-1kbp identity
   C_Utg1004 vs D_Utg1016...    99.463% overall identity, 82.4% worst-1kbp identity
   C_Utg1004 vs F_contig_2...   99.464% overall identity, 73.3% worst-1kbp identity
   C_Utg1004 vs G_contig_2...   99.461% overall identity, 73.2% worst-1kbp identity
   C_Utg1004 vs H_contig_2...   99.461% overall identity, 73.2% worst-1kbp identity
   C_Utg1004 vs I_contig_1...   99.457% overall identity, 73.3% worst-1kbp identity
   C_Utg1004 vs J_contig_3...   99.468% overall identity, 73.6% worst-1kbp identity
   C_Utg1004 vs K_contig_2...   99.460% overall identity, 73.5% worst-1kbp identity
   C_Utg1004 vs L_utg000003c... 99.450% overall identity, 73.1% worst-1kbp identity
   C_Utg1004 vs M_utg000003c... 99.453% overall identity, 73.1% worst-1kbp identity
   C_Utg1004 vs N_utg000003c... 99.453% overall identity, 73.1% worst-1kbp identity
   C_Utg1004 vs O_utg000003l... 99.453% overall identity, 73.2% worst-1kbp identity
   C_Utg1004 vs P_utg000004c... 99.455% overall identity, 73.1% worst-1kbp identity
   D_Utg1016 vs F_contig_2...   99.538% overall identity, 79.3% worst-1kbp identity
   D_Utg1016 vs G_contig_2...   99.540% overall identity, 79.2% worst-1kbp identity
   D_Utg1016 vs H_contig_2...   99.535% overall identity, 79.3% worst-1kbp identity
   D_Utg1016 vs I_contig_1...   99.535% overall identity, 79.2% worst-1kbp identity
   D_Utg1016 vs J_contig_3...   99.530% overall identity, 79.1% worst-1kbp identity
   D_Utg1016 vs K_contig_2...   99.527% overall identity, 79.0% worst-1kbp identity
   D_Utg1016 vs L_utg000003c... 99.525% overall identity, 79.0% worst-1kbp identity
   D_Utg1016 vs M_utg000003c... 99.525% overall identity, 79.1% worst-1kbp identity
   D_Utg1016 vs N_utg000003c... 99.525% overall identity, 79.1% worst-1kbp identity
   D_Utg1016 vs O_utg000003l... 99.531% overall identity, 78.9% worst-1kbp identity
   D_Utg1016 vs P_utg000004c... 99.532% overall identity, 79.1% worst-1kbp identity
  F_contig_2 vs G_contig_2...   99.988% overall identity, 99.3% worst-1kbp identity
  F_contig_2 vs H_contig_2...   99.983% overall identity, 99.6% worst-1kbp identity
  F_contig_2 vs I_contig_1...   99.984% overall identity, 99.7% worst-1kbp identity
  F_contig_2 vs J_contig_3...   99.970% overall identity, 98.8% worst-1kbp identity
  F_contig_2 vs K_contig_2...   99.972% overall identity, 99.1% worst-1kbp identity
  F_contig_2 vs L_utg000003c... 99.965% overall identity, 98.0% worst-1kbp identity
  F_contig_2 vs M_utg000003c... 99.965% overall identity, 98.9% worst-1kbp identity
  F_contig_2 vs N_utg000003c... 99.967% overall identity, 98.9% worst-1kbp identity
  F_contig_2 vs O_utg000003l... 99.965% overall identity, 99.2% worst-1kbp identity
  F_contig_2 vs P_utg000004c... 99.972% overall identity, 99.1% worst-1kbp identity
  G_contig_2 vs H_contig_2...   99.980% overall identity, 99.3% worst-1kbp identity
  G_contig_2 vs I_contig_1...   99.981% overall identity, 99.4% worst-1kbp identity
  G_contig_2 vs J_contig_3...   99.970% overall identity, 98.6% worst-1kbp identity
  G_contig_2 vs K_contig_2...   99.969% overall identity, 98.7% worst-1kbp identity
  G_contig_2 vs L_utg000003c... 99.965% overall identity, 97.9% worst-1kbp identity
  G_contig_2 vs M_utg000003c... 99.963% overall identity, 99.1% worst-1kbp identity
  G_contig_2 vs N_utg000003c... 99.965% overall identity, 99.1% worst-1kbp identity
  G_contig_2 vs O_utg000003l... 99.965% overall identity, 99.1% worst-1kbp identity
  G_contig_2 vs P_utg000004c... 99.972% overall identity, 99.2% worst-1kbp identity
  H_contig_2 vs I_contig_1...   99.982% overall identity, 99.6% worst-1kbp identity
  H_contig_2 vs J_contig_3...   99.964% overall identity, 98.7% worst-1kbp identity
  H_contig_2 vs K_contig_2...   99.966% overall identity, 99.0% worst-1kbp identity
  H_contig_2 vs L_utg000003c... 99.965% overall identity, 98.1% worst-1kbp identity
  H_contig_2 vs M_utg000003c... 99.962% overall identity, 99.0% worst-1kbp identity
  H_contig_2 vs N_utg000003c... 99.963% overall identity, 99.0% worst-1kbp identity
  H_contig_2 vs O_utg000003l... 99.965% overall identity, 99.0% worst-1kbp identity
  H_contig_2 vs P_utg000004c... 99.970% overall identity, 99.2% worst-1kbp identity
  I_contig_1 vs J_contig_3...   99.963% overall identity, 98.5% worst-1kbp identity
  I_contig_1 vs K_contig_2...   99.969% overall identity, 98.9% worst-1kbp identity
  I_contig_1 vs L_utg000003c... 99.959% overall identity, 98.1% worst-1kbp identity
  I_contig_1 vs M_utg000003c... 99.961% overall identity, 99.0% worst-1kbp identity
  I_contig_1 vs N_utg000003c... 99.964% overall identity, 99.0% worst-1kbp identity
  I_contig_1 vs O_utg000003l... 99.959% overall identity, 98.9% worst-1kbp identity
  I_contig_1 vs P_utg000004c... 99.969% overall identity, 99.2% worst-1kbp identity
  J_contig_3 vs K_contig_2...   99.977% overall identity, 99.4% worst-1kbp identity
  J_contig_3 vs L_utg000003c... 99.953% overall identity, 97.4% worst-1kbp identity
  J_contig_3 vs M_utg000003c... 99.949% overall identity, 98.3% worst-1kbp identity
  J_contig_3 vs N_utg000003c... 99.949% overall identity, 98.3% worst-1kbp identity
  J_contig_3 vs O_utg000003l... 99.955% overall identity, 98.8% worst-1kbp identity
  J_contig_3 vs P_utg000004c... 99.958% overall identity, 98.5% worst-1kbp identity
  K_contig_2 vs L_utg000003c... 99.949% overall identity, 97.3% worst-1kbp identity
  K_contig_2 vs M_utg000003c... 99.949% overall identity, 98.2% worst-1kbp identity
  K_contig_2 vs N_utg000003c... 99.949% overall identity, 98.2% worst-1kbp identity
  K_contig_2 vs O_utg000003l... 99.951% overall identity, 98.7% worst-1kbp identity
  K_contig_2 vs P_utg000004c... 99.958% overall identity, 98.4% worst-1kbp identity
L_utg000003c vs M_utg000003c... 99.955% overall identity, 97.9% worst-1kbp identity
L_utg000003c vs N_utg000003c... 99.958% overall identity, 97.9% worst-1kbp identity
L_utg000003c vs O_utg000003l... 99.962% overall identity, 98.2% worst-1kbp identity
L_utg000003c vs P_utg000004c... 99.969% overall identity, 98.1% worst-1kbp identity
M_utg000003c vs N_utg000003c... 99.988% overall identity, 99.6% worst-1kbp identity
M_utg000003c vs O_utg000003l... 99.963% overall identity, 98.9% worst-1kbp identity
M_utg000003c vs P_utg000004c... 99.972% overall identity, 99.1% worst-1kbp identity
N_utg000003c vs O_utg000003l... 99.965% overall identity, 98.9% worst-1kbp identity
N_utg000003c vs P_utg000004c... 99.974% overall identity, 99.1% worst-1kbp identity
O_utg000003l vs P_utg000004c... 99.969% overall identity, 99.1% worst-1kbp identity

Overall pairwise identities:
  A_Utg994:     [2m100.000%[0m   99.446%   99.624%   99.481%   99.593%   99.596%   99.593%   99.590%   99.594%   99.588%   99.587%   99.582%   99.580%   99.595%   99.587%
  B_Utg1030:     99.446%  [2m100.000%[0m   99.529%   99.460%   99.585%   99.582%   99.584%   99.576%   99.582%   99.576%   99.573%   99.571%   99.569%   99.581%   99.579%
  C_Utg1004:     99.624%   99.529%  [2m100.000%[0m   99.463%   99.464%   99.461%   99.461%   99.457%   99.468%   99.460%   99.450%   99.453%   99.453%   99.453%   99.455%
  D_Utg1016:     99.481%   99.460%   99.463%  [2m100.000%[0m   99.538%   99.540%   99.535%   99.535%   99.530%   99.527%   99.525%   99.525%   99.525%   99.531%   99.532%
  F_contig_2:    99.593%   99.585%   99.464%   99.538%  [2m100.000%[0m   99.988%   99.983%   99.984%   99.970%   99.972%   99.965%   99.965%   99.967%   99.965%   99.972%
  G_contig_2:    99.596%   99.582%   99.461%   99.540%   99.988%  [2m100.000%[0m   99.980%   99.981%   99.970%   99.969%   99.965%   99.963%   99.965%   99.965%   99.972%
  H_contig_2:    99.593%   99.584%   99.461%   99.535%   99.983%   99.980%  [2m100.000%[0m   99.982%   99.964%   99.966%   99.965%   99.962%   99.963%   99.965%   99.970%
  I_contig_1:    99.590%   99.576%   99.457%   99.535%   99.984%   99.981%   99.982%  [2m100.000%[0m   99.963%   99.969%   99.959%   99.961%   99.964%   99.959%   99.969%
  J_contig_3:    99.594%   99.582%   99.468%   99.530%   99.970%   99.970%   99.964%   99.963%  [2m100.000%[0m   99.977%   99.953%   99.949%   99.949%   99.955%   99.958%
  K_contig_2:    99.588%   99.576%   99.460%   99.527%   99.972%   99.969%   99.966%   99.969%   99.977%  [2m100.000%[0m   99.949%   99.949%   99.949%   99.951%   99.958%
  L_utg000003c:  99.587%   99.573%   99.450%   99.525%   99.965%   99.965%   99.965%   99.959%   99.953%   99.949%  [2m100.000%[0m   99.955%   99.958%   99.962%   99.969%
  M_utg000003c:  99.582%   99.571%   99.453%   99.525%   99.965%   99.963%   99.962%   99.961%   99.949%   99.949%   99.955%  [2m100.000%[0m   99.988%   99.963%   99.972%
  N_utg000003c:  99.580%   99.569%   99.453%   99.525%   99.967%   99.965%   99.963%   99.964%   99.949%   99.949%   99.958%   99.988%  [2m100.000%[0m   99.965%   99.974%
  O_utg000003l:  99.595%   99.581%   99.453%   99.531%   99.965%   99.965%   99.965%   99.959%   99.955%   99.951%   99.962%   99.963%   99.965%  [2m100.000%[0m   99.969%
  P_utg000004c:  99.587%   99.579%   99.455%   99.532%   99.972%   99.972%   99.970%   99.969%   99.958%   99.958%   99.969%   99.972%   99.974%   99.969%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  A_Utg994:     [2m100.0%[0m   71.1%   84.1%   76.4%   76.3%   76.4%   76.2%   76.3%   76.7%   76.7%   76.1%   76.1%   76.1%   76.5%   76.1%
  B_Utg1030:     71.1%  [2m100.0%[0m   71.0%   84.3%   85.9%   85.4%   85.9%   85.8%   85.6%   85.6%   84.1%   85.0%   85.0%   85.4%   85.2%
  C_Utg1004:     84.1%   71.0%  [2m100.0%[0m   82.4%   73.3%   73.2%   73.2%   73.3%   73.6%   73.5%   73.1%   73.1%   73.1%   73.2%   73.1%
  D_Utg1016:     76.4%   84.3%   82.4%  [2m100.0%[0m   79.3%   79.2%   79.3%   79.2%   79.1%   79.0%   79.0%   79.1%   79.1%   78.9%   79.1%
  F_contig_2:    76.3%   85.9%   73.3%   79.3%  [2m100.0%[0m   99.3%   99.6%   99.7%   98.8%   99.1%   98.0%   98.9%   98.9%   99.2%   99.1%
  G_contig_2:    76.4%   85.4%   73.2%   79.2%   99.3%  [2m100.0%[0m   99.3%   99.4%   98.6%   98.7%   97.9%   99.1%   99.1%   99.1%   99.2%
  H_contig_2:    76.2%   85.9%   73.2%   79.3%   99.6%   99.3%  [2m100.0%[0m   99.6%   98.7%   99.0%   98.1%   99.0%   99.0%   99.0%   99.2%
  I_contig_1:    76.3%   85.8%   73.3%   79.2%   99.7%   99.4%   99.6%  [2m100.0%[0m   98.5%   98.9%   98.1%   99.0%   99.0%   98.9%   99.2%
  J_contig_3:    76.7%   85.6%   73.6%   79.1%   98.8%   98.6%   98.7%   98.5%  [2m100.0%[0m   99.4%   97.4%   98.3%   98.3%   98.8%   98.5%
  K_contig_2:    76.7%   85.6%   73.5%   79.0%   99.1%   98.7%   99.0%   98.9%   99.4%  [2m100.0%[0m   97.3%   98.2%   98.2%   98.7%   98.4%
  L_utg000003c:  76.1%   84.1%   73.1%   79.0%   98.0%   97.9%   98.1%   98.1%   97.4%   97.3%  [2m100.0%[0m   97.9%   97.9%   98.2%   98.1%
  M_utg000003c:  76.1%   85.0%   73.1%   79.1%   98.9%   99.1%   99.0%   99.0%   98.3%   98.2%   97.9%  [2m100.0%[0m   99.6%   98.9%   99.1%
  N_utg000003c:  76.1%   85.0%   73.1%   79.1%   98.9%   99.1%   99.0%   99.0%   98.3%   98.2%   97.9%   99.6%  [2m100.0%[0m   98.9%   99.1%
  O_utg000003l:  76.5%   85.4%   73.2%   78.9%   99.2%   99.1%   99.0%   98.9%   98.8%   98.7%   98.2%   98.9%   98.9%  [2m100.0%[0m   99.1%
  P_utg000004c:  76.1%   85.2%   73.1%   79.1%   99.1%   99.2%   99.2%   99.2%   98.5%   98.4%   98.1%   99.1%   99.1%   99.1%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-05 17:34:14)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/1004078/cluster_003/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-05 17:34:14)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/1004078_0.fastq.gz
  size = 243,197,721 bytes

Input contigs:
  results/clusters/1004078/cluster_004/1_contigs/A_Utg998.fasta (3,467 bp)
  results/clusters/1004078/cluster_004/1_contigs/B_Utg1036.fasta (3,470 bp)
  results/clusters/1004078/cluster_004/1_contigs/C_Utg1010.fasta (3,468 bp)
  results/clusters/1004078/cluster_004/1_contigs/E_Utg994.fasta (3,475 bp)
  results/clusters/1004078/cluster_004/1_contigs/L_utg000004c.fasta (3,474 bp)
  results/clusters/1004078/cluster_004/1_contigs/M_utg000004c.fasta (3,474 bp)
  results/clusters/1004078/cluster_004/1_contigs/N_utg000004c.fasta (3,476 bp)
  results/clusters/1004078/cluster_004/1_contigs/O_utg000004c.fasta (3,475 bp)
  results/clusters/1004078/cluster_004/1_contigs/P_utg000003c.fasta (3,476 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-05 17:34:14)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  A_Utg998:     [2m1.000[0m  0.999  1.000  0.998  0.998  0.998  0.997  0.998  0.997
  B_Utg1036:    1.001  [2m1.000[0m  1.001  0.999  0.999  0.999  0.998  0.999  0.998
  C_Utg1010:    1.000  0.999  [2m1.000[0m  0.998  0.998  0.998  0.998  0.998  0.998
  E_Utg994:     1.002  1.001  1.002  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000
  L_utg000004c: 1.002  1.001  1.002  1.000  [2m1.000[0m  1.000  0.999  1.000  0.999
  M_utg000004c: 1.002  1.001  1.002  1.000  1.000  [2m1.000[0m  0.999  1.000  0.999
  N_utg000004c: 1.003  1.002  1.002  1.000  1.001  1.001  [2m1.000[0m  1.000  1.000
  O_utg000004c: 1.002  1.001  1.002  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000
  P_utg000003c: 1.003  1.002  1.002  1.000  1.001  1.001  1.000  1.000  [2m1.000[0m

Mash distances:
  A_Utg998:     [2m0.000[0m  0.003  0.004  0.003  0.003  0.003  0.003  0.003  0.003
  B_Utg1036:    0.003  [2m0.000[0m  0.005  0.004  0.004  0.004  0.004  0.004  0.004
  C_Utg1010:    0.004  0.005  [2m0.000[0m  0.001  0.002  0.002  0.002  0.002  0.002
  E_Utg994:     0.003  0.004  0.001  [2m0.000[0m  0.002  0.002  0.001  0.002  0.002
  L_utg000004c: 0.003  0.004  0.003  0.002  [2m0.000[0m  0.001  0.001  0.001  0.001
  M_utg000004c: 0.003  0.004  0.002  0.002  0.001  [2m0.000[0m  0.000  0.001  0.001
  N_utg000004c: 0.003  0.003  0.002  0.001  0.001  0.000  [2m0.000[0m  0.001  0.001
  O_utg000004c: 0.003  0.004  0.002  0.002  0.001  0.001  0.001  [2m0.000[0m  0.001
  P_utg000003c: 0.003  0.004  0.002  0.002  0.001  0.001  0.001  0.001  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-05 17:34:14)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  CGTCAGAAACGCCCTGAAGCCGTTTTAGCGGTGCACGTAATAGGGCTTTA
  TGTTAAATTAAGACTGGTTTGATGTTTAAACTTATAGTGATCTTTTTAGT
  GTGTTACTCCAATTCGAATAGTACACACCCCTTTCCTGCTGCAGCAATTC
  GAACTAGCTCATCAACAGTCTTGGACTCAAGATCAAACAGAACTAACTTT
  GCTTTATTGGGGGTTATCGAGTTACCTGCGGCTGCGGCAATCCGCACGAG

A_Utg998:     + strand (using original sequence)
B_Utg1036:    + strand (using original sequence)
C_Utg1010:    - strand (using reverse complement)
E_Utg994:     - strand (using reverse complement)
L_utg000004c: + strand (using original sequence)
M_utg000004c: - strand (using reverse complement)
N_utg000004c: - strand (using reverse complement)
O_utg000004c: - strand (using reverse complement)
P_utg000003c: - strand (using reverse complement)


[93m[1m[4mCircularisation[0m [2m(2024-07-05 17:34:15)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising A_Utg998:
  using B_Utg1036:
    unable to circularise: A_Utg998's start/end is the same as B_Utg1036's start/end
  using C_Utg1010:
    no adjustment needed (A_Utg998 is already circular)
  using E_Utg994:
    no adjustment needed (A_Utg998 is already circular)
  using L_utg000004c:
    no adjustment needed (A_Utg998 is already circular)
  using M_utg000004c:
    unable to circularise: A_Utg998's end could not be found in M_utg000004c
  using N_utg000004c:
    unable to circularise: A_Utg998's end could not be found in N_utg000004c
  using O_utg000004c:
    no adjustment needed (A_Utg998 is already circular)
  using P_utg000003c:
    no adjustment needed (A_Utg998 is already circular)
  circularisation complete (3,467 bp)

Circularising B_Utg1036:
  using A_Utg998:
    unable to circularise: B_Utg1036's start/end is the same as A_Utg998's start/end
  using C_Utg1010:
    no adjustment needed (B_Utg1036 is already circular)
  using E_Utg994:
    no adjustment needed (B_Utg1036 is already circular)
  using L_utg000004c:
    no adjustment needed (B_Utg1036 is already circular)
  using M_utg000004c:
    unable to circularise: B_Utg1036's end could not be found in M_utg000004c
  using N_utg000004c:
    unable to circularise: B_Utg1036's end could not be found in N_utg000004c
  using O_utg000004c:
    no adjustment needed (B_Utg1036 is already circular)
  using P_utg000003c:
    no adjustment needed (B_Utg1036 is already circular)
  circularisation complete (3,470 bp)

Circularising C_Utg1010:
  using A_Utg998:
    no adjustment needed (C_Utg1010 is already circular)
  using B_Utg1036:
    no adjustment needed (C_Utg1010 is already circular)
  using E_Utg994:
    unable to circularise: C_Utg1010's start/end is the same as E_Utg994's start/end
  using L_utg000004c:
    unable to circularise: C_Utg1010's end could not be found in L_utg000004c
  using M_utg000004c:
    no adjustment needed (C_Utg1010 is already circular)
  using N_utg000004c:
    no adjustment needed (C_Utg1010 is already circular)
  using O_utg000004c:
    no adjustment needed (C_Utg1010 is already circular)
  using P_utg000003c:
    no adjustment needed (C_Utg1010 is already circular)
  circularisation complete (3,468 bp)

Circularising E_Utg994:
  using A_Utg998:
    no adjustment needed (E_Utg994 is already circular)
  using B_Utg1036:
    no adjustment needed (E_Utg994 is already circular)
  using C_Utg1010:
    unable to circularise: E_Utg994's start/end is the same as C_Utg1010's start/end
  using L_utg000004c:
    unable to circularise: E_Utg994's end could not be found in L_utg000004c
  using M_utg000004c:
    no adjustment needed (E_Utg994 is already circular)
  using N_utg000004c:
    no adjustment needed (E_Utg994 is already circular)
  using O_utg000004c:
    no adjustment needed (E_Utg994 is already circular)
  using P_utg000003c:
    no adjustment needed (E_Utg994 is already circular)
  circularisation complete (3,475 bp)

Circularising L_utg000004c:
  using A_Utg998:
    no adjustment needed (L_utg000004c is already circular)
  using B_Utg1036:
    no adjustment needed (L_utg000004c is already circular)
  using C_Utg1010:
    unable to circularise: L_utg000004c's start could not be found in C_Utg1010
  using E_Utg994:
    unable to circularise: L_utg000004c's start could not be found in E_Utg994
  using M_utg000004c:
    no adjustment needed (L_utg000004c is already circular)
  using N_utg000004c:
    no adjustment needed (L_utg000004c is already circular)
  using O_utg000004c:
    no adjustment needed (L_utg000004c is already circular)
  using P_utg000003c:
    no adjustment needed (L_utg000004c is already circular)
  circularisation complete (3,474 bp)

Circularising M_utg000004c:
  using A_Utg998:
    unable to circularise: M_utg000004c's start could not be found in A_Utg998
  using B_Utg1036:
    unable to circularise: M_utg000004c's start could not be found in B_Utg1036
  using C_Utg1010:
    no adjustment needed (M_utg000004c is already circular)
  using E_Utg994:
    no adjustment needed (M_utg000004c is already circular)
  using L_utg000004c:
    no adjustment needed (M_utg000004c is already circular)
  using N_utg000004c:
    unable to circularise: M_utg000004c's start/end is the same as N_utg000004c's start/end
  using O_utg000004c:
    no adjustment needed (M_utg000004c is already circular)
  using P_utg000003c:
    no adjustment needed (M_utg000004c is already circular)
  circularisation complete (3,474 bp)

Circularising N_utg000004c:
  using A_Utg998:
    unable to circularise: N_utg000004c's start could not be found in A_Utg998
  using B_Utg1036:
    unable to circularise: N_utg000004c's start could not be found in B_Utg1036
  using C_Utg1010:
    no adjustment needed (N_utg000004c is already circular)
  using E_Utg994:
    no adjustment needed (N_utg000004c is already circular)
  using L_utg000004c:
    no adjustment needed (N_utg000004c is already circular)
  using M_utg000004c:
    unable to circularise: N_utg000004c's start/end is the same as M_utg000004c's start/end
  using O_utg000004c:
    no adjustment needed (N_utg000004c is already circular)
  using P_utg000003c:
    no adjustment needed (N_utg000004c is already circular)
  circularisation complete (3,476 bp)

Circularising O_utg000004c:
  using A_Utg998:
    no adjustment needed (O_utg000004c is already circular)
  using B_Utg1036:
    no adjustment needed (O_utg000004c is already circular)
  using C_Utg1010:
    no adjustment needed (O_utg000004c is already circular)
  using E_Utg994:
    no adjustment needed (O_utg000004c is already circular)
  using L_utg000004c:
    no adjustment needed (O_utg000004c is already circular)
  using M_utg000004c:
    no adjustment needed (O_utg000004c is already circular)
  using N_utg000004c:
    no adjustment needed (O_utg000004c is already circular)
  using P_utg000003c:
    unable to circularise: O_utg000004c's start could not be found in P_utg000003c
  circularisation complete (3,475 bp)

Circularising P_utg000003c:
  using A_Utg998:
    no adjustment needed (P_utg000003c is already circular)
  using B_Utg1036:
    no adjustment needed (P_utg000003c is already circular)
  using C_Utg1010:
    no adjustment needed (P_utg000003c is already circular)
  using E_Utg994:
    no adjustment needed (P_utg000003c is already circular)
  using L_utg000004c:
    no adjustment needed (P_utg000003c is already circular)
  using M_utg000004c:
    no adjustment needed (P_utg000003c is already circular)
  using N_utg000004c:
    no adjustment needed (P_utg000003c is already circular)
  using O_utg000004c:
    no adjustment needed (P_utg000003c is already circular)
  circularisation complete (3,476 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-05 17:34:16)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 7052_A6P37_RS31595 (replication initiation protein)
  ATGCACGAACCCCCCGTTCAGTCCGACTACTGCGCTAATTCGGTAACTAT...

A_Utg998:     - strand (using reverse complement)
B_Utg1036:    - strand (using reverse complement)
C_Utg1010:    - strand (using reverse complement)
E_Utg994:     - strand (using reverse complement)
L_utg000004c: - strand (using reverse complement)
M_utg000004c: - strand (using reverse complement)
N_utg000004c: - strand (using reverse complement)
O_utg000004c: - strand (using reverse complement)
P_utg000003c: - strand (using reverse complement)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-05 17:34:16)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

A_Utg998: rotating by 636 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (3,467 bp)

B_Utg1036: rotating by 628 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (3,470 bp)

C_Utg1010: rotating by 2,109 bp
   ATGCACGAACCCCGTTCAGT...TTCGCTCCAAGCTGGACTGT (3,468 bp)

E_Utg994: rotating by 2,115 bp
   ATGCACGAACCCCGTTCAGT...TTCGCTCCAAGCTGGACTGT (3,475 bp)

L_utg000004c: rotating by 1,945 bp
   ATGCACGAACCCCCGTTCAG...TTCGCTCCAAGCTGGACTGT (3,474 bp)

M_utg000004c: rotating by 335 bp
   ATGCACGAACCCCCGTTCAG...TTCGCTCCAAGCTGGACTGT (3,474 bp)

N_utg000004c: rotating by 336 bp
   ATGCACGAACCCCCGTTCAG...TTCGCTCCAAGCTGGACTGT (3,476 bp)

O_utg000004c: rotating by 2,455 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (3,475 bp)

P_utg000003c: rotating by 2,787 bp
   ATGCACGAACCCCCGTTCAG...TTCGCTCCAAGCTGGACTGT (3,476 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-05 17:34:16)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

    A_Utg998 vs B_Utg1036...    99.396% overall identity, 98.7% worst-1kbp identity
    A_Utg998 vs C_Utg1010...    99.110% overall identity, 97.6% worst-1kbp identity
    A_Utg998 vs E_Utg994...     99.339% overall identity, 98.2% worst-1kbp identity
    A_Utg998 vs L_utg000004c... 99.483% overall identity, 98.4% worst-1kbp identity
    A_Utg998 vs M_utg000004c... 99.425% overall identity, 98.2% worst-1kbp identity
    A_Utg998 vs N_utg000004c... 99.425% overall identity, 98.2% worst-1kbp identity
    A_Utg998 vs O_utg000004c... 99.454% overall identity, 98.2% worst-1kbp identity
    A_Utg998 vs P_utg000003c... 99.425% overall identity, 98.2% worst-1kbp identity
   B_Utg1036 vs C_Utg1010...    99.053% overall identity, 97.9% worst-1kbp identity
   B_Utg1036 vs E_Utg994...     99.339% overall identity, 98.6% worst-1kbp identity
   B_Utg1036 vs L_utg000004c... 99.368% overall identity, 98.6% worst-1kbp identity
   B_Utg1036 vs M_utg000004c... 99.368% overall identity, 98.6% worst-1kbp identity
   B_Utg1036 vs N_utg000004c... 99.425% overall identity, 98.7% worst-1kbp identity
   B_Utg1036 vs O_utg000004c... 99.397% overall identity, 98.6% worst-1kbp identity
   B_Utg1036 vs P_utg000003c... 99.368% overall identity, 98.6% worst-1kbp identity
   C_Utg1010 vs E_Utg994...     99.712% overall identity, 99.2% worst-1kbp identity
   C_Utg1010 vs L_utg000004c... 99.569% overall identity, 99.0% worst-1kbp identity
   C_Utg1010 vs M_utg000004c... 99.597% overall identity, 99.0% worst-1kbp identity
   C_Utg1010 vs N_utg000004c... 99.569% overall identity, 99.0% worst-1kbp identity
   C_Utg1010 vs O_utg000004c... 99.569% overall identity, 98.9% worst-1kbp identity
   C_Utg1010 vs P_utg000003c... 99.598% overall identity, 99.0% worst-1kbp identity
    E_Utg994 vs L_utg000004c... 99.799% overall identity, 99.6% worst-1kbp identity
    E_Utg994 vs M_utg000004c... 99.799% overall identity, 99.6% worst-1kbp identity
    E_Utg994 vs N_utg000004c... 99.856% overall identity, 99.7% worst-1kbp identity
    E_Utg994 vs O_utg000004c... 99.770% overall identity, 99.5% worst-1kbp identity
    E_Utg994 vs P_utg000003c... 99.799% overall identity, 99.6% worst-1kbp identity
L_utg000004c vs M_utg000004c... 99.942% overall identity, 99.8% worst-1kbp identity
L_utg000004c vs N_utg000004c... 99.942% overall identity, 99.8% worst-1kbp identity
L_utg000004c vs O_utg000004c... 99.914% overall identity, 99.8% worst-1kbp identity
L_utg000004c vs P_utg000003c... 99.942% overall identity, 99.8% worst-1kbp identity
M_utg000004c vs N_utg000004c... 99.942% overall identity, 99.8% worst-1kbp identity
M_utg000004c vs O_utg000004c... 99.914% overall identity, 99.7% worst-1kbp identity
M_utg000004c vs P_utg000003c... 99.942% overall identity, 99.8% worst-1kbp identity
N_utg000004c vs O_utg000004c... 99.914% overall identity, 99.8% worst-1kbp identity
N_utg000004c vs P_utg000003c... 99.942% overall identity, 99.8% worst-1kbp identity
O_utg000004c vs P_utg000003c... 99.914% overall identity, 99.7% worst-1kbp identity

Overall pairwise identities:
  A_Utg998:     [2m100.000%[0m   99.396%   99.110%   99.339%   99.483%   99.425%   99.425%   99.454%   99.425%
  B_Utg1036:     99.396%  [2m100.000%[0m   99.053%   99.339%   99.368%   99.368%   99.425%   99.397%   99.368%
  C_Utg1010:     99.110%   99.053%  [2m100.000%[0m   99.712%   99.569%   99.597%   99.569%   99.569%   99.598%
  E_Utg994:      99.339%   99.339%   99.712%  [2m100.000%[0m   99.799%   99.799%   99.856%   99.770%   99.799%
  L_utg000004c:  99.483%   99.368%   99.569%   99.799%  [2m100.000%[0m   99.942%   99.942%   99.914%   99.942%
  M_utg000004c:  99.425%   99.368%   99.597%   99.799%   99.942%  [2m100.000%[0m   99.942%   99.914%   99.942%
  N_utg000004c:  99.425%   99.425%   99.569%   99.856%   99.942%   99.942%  [2m100.000%[0m   99.914%   99.942%
  O_utg000004c:  99.454%   99.397%   99.569%   99.770%   99.914%   99.914%   99.914%  [2m100.000%[0m   99.914%
  P_utg000003c:  99.425%   99.368%   99.598%   99.799%   99.942%   99.942%   99.942%   99.914%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  A_Utg998:     [2m100.0%[0m   98.7%   97.6%   98.2%   98.4%   98.2%   98.2%   98.2%   98.2%
  B_Utg1036:     98.7%  [2m100.0%[0m   97.9%   98.6%   98.6%   98.6%   98.7%   98.6%   98.6%
  C_Utg1010:     97.6%   97.9%  [2m100.0%[0m   99.2%   99.0%   99.0%   99.0%   98.9%   99.0%
  E_Utg994:      98.2%   98.6%   99.2%  [2m100.0%[0m   99.6%   99.6%   99.7%   99.5%   99.6%
  L_utg000004c:  98.4%   98.6%   99.0%   99.6%  [2m100.0%[0m   99.8%   99.8%   99.8%   99.8%
  M_utg000004c:  98.2%   98.6%   99.0%   99.6%   99.8%  [2m100.0%[0m   99.8%   99.7%   99.8%
  N_utg000004c:  98.2%   98.7%   99.0%   99.7%   99.8%   99.8%  [2m100.0%[0m   99.8%   99.8%
  O_utg000004c:  98.2%   98.6%   98.9%   99.5%   99.8%   99.7%   99.8%  [2m100.0%[0m   99.7%
  P_utg000003c:  98.2%   98.6%   99.0%   99.6%   99.8%   99.8%   99.8%   99.7%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-05 17:34:16)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/1004078/cluster_004/2_all_seqs.fasta

