
[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 12:27:42)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_001/1_contigs/C_Utg1134.fasta (5,312,261 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/D_Utg1086.fasta (5,312,292 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/E_Utg1034.fasta (5,312,286 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/F_contig_6.fasta (5,312,107 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/G_contig_4.fasta (5,312,112 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/H_contig_5.fasta (5,312,105 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/I_contig_2.fasta (5,312,110 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/J_contig_5.fasta (5,312,094 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/K_contig_4.fasta (5,312,100 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/O_utg000001c.fasta (5,312,396 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/P_utg000001c.fasta (5,312,371 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 12:27:43)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  C_Utg1134:    [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  D_Utg1086:    1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  E_Utg1034:    1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  F_contig_6:   1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  G_contig_4:   1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000
  H_contig_5:   1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000
  I_contig_2:   1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000
  J_contig_5:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000
  K_contig_4:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000
  O_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000
  P_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m

Mash distances:
  C_Utg1134:    [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  D_Utg1086:    0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  E_Utg1034:    0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  F_contig_6:   0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_4:   0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  H_contig_5:   0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  I_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  J_contig_5:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  K_contig_4:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  O_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 12:27:52)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  ATTCATGTAGACGGCAAAGAATACGAGGTCAACGGGGCGGACAACCTGCT
  AGAGGCTTGTCTCTCTCTTGGTCTTGATATTCCCTACTTTTGCTGGCACC
  CGGCGCTAGGGAGCGTCGGTGCTTGCCGCCAGTGTGCGGTGAAGCAATAT
  CAGAACGCGGAAGACACGCGTGGTCGCCTGGTGATGTCCTGTATGACTCC
  GGCATCCGACGGCACCTTTATTTCTATCGACGACAGCGAAGCGAAGCAGT

C_Utg1134:    + strand (using original sequence)
D_Utg1086:    - strand (using reverse complement)
E_Utg1034:    - strand (using reverse complement)
F_contig_6:   - strand (using reverse complement)
G_contig_4:   + strand (using original sequence)
H_contig_5:   + strand (using original sequence)
I_contig_2:   - strand (using reverse complement)
J_contig_5:   + strand (using original sequence)
K_contig_4:   - strand (using reverse complement)
O_utg000001c: - strand (using reverse complement)
P_utg000001c: - strand (using reverse complement)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 12:28:02)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising C_Utg1134:
  using D_Utg1086:
    no adjustment needed (C_Utg1134 is already circular)
  using E_Utg1034:
    no adjustment needed (C_Utg1134 is already circular)
  using F_contig_6:
    no adjustment needed (C_Utg1134 is already circular)
  using G_contig_4:
    no adjustment needed (C_Utg1134 is already circular)
  using H_contig_5:
    no adjustment needed (C_Utg1134 is already circular)
  using I_contig_2:
    no adjustment needed (C_Utg1134 is already circular)
  using J_contig_5:
    no adjustment needed (C_Utg1134 is already circular)
  using K_contig_4:
    no adjustment needed (C_Utg1134 is already circular)
  using O_utg000001c:
    no adjustment needed (C_Utg1134 is already circular)
  using P_utg000001c:
    no adjustment needed (C_Utg1134 is already circular)
  circularisation complete (5,312,261 bp)

Circularising D_Utg1086:
  using C_Utg1134:
    no adjustment needed (D_Utg1086 is already circular)
  using E_Utg1034:
    unable to circularise: D_Utg1086's start/end is the same as E_Utg1034's start/end
  using F_contig_6:
    no adjustment needed (D_Utg1086 is already circular)
  using G_contig_4:
    no adjustment needed (D_Utg1086 is already circular)
  using H_contig_5:
    no adjustment needed (D_Utg1086 is already circular)
  using I_contig_2:
    no adjustment needed (D_Utg1086 is already circular)
  using J_contig_5:
    no adjustment needed (D_Utg1086 is already circular)
  using K_contig_4:
    no adjustment needed (D_Utg1086 is already circular)
  using O_utg000001c:
    no adjustment needed (D_Utg1086 is already circular)
  using P_utg000001c:
    no adjustment needed (D_Utg1086 is already circular)
  circularisation complete (5,312,292 bp)

Circularising E_Utg1034:
  using C_Utg1134:
    no adjustment needed (E_Utg1034 is already circular)
  using D_Utg1086:
    unable to circularise: E_Utg1034's start/end is the same as D_Utg1086's start/end
  using F_contig_6:
    no adjustment needed (E_Utg1034 is already circular)
  using G_contig_4:
    no adjustment needed (E_Utg1034 is already circular)
  using H_contig_5:
    no adjustment needed (E_Utg1034 is already circular)
  using I_contig_2:
    no adjustment needed (E_Utg1034 is already circular)
  using J_contig_5:
    no adjustment needed (E_Utg1034 is already circular)
  using K_contig_4:
    no adjustment needed (E_Utg1034 is already circular)
  using O_utg000001c:
    no adjustment needed (E_Utg1034 is already circular)
  using P_utg000001c:
    no adjustment needed (E_Utg1034 is already circular)
  circularisation complete (5,312,286 bp)

Circularising F_contig_6:
  using C_Utg1134:
    no adjustment needed (F_contig_6 is already circular)
  using D_Utg1086:
    no adjustment needed (F_contig_6 is already circular)
  using E_Utg1034:
    no adjustment needed (F_contig_6 is already circular)
  using G_contig_4:
    no adjustment needed (F_contig_6 is already circular)
  using H_contig_5:
    no adjustment needed (F_contig_6 is already circular)
  using I_contig_2:
    no adjustment needed (F_contig_6 is already circular)
  using J_contig_5:
    no adjustment needed (F_contig_6 is already circular)
  using K_contig_4:
    no adjustment needed (F_contig_6 is already circular)
  using O_utg000001c:
    no adjustment needed (F_contig_6 is already circular)
  using P_utg000001c:
    no adjustment needed (F_contig_6 is already circular)
  circularisation complete (5,312,107 bp)

Circularising G_contig_4:
  using C_Utg1134:
    no adjustment needed (G_contig_4 is already circular)
  using D_Utg1086:
    no adjustment needed (G_contig_4 is already circular)
  using E_Utg1034:
    no adjustment needed (G_contig_4 is already circular)
  using F_contig_6:
    no adjustment needed (G_contig_4 is already circular)
  using H_contig_5:
    no adjustment needed (G_contig_4 is already circular)
  using I_contig_2:
    no adjustment needed (G_contig_4 is already circular)
  using J_contig_5:
    no adjustment needed (G_contig_4 is already circular)
  using K_contig_4:
    no adjustment needed (G_contig_4 is already circular)
  using O_utg000001c:
    no adjustment needed (G_contig_4 is already circular)
  using P_utg000001c:
    no adjustment needed (G_contig_4 is already circular)
  circularisation complete (5,312,112 bp)

Circularising H_contig_5:
  using C_Utg1134:
    no adjustment needed (H_contig_5 is already circular)
  using D_Utg1086:
    no adjustment needed (H_contig_5 is already circular)
  using E_Utg1034:
    no adjustment needed (H_contig_5 is already circular)
  using F_contig_6:
    no adjustment needed (H_contig_5 is already circular)
  using G_contig_4:
    no adjustment needed (H_contig_5 is already circular)
  using I_contig_2:
    no adjustment needed (H_contig_5 is already circular)
  using J_contig_5:
    no adjustment needed (H_contig_5 is already circular)
  using K_contig_4:
    no adjustment needed (H_contig_5 is already circular)
  using O_utg000001c:
    no adjustment needed (H_contig_5 is already circular)
  using P_utg000001c:
    no adjustment needed (H_contig_5 is already circular)
  circularisation complete (5,312,105 bp)

Circularising I_contig_2:
  using C_Utg1134:
    no adjustment needed (I_contig_2 is already circular)
  using D_Utg1086:
    no adjustment needed (I_contig_2 is already circular)
  using E_Utg1034:
    no adjustment needed (I_contig_2 is already circular)
  using F_contig_6:
    no adjustment needed (I_contig_2 is already circular)
  using G_contig_4:
    no adjustment needed (I_contig_2 is already circular)
  using H_contig_5:
    no adjustment needed (I_contig_2 is already circular)
  using J_contig_5:
    no adjustment needed (I_contig_2 is already circular)
  using K_contig_4:
    no adjustment needed (I_contig_2 is already circular)
  using O_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  using P_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  circularisation complete (5,312,110 bp)

Circularising J_contig_5:
  using C_Utg1134:
    no adjustment needed (J_contig_5 is already circular)
  using D_Utg1086:
    no adjustment needed (J_contig_5 is already circular)
  using E_Utg1034:
    no adjustment needed (J_contig_5 is already circular)
  using F_contig_6:
    no adjustment needed (J_contig_5 is already circular)
  using G_contig_4:
    no adjustment needed (J_contig_5 is already circular)
  using H_contig_5:
    no adjustment needed (J_contig_5 is already circular)
  using I_contig_2:
    no adjustment needed (J_contig_5 is already circular)
  using K_contig_4:
    no adjustment needed (J_contig_5 is already circular)
  using O_utg000001c:
    no adjustment needed (J_contig_5 is already circular)
  using P_utg000001c:
    no adjustment needed (J_contig_5 is already circular)
  circularisation complete (5,312,094 bp)

Circularising K_contig_4:
  using C_Utg1134:
    no adjustment needed (K_contig_4 is already circular)
  using D_Utg1086:
    no adjustment needed (K_contig_4 is already circular)
  using E_Utg1034:
    no adjustment needed (K_contig_4 is already circular)
  using F_contig_6:
    no adjustment needed (K_contig_4 is already circular)
  using G_contig_4:
    no adjustment needed (K_contig_4 is already circular)
  using H_contig_5:
    no adjustment needed (K_contig_4 is already circular)
  using I_contig_2:
    no adjustment needed (K_contig_4 is already circular)
  using J_contig_5:
    no adjustment needed (K_contig_4 is already circular)
  using O_utg000001c:
    no adjustment needed (K_contig_4 is already circular)
  using P_utg000001c:
    no adjustment needed (K_contig_4 is already circular)
  circularisation complete (5,312,100 bp)

Circularising O_utg000001c:
  using C_Utg1134:
    no adjustment needed (O_utg000001c is already circular)
  using D_Utg1086:
    no adjustment needed (O_utg000001c is already circular)
  using E_Utg1034:
    no adjustment needed (O_utg000001c is already circular)
  using F_contig_6:
    no adjustment needed (O_utg000001c is already circular)
  using G_contig_4:
    no adjustment needed (O_utg000001c is already circular)
  using H_contig_5:
    no adjustment needed (O_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (O_utg000001c is already circular)
  using J_contig_5:
    no adjustment needed (O_utg000001c is already circular)
  using K_contig_4:
    no adjustment needed (O_utg000001c is already circular)
  using P_utg000001c:
    unable to circularise: O_utg000001c's end could not be found in P_utg000001c
  circularisation complete (5,312,396 bp)

Circularising P_utg000001c:
  using C_Utg1134:
    no adjustment needed (P_utg000001c is already circular)
  using D_Utg1086:
    no adjustment needed (P_utg000001c is already circular)
  using E_Utg1034:
    no adjustment needed (P_utg000001c is already circular)
  using F_contig_6:
    no adjustment needed (P_utg000001c is already circular)
  using G_contig_4:
    no adjustment needed (P_utg000001c is already circular)
  using H_contig_5:
    no adjustment needed (P_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (P_utg000001c is already circular)
  using J_contig_5:
    no adjustment needed (P_utg000001c is already circular)
  using K_contig_4:
    no adjustment needed (P_utg000001c is already circular)
  using O_utg000001c:
    unable to circularise: P_utg000001c's start could not be found in O_utg000001c
  circularisation complete (5,312,371 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 12:29:07)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0003_A4U70_RS00005 (chromosomal replication initiator protein DnaA)
  GTGTCACTTTCGCTTTGGCAGCAGTGTCTTGCCCGATTGCAGGATGAGTT...

C_Utg1134:    + strand (using original sequence)
D_Utg1086:    + strand (using original sequence)
E_Utg1034:    + strand (using original sequence)
F_contig_6:   + strand (using original sequence)
G_contig_4:   + strand (using original sequence)
H_contig_5:   + strand (using original sequence)
I_contig_2:   + strand (using original sequence)
J_contig_5:   + strand (using original sequence)
K_contig_4:   + strand (using original sequence)
O_utg000001c: + strand (using original sequence)
P_utg000001c: + strand (using original sequence)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 12:29:14)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

C_Utg1134: rotating by 2,279,317 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,261 bp)

D_Utg1086: rotating by 1,972,854 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,292 bp)

E_Utg1034: rotating by 1,973,059 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,286 bp)

F_contig_6: rotating by 2,415,359 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,107 bp)

G_contig_4: rotating by 631,342 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,112 bp)

H_contig_5: rotating by 745,390 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,105 bp)

I_contig_2: rotating by 3,817,395 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,110 bp)

J_contig_5: rotating by 1,040,836 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,094 bp)

K_contig_4: rotating by 2,104,908 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,100 bp)

O_utg000001c: rotating by 4,142,345 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,396 bp)

P_utg000001c: rotating by 4,142,701 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,371 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 12:29:18)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   C_Utg1134 vs D_Utg1086...    99.965% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs E_Utg1034...    99.965% overall identity, 81.0% worst-1kbp identity
   C_Utg1134 vs F_contig_6...   99.976% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs G_contig_4...   99.977% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs H_contig_5...   99.977% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs I_contig_2...   99.978% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs J_contig_5...   99.976% overall identity, 82.3% worst-1kbp identity
   C_Utg1134 vs K_contig_4...   99.976% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs O_utg000001c... 99.972% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs P_utg000001c... 99.972% overall identity, 82.4% worst-1kbp identity
   D_Utg1086 vs E_Utg1034...    99.965% overall identity, 81.0% worst-1kbp identity
   D_Utg1086 vs F_contig_6...   99.973% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs G_contig_4...   99.973% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs H_contig_5...   99.973% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs I_contig_2...   99.975% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs J_contig_5...   99.974% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs K_contig_4...   99.974% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs O_utg000001c... 99.970% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs P_utg000001c... 99.969% overall identity, 84.4% worst-1kbp identity
   E_Utg1034 vs F_contig_6...   99.977% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs G_contig_4...   99.977% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs H_contig_5...   99.976% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs I_contig_2...   99.977% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs J_contig_5...   99.977% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs K_contig_4...   99.978% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs O_utg000001c... 99.972% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs P_utg000001c... 99.974% overall identity, 81.0% worst-1kbp identity
  F_contig_6 vs G_contig_4...   99.997% overall identity, 99.8% worst-1kbp identity
  F_contig_6 vs H_contig_5...   99.993% overall identity, 99.7% worst-1kbp identity
  F_contig_6 vs I_contig_2...   99.993% overall identity, 99.7% worst-1kbp identity
  F_contig_6 vs J_contig_5...   99.994% overall identity, 99.6% worst-1kbp identity
  F_contig_6 vs K_contig_4...   99.995% overall identity, 99.7% worst-1kbp identity
  F_contig_6 vs O_utg000001c... 99.986% overall identity, 86.2% worst-1kbp identity
  F_contig_6 vs P_utg000001c... 99.987% overall identity, 84.4% worst-1kbp identity
  G_contig_4 vs H_contig_5...   99.994% overall identity, 99.7% worst-1kbp identity
  G_contig_4 vs I_contig_2...   99.993% overall identity, 99.7% worst-1kbp identity
  G_contig_4 vs J_contig_5...   99.993% overall identity, 99.6% worst-1kbp identity
  G_contig_4 vs K_contig_4...   99.994% overall identity, 99.7% worst-1kbp identity
  G_contig_4 vs O_utg000001c... 99.985% overall identity, 86.2% worst-1kbp identity
  G_contig_4 vs P_utg000001c... 99.987% overall identity, 84.4% worst-1kbp identity
  H_contig_5 vs I_contig_2...   99.994% overall identity, 99.7% worst-1kbp identity
  H_contig_5 vs J_contig_5...   99.992% overall identity, 99.6% worst-1kbp identity
  H_contig_5 vs K_contig_4...   99.992% overall identity, 99.7% worst-1kbp identity
  H_contig_5 vs O_utg000001c... 99.985% overall identity, 86.2% worst-1kbp identity
  H_contig_5 vs P_utg000001c... 99.985% overall identity, 84.4% worst-1kbp identity
  I_contig_2 vs J_contig_5...   99.995% overall identity, 99.7% worst-1kbp identity
  I_contig_2 vs K_contig_4...   99.994% overall identity, 99.7% worst-1kbp identity
  I_contig_2 vs O_utg000001c... 99.987% overall identity, 86.2% worst-1kbp identity
  I_contig_2 vs P_utg000001c... 99.986% overall identity, 84.4% worst-1kbp identity
  J_contig_5 vs K_contig_4...   99.997% overall identity, 99.8% worst-1kbp identity
  J_contig_5 vs O_utg000001c... 99.987% overall identity, 86.2% worst-1kbp identity
  J_contig_5 vs P_utg000001c... 99.986% overall identity, 84.4% worst-1kbp identity
  K_contig_4 vs O_utg000001c... 99.987% overall identity, 86.2% worst-1kbp identity
  K_contig_4 vs P_utg000001c... 99.987% overall identity, 84.4% worst-1kbp identity
O_utg000001c vs P_utg000001c... 99.983% overall identity, 84.4% worst-1kbp identity

Overall pairwise identities:
  C_Utg1134:    [2m100.000%[0m   99.965%   99.965%   99.976%   99.977%   99.977%   99.978%   99.976%   99.976%   99.972%   99.972%
  D_Utg1086:     99.965%  [2m100.000%[0m   99.965%   99.973%   99.973%   99.973%   99.975%   99.974%   99.974%   99.970%   99.969%
  E_Utg1034:     99.965%   99.965%  [2m100.000%[0m   99.977%   99.977%   99.976%   99.977%   99.977%   99.978%   99.972%   99.974%
  F_contig_6:    99.976%   99.973%   99.977%  [2m100.000%[0m   99.997%   99.993%   99.993%   99.994%   99.995%   99.986%   99.987%
  G_contig_4:    99.977%   99.973%   99.977%   99.997%  [2m100.000%[0m   99.994%   99.993%   99.993%   99.994%   99.985%   99.987%
  H_contig_5:    99.977%   99.973%   99.976%   99.993%   99.994%  [2m100.000%[0m   99.994%   99.992%   99.992%   99.985%   99.985%
  I_contig_2:    99.978%   99.975%   99.977%   99.993%   99.993%   99.994%  [2m100.000%[0m   99.995%   99.994%   99.987%   99.986%
  J_contig_5:    99.976%   99.974%   99.977%   99.994%   99.993%   99.992%   99.995%  [2m100.000%[0m   99.997%   99.987%   99.986%
  K_contig_4:    99.976%   99.974%   99.978%   99.995%   99.994%   99.992%   99.994%   99.997%  [2m100.000%[0m   99.987%   99.987%
  O_utg000001c:  99.972%   99.970%   99.972%   99.986%   99.985%   99.985%   99.987%   99.987%   99.987%  [2m100.000%[0m   99.983%
  P_utg000001c:  99.972%   99.969%   99.974%   99.987%   99.987%   99.985%   99.986%   99.986%   99.987%   99.983%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  C_Utg1134:    [2m100.0%[0m   82.4%   81.0%   82.4%   82.4%   82.4%   82.4%   82.3%   82.4%   82.4%   82.4%
  D_Utg1086:     82.4%  [2m100.0%[0m   81.0%   86.2%   86.2%   86.2%   86.2%   86.2%   86.2%   86.2%   84.4%
  E_Utg1034:     81.0%   81.0%  [2m100.0%[0m   81.0%   81.0%   81.0%   81.0%   81.0%   81.0%   81.0%   81.0%
  F_contig_6:    82.4%   86.2%   81.0%  [2m100.0%[0m   99.8%   99.7%   99.7%   99.6%   99.7%   86.2%   84.4%
  G_contig_4:    82.4%   86.2%   81.0%   99.8%  [2m100.0%[0m   99.7%   99.7%   99.6%   99.7%   86.2%   84.4%
  H_contig_5:    82.4%   86.2%   81.0%   99.7%   99.7%  [2m100.0%[0m   99.7%   99.6%   99.7%   86.2%   84.4%
  I_contig_2:    82.4%   86.2%   81.0%   99.7%   99.7%   99.7%  [2m100.0%[0m   99.7%   99.7%   86.2%   84.4%
  J_contig_5:    82.3%   86.2%   81.0%   99.6%   99.6%   99.6%   99.7%  [2m100.0%[0m   99.8%   86.2%   84.4%
  K_contig_4:    82.4%   86.2%   81.0%   99.7%   99.7%   99.7%   99.7%   99.8%  [2m100.0%[0m   86.2%   84.4%
  O_utg000001c:  82.4%   86.2%   81.0%   86.2%   86.2%   86.2%   86.2%   86.2%   86.2%  [2m100.0%[0m   84.4%
  P_utg000001c:  82.4%   84.4%   81.0%   84.4%   84.4%   84.4%   84.4%   84.4%   84.4%   84.4%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 12:32:54)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/CAAUE8/cluster_001/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 12:32:55)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_002/1_contigs/B_Utg1062.fasta (201,401 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/D_Utg1078.fasta (201,490 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/F_contig_5.fasta (201,942 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/G_contig_3.fasta (201,805 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/H_contig_4.fasta (201,814 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/I_contig_1.fasta (201,808 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/J_contig_1.fasta (201,812 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/K_contig_3.fasta (201,831 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/L_utg000002c.fasta (201,794 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/N_utg000003c.fasta (201,806 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/O_utg000003c.fasta (201,802 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/P_utg000003c.fasta (201,804 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 12:32:55)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  B_Utg1062:    [2m1.000[0m  1.000  0.997  0.998  0.998  0.998  0.998  0.998  0.998  0.998  0.998  0.998
  D_Utg1078:    1.000  [2m1.000[0m  0.998  0.998  0.998  0.998  0.998  0.998  0.998  0.998  0.998  0.998
  F_contig_5:   1.003  1.002  [2m1.000[0m  1.001  1.001  1.001  1.001  1.001  1.001  1.001  1.001  1.001
  G_contig_3:   1.002  1.002  0.999  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  H_contig_4:   1.002  1.002  0.999  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  I_contig_1:   1.002  1.002  0.999  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000
  J_contig_1:   1.002  1.002  0.999  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000
  K_contig_3:   1.002  1.002  0.999  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000
  L_utg000002c: 1.002  1.002  0.999  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000
  N_utg000003c: 1.002  1.002  0.999  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000
  O_utg000003c: 1.002  1.002  0.999  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000
  P_utg000003c: 1.002  1.002  0.999  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m

Mash distances:
  B_Utg1062:    [2m0.000[0m  0.002  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001
  D_Utg1078:    0.002  [2m0.000[0m  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001
  F_contig_5:   0.001  0.001  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_3:   0.001  0.001  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  H_contig_4:   0.001  0.001  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  I_contig_1:   0.001  0.001  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  J_contig_1:   0.001  0.001  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  K_contig_3:   0.001  0.001  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  L_utg000002c: 0.001  0.001  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  N_utg000003c: 0.001  0.001  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  O_utg000003c: 0.001  0.001  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000003c: 0.000  0.001  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 12:32:56)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  CAGCAACTGGAAGATGGCTCCCTGCTCACGCTGAATACCCAAAGCGCGGC
  GGATGTGCGTTTTGATGCGCATCAGCGCACCGTCCGGCTCTGGTACGGTG
  AAATCGCCATTACTACCGCGAAAGATGCGCAGCAACGCCCCTTCCGCGTC
  CTGACCCGTCAGGGCCAACTCACCGCTTTAGGGACAGAATTTACCGTCCG
  CCAGCAGGATAATTTCACGCAGCTTGACGTGCAGCAGCACGCCGTGGAAG

B_Utg1062:    + strand (using original sequence)
D_Utg1078:    + strand (using original sequence)
F_contig_5:   + strand (using original sequence)
G_contig_3:   - strand (using reverse complement)
H_contig_4:   - strand (using reverse complement)
I_contig_1:   + strand (using original sequence)
J_contig_1:   + strand (using original sequence)
K_contig_3:   + strand (using original sequence)
L_utg000002c: + strand (using original sequence)
N_utg000003c: + strand (using original sequence)
O_utg000003c: + strand (using original sequence)
P_utg000003c: - strand (using reverse complement)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 12:32:57)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising B_Utg1062:
  using D_Utg1078:
    no adjustment needed (B_Utg1062 is already circular)
  using F_contig_5:
    no adjustment needed (B_Utg1062 is already circular)
  using G_contig_3:
    no adjustment needed (B_Utg1062 is already circular)
  using H_contig_4:
    no adjustment needed (B_Utg1062 is already circular)
  using I_contig_1:
    no adjustment needed (B_Utg1062 is already circular)
  using J_contig_1:
    no adjustment needed (B_Utg1062 is already circular)
  using K_contig_3:
    no adjustment needed (B_Utg1062 is already circular)
  using L_utg000002c:
    no adjustment needed (B_Utg1062 is already circular)
  using N_utg000003c:
    no adjustment needed (B_Utg1062 is already circular)
  using O_utg000003c:
    no adjustment needed (B_Utg1062 is already circular)
  using P_utg000003c:
    no adjustment needed (B_Utg1062 is already circular)
  circularisation complete (201,401 bp)

Circularising D_Utg1078:
  using B_Utg1062:
    no adjustment needed (D_Utg1078 is already circular)
  using F_contig_5:
    no adjustment needed (D_Utg1078 is already circular)
  using G_contig_3:
    no adjustment needed (D_Utg1078 is already circular)
  using H_contig_4:
    no adjustment needed (D_Utg1078 is already circular)
  using I_contig_1:
    no adjustment needed (D_Utg1078 is already circular)
  using J_contig_1:
    no adjustment needed (D_Utg1078 is already circular)
  using K_contig_3:
    no adjustment needed (D_Utg1078 is already circular)
  using L_utg000002c:
    no adjustment needed (D_Utg1078 is already circular)
  using N_utg000003c:
    no adjustment needed (D_Utg1078 is already circular)
  using O_utg000003c:
    no adjustment needed (D_Utg1078 is already circular)
  using P_utg000003c:
    no adjustment needed (D_Utg1078 is already circular)
  circularisation complete (201,490 bp)

Circularising F_contig_5:
  using B_Utg1062:
    unable to circularise: F_contig_5's end could not be found in B_Utg1062
  using D_Utg1078:
    circularising F_contig_5 by trimming 147 bp of sequence from the end
  using G_contig_3:
    circularising F_contig_5 by trimming 147 bp of sequence from the end
  using H_contig_4:
    unable to circularise: F_contig_5's start could not be found in H_contig_4
  using I_contig_1:
    circularising F_contig_5 by trimming 147 bp of sequence from the end
  using J_contig_1:
    circularising F_contig_5 by trimming 147 bp of sequence from the end
  using K_contig_3:
    circularising F_contig_5 by trimming 147 bp of sequence from the end
  using L_utg000002c:
    circularising F_contig_5 by trimming 147 bp of sequence from the end
  using N_utg000003c:
    circularising F_contig_5 by trimming 147 bp of sequence from the end
  using O_utg000003c:
    circularising F_contig_5 by trimming 147 bp of sequence from the end
  using P_utg000003c:
    circularising F_contig_5 by trimming 147 bp of sequence from the end
  circularisation complete (201,795 bp)

Circularising G_contig_3:
  using B_Utg1062:
    no adjustment needed (G_contig_3 is already circular)
  using D_Utg1078:
    no adjustment needed (G_contig_3 is already circular)
  using F_contig_5:
    no adjustment needed (G_contig_3 is already circular)
  using H_contig_4:
    no adjustment needed (G_contig_3 is already circular)
  using I_contig_1:
    no adjustment needed (G_contig_3 is already circular)
  using J_contig_1:
    no adjustment needed (G_contig_3 is already circular)
  using K_contig_3:
    no adjustment needed (G_contig_3 is already circular)
  using L_utg000002c:
    no adjustment needed (G_contig_3 is already circular)
  using N_utg000003c:
    no adjustment needed (G_contig_3 is already circular)
  using O_utg000003c:
    no adjustment needed (G_contig_3 is already circular)
  using P_utg000003c:
    no adjustment needed (G_contig_3 is already circular)
  circularisation complete (201,805 bp)

Circularising H_contig_4:
  using B_Utg1062:
    no adjustment needed (H_contig_4 is already circular)
  using D_Utg1078:
    no adjustment needed (H_contig_4 is already circular)
  using F_contig_5:
    unable to circularise: H_contig_4's end could not be found in F_contig_5
  using G_contig_3:
    no adjustment needed (H_contig_4 is already circular)
  using I_contig_1:
    no adjustment needed (H_contig_4 is already circular)
  using J_contig_1:
    no adjustment needed (H_contig_4 is already circular)
  using K_contig_3:
    no adjustment needed (H_contig_4 is already circular)
  using L_utg000002c:
    no adjustment needed (H_contig_4 is already circular)
  using N_utg000003c:
    no adjustment needed (H_contig_4 is already circular)
  using O_utg000003c:
    no adjustment needed (H_contig_4 is already circular)
  using P_utg000003c:
    no adjustment needed (H_contig_4 is already circular)
  circularisation complete (201,814 bp)

Circularising I_contig_1:
  using B_Utg1062:
    circularising I_contig_1 by adding 1 bp of sequence from B_Utg1062 (119310-119311)
  using D_Utg1078:
    circularising I_contig_1 by adding 1 bp of sequence from D_Utg1078 (49900-49901)
  using F_contig_5:
    circularising I_contig_1 by adding 1 bp of sequence from F_contig_5 (8827-8828)
  using G_contig_3:
    circularising I_contig_1 by adding 1 bp of sequence from G_contig_3 (75917-75918)
  using H_contig_4:
    circularising I_contig_1 by adding 1 bp of sequence from H_contig_4 (8409-8410)
  using J_contig_1:
    unable to circularise: I_contig_1's start/end is the same as J_contig_1's start/end
  using K_contig_3:
    unable to circularise: cannot determine trim amount
  using L_utg000002c:
    circularising I_contig_1 by adding 1 bp of sequence from L_utg000002c (20767-20768)
  using N_utg000003c:
    circularising I_contig_1 by adding 1 bp of sequence from N_utg000003c (55159-55160)
  using O_utg000003c:
    circularising I_contig_1 by adding 1 bp of sequence from O_utg000003c (134385-134386)
  using P_utg000003c:
    circularising I_contig_1 by adding 1 bp of sequence from P_utg000003c (91202-91203)
  circularisation complete (201,809 bp)

Circularising J_contig_1:
  using B_Utg1062:
    no adjustment needed (J_contig_1 is already circular)
  using D_Utg1078:
    no adjustment needed (J_contig_1 is already circular)
  using F_contig_5:
    no adjustment needed (J_contig_1 is already circular)
  using G_contig_3:
    no adjustment needed (J_contig_1 is already circular)
  using H_contig_4:
    no adjustment needed (J_contig_1 is already circular)
  using I_contig_1:
    unable to circularise: J_contig_1's start/end is the same as I_contig_1's start/end
  using K_contig_3:
    unable to circularise: cannot determine trim amount
  using L_utg000002c:
    no adjustment needed (J_contig_1 is already circular)
  using N_utg000003c:
    no adjustment needed (J_contig_1 is already circular)
  using O_utg000003c:
    no adjustment needed (J_contig_1 is already circular)
  using P_utg000003c:
    no adjustment needed (J_contig_1 is already circular)
  circularisation complete (201,812 bp)

Circularising K_contig_3:
  using B_Utg1062:
    circularising K_contig_3 by trimming 24 bp of sequence from the end
  using D_Utg1078:
    circularising K_contig_3 by trimming 24 bp of sequence from the end
  using F_contig_5:
    circularising K_contig_3 by trimming 24 bp of sequence from the end
  using G_contig_3:
    circularising K_contig_3 by trimming 24 bp of sequence from the end
  using H_contig_4:
    circularising K_contig_3 by trimming 24 bp of sequence from the end
  using I_contig_1:
    unable to circularise: K_contig_3's start/end is the same as I_contig_1's start/end
  using J_contig_1:
    unable to circularise: K_contig_3's start/end is the same as J_contig_1's start/end
  using L_utg000002c:
    circularising K_contig_3 by trimming 24 bp of sequence from the end
  using N_utg000003c:
    circularising K_contig_3 by trimming 24 bp of sequence from the end
  using O_utg000003c:
    circularising K_contig_3 by trimming 24 bp of sequence from the end
  using P_utg000003c:
    circularising K_contig_3 by trimming 24 bp of sequence from the end
  circularisation complete (201,807 bp)

Circularising L_utg000002c:
  using B_Utg1062:
    no adjustment needed (L_utg000002c is already circular)
  using D_Utg1078:
    no adjustment needed (L_utg000002c is already circular)
  using F_contig_5:
    no adjustment needed (L_utg000002c is already circular)
  using G_contig_3:
    no adjustment needed (L_utg000002c is already circular)
  using H_contig_4:
    no adjustment needed (L_utg000002c is already circular)
  using I_contig_1:
    no adjustment needed (L_utg000002c is already circular)
  using J_contig_1:
    no adjustment needed (L_utg000002c is already circular)
  using K_contig_3:
    no adjustment needed (L_utg000002c is already circular)
  using N_utg000003c:
    no adjustment needed (L_utg000002c is already circular)
  using O_utg000003c:
    no adjustment needed (L_utg000002c is already circular)
  using P_utg000003c:
    no adjustment needed (L_utg000002c is already circular)
  circularisation complete (201,794 bp)

Circularising N_utg000003c:
  using B_Utg1062:
    no adjustment needed (N_utg000003c is already circular)
  using D_Utg1078:
    no adjustment needed (N_utg000003c is already circular)
  using F_contig_5:
    no adjustment needed (N_utg000003c is already circular)
  using G_contig_3:
    no adjustment needed (N_utg000003c is already circular)
  using H_contig_4:
    no adjustment needed (N_utg000003c is already circular)
  using I_contig_1:
    no adjustment needed (N_utg000003c is already circular)
  using J_contig_1:
    no adjustment needed (N_utg000003c is already circular)
  using K_contig_3:
    no adjustment needed (N_utg000003c is already circular)
  using L_utg000002c:
    no adjustment needed (N_utg000003c is already circular)
  using O_utg000003c:
    no adjustment needed (N_utg000003c is already circular)
  using P_utg000003c:
    no adjustment needed (N_utg000003c is already circular)
  circularisation complete (201,806 bp)

Circularising O_utg000003c:
  using B_Utg1062:
    no adjustment needed (O_utg000003c is already circular)
  using D_Utg1078:
    no adjustment needed (O_utg000003c is already circular)
  using F_contig_5:
    no adjustment needed (O_utg000003c is already circular)
  using G_contig_3:
    no adjustment needed (O_utg000003c is already circular)
  using H_contig_4:
    no adjustment needed (O_utg000003c is already circular)
  using I_contig_1:
    no adjustment needed (O_utg000003c is already circular)
  using J_contig_1:
    no adjustment needed (O_utg000003c is already circular)
  using K_contig_3:
    no adjustment needed (O_utg000003c is already circular)
  using L_utg000002c:
    no adjustment needed (O_utg000003c is already circular)
  using N_utg000003c:
    no adjustment needed (O_utg000003c is already circular)
  using P_utg000003c:
    no adjustment needed (O_utg000003c is already circular)
  circularisation complete (201,802 bp)

Circularising P_utg000003c:
  using B_Utg1062:
    no adjustment needed (P_utg000003c is already circular)
  using D_Utg1078:
    no adjustment needed (P_utg000003c is already circular)
  using F_contig_5:
    no adjustment needed (P_utg000003c is already circular)
  using G_contig_3:
    no adjustment needed (P_utg000003c is already circular)
  using H_contig_4:
    no adjustment needed (P_utg000003c is already circular)
  using I_contig_1:
    no adjustment needed (P_utg000003c is already circular)
  using J_contig_1:
    no adjustment needed (P_utg000003c is already circular)
  using K_contig_3:
    no adjustment needed (P_utg000003c is already circular)
  using L_utg000002c:
    no adjustment needed (P_utg000003c is already circular)
  using N_utg000003c:
    no adjustment needed (P_utg000003c is already circular)
  using O_utg000003c:
    no adjustment needed (P_utg000003c is already circular)
  circularisation complete (201,804 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 12:33:04)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0014_A6D67_RS27660 (replication initiation protein)
  ATGACGAGCGAAAATAACAGCTTACTTCTGAACCTTCAGGAAGTTGATAA...

B_Utg1062:    + strand (using original sequence)
D_Utg1078:    + strand (using original sequence)
F_contig_5:   + strand (using original sequence)
G_contig_3:   + strand (using original sequence)
H_contig_4:   + strand (using original sequence)
I_contig_1:   + strand (using original sequence)
J_contig_1:   + strand (using original sequence)
K_contig_3:   + strand (using original sequence)
L_utg000002c: + strand (using original sequence)
N_utg000003c: + strand (using original sequence)
O_utg000003c: + strand (using original sequence)
P_utg000003c: + strand (using original sequence)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 12:33:05)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

B_Utg1062: rotating by 169,150 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,401 bp)

D_Utg1078: rotating by 99,518 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,490 bp)

F_contig_5: rotating by 58,722 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,795 bp)

G_contig_3: rotating by 125,811 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,805 bp)

H_contig_4: rotating by 58,308 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,814 bp)

I_contig_1: rotating by 49,895 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,809 bp)

J_contig_1: rotating by 49,877 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,812 bp)

K_contig_3: rotating by 49,896 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,807 bp)

L_utg000002c: rotating by 70,665 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,794 bp)

N_utg000003c: rotating by 105,056 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,806 bp)

O_utg000003c: rotating by 184,285 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,802 bp)

P_utg000003c: rotating by 141,100 bp
   ATGACGAGCGAAAATAACAG...GATAACCGTTGAGGATCAAG (201,804 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 12:33:05)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   B_Utg1062 vs D_Utg1078...    99.309% overall identity, 66.7% worst-1kbp identity
   B_Utg1062 vs F_contig_5...   99.710% overall identity, 66.6% worst-1kbp identity
   B_Utg1062 vs G_contig_3...   99.704% overall identity, 65.4% worst-1kbp identity
   B_Utg1062 vs H_contig_4...   99.704% overall identity, 65.5% worst-1kbp identity
   B_Utg1062 vs I_contig_1...   99.703% overall identity, 65.5% worst-1kbp identity
   B_Utg1062 vs J_contig_1...   99.704% overall identity, 65.4% worst-1kbp identity
   B_Utg1062 vs K_contig_3...   99.704% overall identity, 65.4% worst-1kbp identity
   B_Utg1062 vs L_utg000002c... 99.712% overall identity, 66.8% worst-1kbp identity
   B_Utg1062 vs N_utg000003c... 99.707% overall identity, 66.7% worst-1kbp identity
   B_Utg1062 vs O_utg000003c... 99.709% overall identity, 66.8% worst-1kbp identity
   B_Utg1062 vs P_utg000003c... 99.713% overall identity, 66.8% worst-1kbp identity
   D_Utg1078 vs F_contig_5...   99.500% overall identity, 73.4% worst-1kbp identity
   D_Utg1078 vs G_contig_3...   99.485% overall identity, 73.4% worst-1kbp identity
   D_Utg1078 vs H_contig_4...   99.485% overall identity, 73.4% worst-1kbp identity
   D_Utg1078 vs I_contig_1...   99.492% overall identity, 73.4% worst-1kbp identity
   D_Utg1078 vs J_contig_1...   99.487% overall identity, 73.4% worst-1kbp identity
   D_Utg1078 vs K_contig_3...   99.487% overall identity, 73.4% worst-1kbp identity
   D_Utg1078 vs L_utg000002c... 99.503% overall identity, 73.4% worst-1kbp identity
   D_Utg1078 vs N_utg000003c... 99.504% overall identity, 73.4% worst-1kbp identity
   D_Utg1078 vs O_utg000003c... 99.502% overall identity, 73.4% worst-1kbp identity
   D_Utg1078 vs P_utg000003c... 99.507% overall identity, 73.4% worst-1kbp identity
  F_contig_5 vs G_contig_3...   99.980% overall identity, 96.8% worst-1kbp identity
  F_contig_5 vs H_contig_4...   99.975% overall identity, 96.7% worst-1kbp identity
  F_contig_5 vs I_contig_1...   99.977% overall identity, 97.1% worst-1kbp identity
  F_contig_5 vs J_contig_1...   99.981% overall identity, 97.5% worst-1kbp identity
  F_contig_5 vs K_contig_3...   99.982% overall identity, 97.4% worst-1kbp identity
  F_contig_5 vs L_utg000002c... 99.984% overall identity, 99.2% worst-1kbp identity
  F_contig_5 vs N_utg000003c... 99.983% overall identity, 99.1% worst-1kbp identity
  F_contig_5 vs O_utg000003c... 99.983% overall identity, 99.2% worst-1kbp identity
  F_contig_5 vs P_utg000003c... 99.987% overall identity, 99.2% worst-1kbp identity
  G_contig_3 vs H_contig_4...   99.989% overall identity, 99.9% worst-1kbp identity
  G_contig_3 vs I_contig_1...   99.984% overall identity, 98.7% worst-1kbp identity
  G_contig_3 vs J_contig_1...   99.987% overall identity, 99.1% worst-1kbp identity
  G_contig_3 vs K_contig_3...   99.987% overall identity, 99.2% worst-1kbp identity
  G_contig_3 vs L_utg000002c... 99.968% overall identity, 96.2% worst-1kbp identity
  G_contig_3 vs N_utg000003c... 99.967% overall identity, 96.1% worst-1kbp identity
  G_contig_3 vs O_utg000003c... 99.965% overall identity, 96.2% worst-1kbp identity
  G_contig_3 vs P_utg000003c... 99.970% overall identity, 96.2% worst-1kbp identity
  H_contig_4 vs I_contig_1...   99.983% overall identity, 98.8% worst-1kbp identity
  H_contig_4 vs J_contig_1...   99.985% overall identity, 99.0% worst-1kbp identity
  H_contig_4 vs K_contig_3...   99.984% overall identity, 99.1% worst-1kbp identity
  H_contig_4 vs L_utg000002c... 99.965% overall identity, 96.3% worst-1kbp identity
  H_contig_4 vs N_utg000003c... 99.964% overall identity, 96.2% worst-1kbp identity
  H_contig_4 vs O_utg000003c... 99.963% overall identity, 96.3% worst-1kbp identity
  H_contig_4 vs P_utg000003c... 99.967% overall identity, 96.3% worst-1kbp identity
  I_contig_1 vs J_contig_1...   99.991% overall identity, 99.4% worst-1kbp identity
  I_contig_1 vs K_contig_3...   99.992% overall identity, 99.5% worst-1kbp identity
  I_contig_1 vs L_utg000002c... 99.972% overall identity, 97.1% worst-1kbp identity
  I_contig_1 vs N_utg000003c... 99.972% overall identity, 97.2% worst-1kbp identity
  I_contig_1 vs O_utg000003c... 99.970% overall identity, 97.1% worst-1kbp identity
  I_contig_1 vs P_utg000003c... 99.975% overall identity, 97.1% worst-1kbp identity
  J_contig_1 vs K_contig_3...   99.996% overall identity, 99.9% worst-1kbp identity
  J_contig_1 vs L_utg000002c... 99.970% overall identity, 96.7% worst-1kbp identity
  J_contig_1 vs N_utg000003c... 99.970% overall identity, 96.6% worst-1kbp identity
  J_contig_1 vs O_utg000003c... 99.969% overall identity, 96.7% worst-1kbp identity
  J_contig_1 vs P_utg000003c... 99.974% overall identity, 96.7% worst-1kbp identity
  K_contig_3 vs L_utg000002c... 99.970% overall identity, 96.8% worst-1kbp identity
  K_contig_3 vs N_utg000003c... 99.970% overall identity, 96.7% worst-1kbp identity
  K_contig_3 vs O_utg000003c... 99.970% overall identity, 96.8% worst-1kbp identity
  K_contig_3 vs P_utg000003c... 99.973% overall identity, 96.8% worst-1kbp identity
L_utg000002c vs N_utg000003c... 99.987% overall identity, 99.6% worst-1kbp identity
L_utg000002c vs O_utg000003c... 99.987% overall identity, 99.5% worst-1kbp identity
L_utg000002c vs P_utg000003c... 99.990% overall identity, 99.7% worst-1kbp identity
N_utg000003c vs O_utg000003c... 99.986% overall identity, 99.5% worst-1kbp identity
N_utg000003c vs P_utg000003c... 99.991% overall identity, 99.6% worst-1kbp identity
O_utg000003c vs P_utg000003c... 99.991% overall identity, 99.5% worst-1kbp identity

Overall pairwise identities:
  B_Utg1062:    [2m100.000%[0m   99.309%   99.710%   99.704%   99.704%   99.703%   99.704%   99.704%   99.712%   99.707%   99.709%   99.713%
  D_Utg1078:     99.309%  [2m100.000%[0m   99.500%   99.485%   99.485%   99.492%   99.487%   99.487%   99.503%   99.504%   99.502%   99.507%
  F_contig_5:    99.710%   99.500%  [2m100.000%[0m   99.980%   99.975%   99.977%   99.981%   99.982%   99.984%   99.983%   99.983%   99.987%
  G_contig_3:    99.704%   99.485%   99.980%  [2m100.000%[0m   99.989%   99.984%   99.987%   99.987%   99.968%   99.967%   99.965%   99.970%
  H_contig_4:    99.704%   99.485%   99.975%   99.989%  [2m100.000%[0m   99.983%   99.985%   99.984%   99.965%   99.964%   99.963%   99.967%
  I_contig_1:    99.703%   99.492%   99.977%   99.984%   99.983%  [2m100.000%[0m   99.991%   99.992%   99.972%   99.972%   99.970%   99.975%
  J_contig_1:    99.704%   99.487%   99.981%   99.987%   99.985%   99.991%  [2m100.000%[0m   99.996%   99.970%   99.970%   99.969%   99.974%
  K_contig_3:    99.704%   99.487%   99.982%   99.987%   99.984%   99.992%   99.996%  [2m100.000%[0m   99.970%   99.970%   99.970%   99.973%
  L_utg000002c:  99.712%   99.503%   99.984%   99.968%   99.965%   99.972%   99.970%   99.970%  [2m100.000%[0m   99.987%   99.987%   99.990%
  N_utg000003c:  99.707%   99.504%   99.983%   99.967%   99.964%   99.972%   99.970%   99.970%   99.987%  [2m100.000%[0m   99.986%   99.991%
  O_utg000003c:  99.709%   99.502%   99.983%   99.965%   99.963%   99.970%   99.969%   99.970%   99.987%   99.986%  [2m100.000%[0m   99.991%
  P_utg000003c:  99.713%   99.507%   99.987%   99.970%   99.967%   99.975%   99.974%   99.973%   99.990%   99.991%   99.991%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  B_Utg1062:    [2m100.0%[0m   66.7%   66.6%   65.4%   65.5%   65.5%   65.4%   65.4%   66.8%   66.7%   66.8%   66.8%
  D_Utg1078:     66.7%  [2m100.0%[0m   73.4%   73.4%   73.4%   73.4%   73.4%   73.4%   73.4%   73.4%   73.4%   73.4%
  F_contig_5:    66.6%   73.4%  [2m100.0%[0m   96.8%   96.7%   97.1%   97.5%   97.4%   99.2%   99.1%   99.2%   99.2%
  G_contig_3:    65.4%   73.4%   96.8%  [2m100.0%[0m   99.9%   98.7%   99.1%   99.2%   96.2%   96.1%   96.2%   96.2%
  H_contig_4:    65.5%   73.4%   96.7%   99.9%  [2m100.0%[0m   98.8%   99.0%   99.1%   96.3%   96.2%   96.3%   96.3%
  I_contig_1:    65.5%   73.4%   97.1%   98.7%   98.8%  [2m100.0%[0m   99.4%   99.5%   97.1%   97.2%   97.1%   97.1%
  J_contig_1:    65.4%   73.4%   97.5%   99.1%   99.0%   99.4%  [2m100.0%[0m   99.9%   96.7%   96.6%   96.7%   96.7%
  K_contig_3:    65.4%   73.4%   97.4%   99.2%   99.1%   99.5%   99.9%  [2m100.0%[0m   96.8%   96.7%   96.8%   96.8%
  L_utg000002c:  66.8%   73.4%   99.2%   96.2%   96.3%   97.1%   96.7%   96.8%  [2m100.0%[0m   99.6%   99.5%   99.7%
  N_utg000003c:  66.7%   73.4%   99.1%   96.1%   96.2%   97.2%   96.6%   96.7%   99.6%  [2m100.0%[0m   99.5%   99.6%
  O_utg000003c:  66.8%   73.4%   99.2%   96.2%   96.3%   97.1%   96.7%   96.8%   99.5%   99.5%  [2m100.0%[0m   99.5%
  P_utg000003c:  66.8%   73.4%   99.2%   96.2%   96.3%   97.1%   96.7%   96.8%   99.7%   99.6%   99.5%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 12:33:12)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/CAAUE8/cluster_002/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 12:33:12)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_003/1_contigs/B_Utg1064.fasta (144,100 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/C_Utg1138.fasta (144,157 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/D_Utg1082.fasta (144,173 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/F_contig_1.fasta (144,113 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/G_contig_1.fasta (144,113 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/H_contig_2.fasta (144,114 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/J_contig_2.fasta (144,110 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/K_contig_2.fasta (144,118 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/L_utg000004c.fasta (144,385 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/N_utg000002c.fasta (144,191 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/O_utg000002c.fasta (144,119 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 12:33:12)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  B_Utg1064:    [2m1.000[0m  1.000  0.999  1.000  1.000  1.000  1.000  1.000  0.998  0.999  1.000
  C_Utg1138:    1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  0.998  1.000  1.000
  D_Utg1082:    1.001  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  0.999  1.000  1.000
  F_contig_1:   1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  0.998  0.999  1.000
  G_contig_1:   1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  0.998  0.999  1.000
  H_contig_2:   1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  0.998  0.999  1.000
  J_contig_2:   1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  0.998  0.999  1.000
  K_contig_2:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  0.998  0.999  1.000
  L_utg000004c: 1.002  1.002  1.001  1.002  1.002  1.002  1.002  1.002  [2m1.000[0m  1.001  1.002
  N_utg000002c: 1.001  1.000  1.000  1.001  1.001  1.001  1.001  1.001  0.999  [2m1.000[0m  1.000
  O_utg000002c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  0.998  1.000  [2m1.000[0m

Mash distances:
  B_Utg1064:    [2m0.000[0m  0.001  0.001  0.000  0.000  0.000  0.000  0.000  0.000  0.001  0.001
  C_Utg1138:    0.001  [2m0.000[0m  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001  0.001
  D_Utg1082:    0.001  0.001  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  F_contig_1:   0.000  0.001  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_1:   0.000  0.001  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  H_contig_2:   0.000  0.001  0.001  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  J_contig_2:   0.000  0.001  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  K_contig_2:   0.000  0.001  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  L_utg000004c: 0.000  0.001  0.001  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  N_utg000002c: 0.000  0.001  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  O_utg000002c: 0.000  0.001  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 12:33:13)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  CCAGGTTCCTGCGGCCATCTCCAGCACCGTACAGGTTTCCCCCAATATCG
  CCCGATGGGTGACGGTACCCCGATCGTCAAAATTCAGCACCACGAAACGA
  CCCCTTAATGGCAACAGTAGCTCGAAGGTGTGAGGGTGTCGGTGCGGGCG
  CACGTAGGTCCCAGGTCATATTCCTTCCGGCGTCCGGCATTTTACCGCCA
  GACAGCTCGGGATTCGTGATATCACCGTTCTTGCAGAATACGGTCAGAGG

B_Utg1064:    + strand (using original sequence)
C_Utg1138:    - strand (using reverse complement)
D_Utg1082:    - strand (using reverse complement)
F_contig_1:   - strand (using reverse complement)
G_contig_1:   - strand (using reverse complement)
H_contig_2:   + strand (using original sequence)
J_contig_2:   - strand (using reverse complement)
K_contig_2:   - strand (using reverse complement)
L_utg000004c: + strand (using original sequence)
N_utg000002c: - strand (using reverse complement)
O_utg000002c: - strand (using reverse complement)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 12:33:13)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising B_Utg1064:
  using C_Utg1138:
    no adjustment needed (B_Utg1064 is already circular)
  using D_Utg1082:
    no adjustment needed (B_Utg1064 is already circular)
  using F_contig_1:
    no adjustment needed (B_Utg1064 is already circular)
  using G_contig_1:
    no adjustment needed (B_Utg1064 is already circular)
  using H_contig_2:
    no adjustment needed (B_Utg1064 is already circular)
  using J_contig_2:
    no adjustment needed (B_Utg1064 is already circular)
  using K_contig_2:
    no adjustment needed (B_Utg1064 is already circular)
  using L_utg000004c:
    no adjustment needed (B_Utg1064 is already circular)
  using N_utg000002c:
    no adjustment needed (B_Utg1064 is already circular)
  using O_utg000002c:
    no adjustment needed (B_Utg1064 is already circular)
  circularisation complete (144,100 bp)

Circularising C_Utg1138:
  using B_Utg1064:
    no adjustment needed (C_Utg1138 is already circular)
  using D_Utg1082:
    unable to circularise: C_Utg1138's start/end is the same as D_Utg1082's start/end
  using F_contig_1:
    unable to circularise: C_Utg1138's start could not be found in F_contig_1
  using G_contig_1:
    no adjustment needed (C_Utg1138 is already circular)
  using H_contig_2:
    no adjustment needed (C_Utg1138 is already circular)
  using J_contig_2:
    unable to circularise: C_Utg1138's start could not be found in J_contig_2
  using K_contig_2:
    no adjustment needed (C_Utg1138 is already circular)
  using L_utg000004c:
    no adjustment needed (C_Utg1138 is already circular)
  using N_utg000002c:
    no adjustment needed (C_Utg1138 is already circular)
  using O_utg000002c:
    no adjustment needed (C_Utg1138 is already circular)
  circularisation complete (144,157 bp)

Circularising D_Utg1082:
  using B_Utg1064:
    no adjustment needed (D_Utg1082 is already circular)
  using C_Utg1138:
    unable to circularise: cannot determine trim amount
  using F_contig_1:
    unable to circularise: D_Utg1082's start could not be found in F_contig_1
  using G_contig_1:
    no adjustment needed (D_Utg1082 is already circular)
  using H_contig_2:
    no adjustment needed (D_Utg1082 is already circular)
  using J_contig_2:
    unable to circularise: D_Utg1082's start could not be found in J_contig_2
  using K_contig_2:
    no adjustment needed (D_Utg1082 is already circular)
  using L_utg000004c:
    no adjustment needed (D_Utg1082 is already circular)
  using N_utg000002c:
    no adjustment needed (D_Utg1082 is already circular)
  using O_utg000002c:
    no adjustment needed (D_Utg1082 is already circular)
  circularisation complete (144,173 bp)

Circularising F_contig_1:
  using B_Utg1064:
    circularising F_contig_1 by trimming 1 bp of sequence from the end
  using C_Utg1138:
    unable to circularise: cannot determine trim amount
  using D_Utg1082:
    unable to circularise: cannot determine trim amount
  using G_contig_1:
    circularising F_contig_1 by trimming 1 bp of sequence from the end
  using H_contig_2:
    circularising F_contig_1 by trimming 1 bp of sequence from the end
  using J_contig_2:
    unable to circularise: F_contig_1's start/end is the same as J_contig_2's start/end
  using K_contig_2:
    circularising F_contig_1 by trimming 1 bp of sequence from the end
  using L_utg000004c:
    circularising F_contig_1 by trimming 1 bp of sequence from the end
  using N_utg000002c:
    circularising F_contig_1 by trimming 1 bp of sequence from the end
  using O_utg000002c:
    circularising F_contig_1 by trimming 1 bp of sequence from the end
  circularisation complete (144,112 bp)

Circularising G_contig_1:
  using B_Utg1064:
    unable to circularise: G_contig_1's start and end were found in multiple places in B_Utg1064
  using C_Utg1138:
    unable to circularise: G_contig_1's start and end were found in multiple places in C_Utg1138
  using D_Utg1082:
    unable to circularise: G_contig_1's start and end were found in multiple places in D_Utg1082
  using F_contig_1:
    unable to circularise: G_contig_1's start and end were found in multiple places in F_contig_1
  using H_contig_2:
    unable to circularise: G_contig_1's start and end were found in multiple places in H_contig_2
  using J_contig_2:
    unable to circularise: G_contig_1's start and end were found in multiple places in J_contig_2
  using K_contig_2:
    circularising G_contig_1 by adding 1 bp of sequence from K_contig_2 (8897-8898)
  using L_utg000004c:
    unable to circularise: G_contig_1's start and end were found in multiple places in L_utg000004c
  using N_utg000002c:
    unable to circularise: G_contig_1's start and end were found in multiple places in N_utg000002c
  using O_utg000002c:
    unable to circularise: G_contig_1's start and end were found in multiple places in O_utg000002c
  circularisation complete (144,114 bp)

Circularising H_contig_2:
  using B_Utg1064:
    circularising H_contig_2 by adding 1 bp of sequence from B_Utg1064 (23790-23791)
  using C_Utg1138:
    circularising H_contig_2 by adding 1 bp of sequence from C_Utg1138 (25948-25949)
  using D_Utg1082:
    circularising H_contig_2 by adding 1 bp of sequence from D_Utg1082 (25942-25943)
  using F_contig_1:
    circularising H_contig_2 by adding 1 bp of sequence from F_contig_1 (25047-25048)
  using G_contig_1:
    circularising H_contig_2 by adding 1 bp of sequence from G_contig_1 (42842-42843)
  using J_contig_2:
    circularising H_contig_2 by adding 1 bp of sequence from J_contig_2 (25049-25050)
  using K_contig_2:
    circularising H_contig_2 by adding 1 bp of sequence from K_contig_2 (42845-42846)
  using L_utg000004c:
    circularising H_contig_2 by adding 1 bp of sequence from L_utg000004c (104735-104736)
  using N_utg000002c:
    circularising H_contig_2 by adding 1 bp of sequence from N_utg000002c (3958-3959)
  using O_utg000002c:
    circularising H_contig_2 by adding 1 bp of sequence from O_utg000002c (121527-121528)
  circularisation complete (144,115 bp)

Circularising J_contig_2:
  using B_Utg1064:
    circularising J_contig_2 by adding 1 bp of sequence from B_Utg1064 (142840-142841)
  using C_Utg1138:
    unable to circularise: cannot determine trim amount
  using D_Utg1082:
    unable to circularise: cannot determine trim amount
  using F_contig_1:
    unable to circularise: J_contig_2's start/end is the same as F_contig_1's start/end
  using G_contig_1:
    circularising J_contig_2 by adding 1 bp of sequence from G_contig_1 (17794-17795)
  using H_contig_2:
    circularising J_contig_2 by adding 1 bp of sequence from H_contig_2 (119068-119069)
  using K_contig_2:
    circularising J_contig_2 by adding 1 bp of sequence from K_contig_2 (17795-17796)
  using L_utg000004c:
    circularising J_contig_2 by adding 1 bp of sequence from L_utg000004c (79686-79687)
  using N_utg000002c:
    circularising J_contig_2 by adding 1 bp of sequence from N_utg000002c (123100-123101)
  using O_utg000002c:
    circularising J_contig_2 by adding 1 bp of sequence from O_utg000002c (96477-96478)
  circularisation complete (144,111 bp)

Circularising K_contig_2:
  using B_Utg1064:
    unable to circularise: K_contig_2's start and end were found in multiple places in B_Utg1064
  using C_Utg1138:
    unable to circularise: K_contig_2's start and end were found in multiple places in C_Utg1138
  using D_Utg1082:
    unable to circularise: K_contig_2's start and end were found in multiple places in D_Utg1082
  using F_contig_1:
    unable to circularise: K_contig_2's start and end were found in multiple places in F_contig_1
  using G_contig_1:
    circularising K_contig_2 by trimming 3 bp of sequence from the end
  using H_contig_2:
    unable to circularise: K_contig_2's start and end were found in multiple places in H_contig_2
  using J_contig_2:
    unable to circularise: K_contig_2's start and end were found in multiple places in J_contig_2
  using L_utg000004c:
    unable to circularise: K_contig_2's start and end were found in multiple places in L_utg000004c
  using N_utg000002c:
    unable to circularise: K_contig_2's start and end were found in multiple places in N_utg000002c
  using O_utg000002c:
    unable to circularise: K_contig_2's start and end were found in multiple places in O_utg000002c
  circularisation complete (144,115 bp)

Circularising L_utg000004c:
  using B_Utg1064:
    no adjustment needed (L_utg000004c is already circular)
  using C_Utg1138:
    unable to circularise: L_utg000004c's start could not be found in C_Utg1138
  using D_Utg1082:
    unable to circularise: L_utg000004c's start could not be found in D_Utg1082
  using F_contig_1:
    no adjustment needed (L_utg000004c is already circular)
  using G_contig_1:
    no adjustment needed (L_utg000004c is already circular)
  using H_contig_2:
    no adjustment needed (L_utg000004c is already circular)
  using J_contig_2:
    no adjustment needed (L_utg000004c is already circular)
  using K_contig_2:
    no adjustment needed (L_utg000004c is already circular)
  using N_utg000002c:
    no adjustment needed (L_utg000004c is already circular)
  using O_utg000002c:
    no adjustment needed (L_utg000004c is already circular)
  circularisation complete (144,385 bp)

Circularising N_utg000002c:
  using B_Utg1064:
    no adjustment needed (N_utg000002c is already circular)
  using C_Utg1138:
    no adjustment needed (N_utg000002c is already circular)
  using D_Utg1082:
    no adjustment needed (N_utg000002c is already circular)
  using F_contig_1:
    no adjustment needed (N_utg000002c is already circular)
  using G_contig_1:
    no adjustment needed (N_utg000002c is already circular)
  using H_contig_2:
    no adjustment needed (N_utg000002c is already circular)
  using J_contig_2:
    no adjustment needed (N_utg000002c is already circular)
  using K_contig_2:
    no adjustment needed (N_utg000002c is already circular)
  using L_utg000004c:
    no adjustment needed (N_utg000002c is already circular)
  using O_utg000002c:
    no adjustment needed (N_utg000002c is already circular)
  circularisation complete (144,191 bp)

Circularising O_utg000002c:
  using B_Utg1064:
    no adjustment needed (O_utg000002c is already circular)
  using C_Utg1138:
    no adjustment needed (O_utg000002c is already circular)
  using D_Utg1082:
    no adjustment needed (O_utg000002c is already circular)
  using F_contig_1:
    no adjustment needed (O_utg000002c is already circular)
  using G_contig_1:
    no adjustment needed (O_utg000002c is already circular)
  using H_contig_2:
    no adjustment needed (O_utg000002c is already circular)
  using J_contig_2:
    no adjustment needed (O_utg000002c is already circular)
  using K_contig_2:
    no adjustment needed (O_utg000002c is already circular)
  using L_utg000004c:
    no adjustment needed (O_utg000002c is already circular)
  using N_utg000002c:
    no adjustment needed (O_utg000002c is already circular)
  circularisation complete (144,119 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 12:33:18)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0164_AGE78_RS01590 (incFII family plasmid replication initiator RepA)
  GTGACTGATATCCTTCAAAACCACTATTCACAGGTTAAAAACCCGAACCC...

B_Utg1064:    - strand (using reverse complement)
C_Utg1138:    - strand (using reverse complement)
D_Utg1082:    - strand (using reverse complement)
F_contig_1:   - strand (using reverse complement)
G_contig_1:   - strand (using reverse complement)
H_contig_2:   - strand (using reverse complement)
J_contig_2:   - strand (using reverse complement)
K_contig_2:   - strand (using reverse complement)
L_utg000004c: - strand (using reverse complement)
N_utg000002c: - strand (using reverse complement)
O_utg000002c: - strand (using reverse complement)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 12:33:19)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

B_Utg1064: rotating by 124,781 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,100 bp)

C_Utg1138: rotating by 122,679 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,157 bp)

D_Utg1082: rotating by 122,701 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,173 bp)

F_contig_1: rotating by 123,536 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,112 bp)

G_contig_1: rotating by 105,743 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,114 bp)

H_contig_2: rotating by 4,472 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,115 bp)

J_contig_2: rotating by 123,533 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,111 bp)

K_contig_2: rotating by 105,741 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,115 bp)

L_utg000004c: rotating by 44,121 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,385 bp)

N_utg000002c: rotating by 513 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,191 bp)

O_utg000002c: rotating by 27,063 bp
   GTGACTGATATCCTTCAAAA...CAACATAAGCGCAGGAAGCG (144,119 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 12:33:20)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   B_Utg1064 vs C_Utg1138...    99.804% overall identity, 91.5% worst-1kbp identity
   B_Utg1064 vs D_Utg1082...    99.781% overall identity, 90.6% worst-1kbp identity
   B_Utg1064 vs F_contig_1...   99.942% overall identity, 98.0% worst-1kbp identity
   B_Utg1064 vs G_contig_1...   99.940% overall identity, 98.0% worst-1kbp identity
   B_Utg1064 vs H_contig_2...   99.939% overall identity, 98.0% worst-1kbp identity
   B_Utg1064 vs J_contig_2...   99.936% overall identity, 98.0% worst-1kbp identity
   B_Utg1064 vs K_contig_2...   99.939% overall identity, 98.0% worst-1kbp identity
   B_Utg1064 vs L_utg000004c... 99.754% overall identity, 72.8% worst-1kbp identity
   B_Utg1064 vs N_utg000002c... 99.878% overall identity, 91.4% worst-1kbp identity
   B_Utg1064 vs O_utg000002c... 99.937% overall identity, 98.0% worst-1kbp identity
   C_Utg1138 vs D_Utg1082...    99.820% overall identity, 93.7% worst-1kbp identity
   C_Utg1138 vs F_contig_1...   99.831% overall identity, 91.5% worst-1kbp identity
   C_Utg1138 vs G_contig_1...   99.832% overall identity, 91.5% worst-1kbp identity
   C_Utg1138 vs H_contig_2...   99.834% overall identity, 91.6% worst-1kbp identity
   C_Utg1138 vs J_contig_2...   99.829% overall identity, 91.5% worst-1kbp identity
   C_Utg1138 vs K_contig_2...   99.831% overall identity, 91.5% worst-1kbp identity
   C_Utg1138 vs L_utg000004c... 99.646% overall identity, 68.1% worst-1kbp identity
   C_Utg1138 vs N_utg000002c... 99.771% overall identity, 91.5% worst-1kbp identity
   C_Utg1138 vs O_utg000002c... 99.827% overall identity, 91.5% worst-1kbp identity
   D_Utg1082 vs F_contig_1...   99.816% overall identity, 90.9% worst-1kbp identity
   D_Utg1082 vs G_contig_1...   99.816% overall identity, 90.9% worst-1kbp identity
   D_Utg1082 vs H_contig_2...   99.817% overall identity, 90.8% worst-1kbp identity
   D_Utg1082 vs J_contig_2...   99.819% overall identity, 90.9% worst-1kbp identity
   D_Utg1082 vs K_contig_2...   99.820% overall identity, 90.9% worst-1kbp identity
   D_Utg1082 vs L_utg000004c... 99.627% overall identity, 71.7% worst-1kbp identity
   D_Utg1082 vs N_utg000002c... 99.760% overall identity, 90.9% worst-1kbp identity
   D_Utg1082 vs O_utg000002c... 99.817% overall identity, 90.9% worst-1kbp identity
  F_contig_1 vs G_contig_1...   99.992% overall identity, 99.8% worst-1kbp identity
  F_contig_1 vs H_contig_2...   99.988% overall identity, 99.8% worst-1kbp identity
  F_contig_1 vs J_contig_2...   99.988% overall identity, 99.8% worst-1kbp identity
  F_contig_1 vs K_contig_2...   99.990% overall identity, 99.8% worst-1kbp identity
  F_contig_1 vs L_utg000004c... 99.792% overall identity, 72.8% worst-1kbp identity
  F_contig_1 vs N_utg000002c... 99.924% overall identity, 91.7% worst-1kbp identity
  F_contig_1 vs O_utg000002c... 99.985% overall identity, 99.7% worst-1kbp identity
  G_contig_1 vs H_contig_2...   99.987% overall identity, 99.8% worst-1kbp identity
  G_contig_1 vs J_contig_2...   99.985% overall identity, 99.8% worst-1kbp identity
  G_contig_1 vs K_contig_2...   99.990% overall identity, 99.8% worst-1kbp identity
  G_contig_1 vs L_utg000004c... 99.794% overall identity, 72.8% worst-1kbp identity
  G_contig_1 vs N_utg000002c... 99.924% overall identity, 91.7% worst-1kbp identity
  G_contig_1 vs O_utg000002c... 99.983% overall identity, 99.7% worst-1kbp identity
  H_contig_2 vs J_contig_2...   99.985% overall identity, 99.8% worst-1kbp identity
  H_contig_2 vs K_contig_2...   99.988% overall identity, 99.8% worst-1kbp identity
  H_contig_2 vs L_utg000004c... 99.796% overall identity, 73.0% worst-1kbp identity
  H_contig_2 vs N_utg000002c... 99.924% overall identity, 91.6% worst-1kbp identity
  H_contig_2 vs O_utg000002c... 99.982% overall identity, 99.7% worst-1kbp identity
  J_contig_2 vs K_contig_2...   99.995% overall identity, 99.9% worst-1kbp identity
  J_contig_2 vs L_utg000004c... 99.792% overall identity, 73.0% worst-1kbp identity
  J_contig_2 vs N_utg000002c... 99.926% overall identity, 91.7% worst-1kbp identity
  J_contig_2 vs O_utg000002c... 99.988% overall identity, 99.7% worst-1kbp identity
  K_contig_2 vs L_utg000004c... 99.794% overall identity, 72.9% worst-1kbp identity
  K_contig_2 vs N_utg000002c... 99.927% overall identity, 91.7% worst-1kbp identity
  K_contig_2 vs O_utg000002c... 99.990% overall identity, 99.7% worst-1kbp identity
L_utg000004c vs N_utg000002c... 99.737% overall identity, 72.9% worst-1kbp identity
L_utg000004c vs O_utg000002c... 99.793% overall identity, 72.8% worst-1kbp identity
N_utg000002c vs O_utg000002c... 99.929% overall identity, 91.7% worst-1kbp identity

Overall pairwise identities:
  B_Utg1064:    [2m100.000%[0m   99.804%   99.781%   99.942%   99.940%   99.939%   99.936%   99.939%   99.754%   99.878%   99.937%
  C_Utg1138:     99.804%  [2m100.000%[0m   99.820%   99.831%   99.832%   99.834%   99.829%   99.831%   99.646%   99.771%   99.827%
  D_Utg1082:     99.781%   99.820%  [2m100.000%[0m   99.816%   99.816%   99.817%   99.819%   99.820%   99.627%   99.760%   99.817%
  F_contig_1:    99.942%   99.831%   99.816%  [2m100.000%[0m   99.992%   99.988%   99.988%   99.990%   99.792%   99.924%   99.985%
  G_contig_1:    99.940%   99.832%   99.816%   99.992%  [2m100.000%[0m   99.987%   99.985%   99.990%   99.794%   99.924%   99.983%
  H_contig_2:    99.939%   99.834%   99.817%   99.988%   99.987%  [2m100.000%[0m   99.985%   99.988%   99.796%   99.924%   99.982%
  J_contig_2:    99.936%   99.829%   99.819%   99.988%   99.985%   99.985%  [2m100.000%[0m   99.995%   99.792%   99.926%   99.988%
  K_contig_2:    99.939%   99.831%   99.820%   99.990%   99.990%   99.988%   99.995%  [2m100.000%[0m   99.794%   99.927%   99.990%
  L_utg000004c:  99.754%   99.646%   99.627%   99.792%   99.794%   99.796%   99.792%   99.794%  [2m100.000%[0m   99.737%   99.793%
  N_utg000002c:  99.878%   99.771%   99.760%   99.924%   99.924%   99.924%   99.926%   99.927%   99.737%  [2m100.000%[0m   99.929%
  O_utg000002c:  99.937%   99.827%   99.817%   99.985%   99.983%   99.982%   99.988%   99.990%   99.793%   99.929%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  B_Utg1064:    [2m100.0%[0m   91.5%   90.6%   98.0%   98.0%   98.0%   98.0%   98.0%   72.8%   91.4%   98.0%
  C_Utg1138:     91.5%  [2m100.0%[0m   93.7%   91.5%   91.5%   91.6%   91.5%   91.5%   68.1%   91.5%   91.5%
  D_Utg1082:     90.6%   93.7%  [2m100.0%[0m   90.9%   90.9%   90.8%   90.9%   90.9%   71.7%   90.9%   90.9%
  F_contig_1:    98.0%   91.5%   90.9%  [2m100.0%[0m   99.8%   99.8%   99.8%   99.8%   72.8%   91.7%   99.7%
  G_contig_1:    98.0%   91.5%   90.9%   99.8%  [2m100.0%[0m   99.8%   99.8%   99.8%   72.8%   91.7%   99.7%
  H_contig_2:    98.0%   91.6%   90.8%   99.8%   99.8%  [2m100.0%[0m   99.8%   99.8%   73.0%   91.6%   99.7%
  J_contig_2:    98.0%   91.5%   90.9%   99.8%   99.8%   99.8%  [2m100.0%[0m   99.9%   73.0%   91.7%   99.7%
  K_contig_2:    98.0%   91.5%   90.9%   99.8%   99.8%   99.8%   99.9%  [2m100.0%[0m   72.9%   91.7%   99.7%
  L_utg000004c:  72.8%   68.1%   71.7%   72.8%   72.8%   73.0%   73.0%   72.9%  [2m100.0%[0m   72.9%   72.8%
  N_utg000002c:  91.4%   91.5%   90.9%   91.7%   91.7%   91.6%   91.7%   91.7%   72.9%  [2m100.0%[0m   91.7%
  O_utg000002c:  98.0%   91.5%   90.9%   99.7%   99.7%   99.7%   99.7%   99.7%   72.8%   91.7%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 12:33:23)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/CAAUE8/cluster_003/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 12:33:24)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_004/1_contigs/B_Utg1060.fasta (55,514 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/C_Utg1136.fasta (55,511 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/F_contig_4.fasta (55,530 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/G_contig_2.fasta (55,525 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/I_contig_3.fasta (55,527 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/J_contig_6.fasta (55,528 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/K_contig_1.fasta (55,526 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/L_utg000003c.fasta (55,522 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/M_utg000003c.fasta (55,524 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/N_utg000004c.fasta (55,522 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/O_utg000005c.fasta (55,524 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/P_utg000004c.fasta (55,524 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 12:33:24)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  B_Utg1060:    [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  C_Utg1136:    1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  F_contig_4:   1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  G_contig_2:   1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  I_contig_3:   1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  J_contig_6:   1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000
  K_contig_1:   1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000
  L_utg000003c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000
  M_utg000003c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000
  N_utg000004c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000
  O_utg000005c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000
  P_utg000004c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m

Mash distances:
  B_Utg1060:    [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  C_Utg1136:    0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  F_contig_4:   0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_2:   0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  I_contig_3:   0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  J_contig_6:   0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  K_contig_1:   0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  L_utg000003c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  M_utg000003c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  N_utg000004c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  O_utg000005c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000004c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 12:33:25)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  GGCTTTGGTTCCATGATAGAACGGTCCTTGCACCTGCTTGTAATTATCAT
  GAGAGATGGGAATCCAATCTTTTACCATTTTAAGACCCTTAATTGTTGGG
  ATTTGGCTGCATAACGTTTGACATGAGGGGCGGCCAAGGGCGCCAGCCCT
  TGGACGTCCCCCTCGATGGAAGGGTTAGGCATCACTGCGTGTTCGCTCGA
  ATGCCTGGCGTGTTTGAACCATGTACACGGCTGGACCATATGGGGTGGTT

B_Utg1060:    + strand (using original sequence)
C_Utg1136:    + strand (using original sequence)
F_contig_4:   + strand (using original sequence)
G_contig_2:   + strand (using original sequence)
I_contig_3:   + strand (using original sequence)
J_contig_6:   + strand (using original sequence)
K_contig_1:   - strand (using reverse complement)
L_utg000003c: - strand (using reverse complement)
M_utg000003c: + strand (using original sequence)
N_utg000004c: + strand (using original sequence)
O_utg000005c: + strand (using original sequence)
P_utg000004c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 12:33:25)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising B_Utg1060:
  using C_Utg1136:
    unable to circularise: B_Utg1060's start/end is the same as C_Utg1136's start/end
  using F_contig_4:
    no adjustment needed (B_Utg1060 is already circular)
  using G_contig_2:
    no adjustment needed (B_Utg1060 is already circular)
  using I_contig_3:
    no adjustment needed (B_Utg1060 is already circular)
  using J_contig_6:
    no adjustment needed (B_Utg1060 is already circular)
  using K_contig_1:
    no adjustment needed (B_Utg1060 is already circular)
  using L_utg000003c:
    no adjustment needed (B_Utg1060 is already circular)
  using M_utg000003c:
    no adjustment needed (B_Utg1060 is already circular)
  using N_utg000004c:
    no adjustment needed (B_Utg1060 is already circular)
  using O_utg000005c:
    no adjustment needed (B_Utg1060 is already circular)
  using P_utg000004c:
    no adjustment needed (B_Utg1060 is already circular)
  circularisation complete (55,514 bp)

Circularising C_Utg1136:
  using B_Utg1060:
    unable to circularise: C_Utg1136's start/end is the same as B_Utg1060's start/end
  using F_contig_4:
    no adjustment needed (C_Utg1136 is already circular)
  using G_contig_2:
    no adjustment needed (C_Utg1136 is already circular)
  using I_contig_3:
    no adjustment needed (C_Utg1136 is already circular)
  using J_contig_6:
    no adjustment needed (C_Utg1136 is already circular)
  using K_contig_1:
    no adjustment needed (C_Utg1136 is already circular)
  using L_utg000003c:
    no adjustment needed (C_Utg1136 is already circular)
  using M_utg000003c:
    no adjustment needed (C_Utg1136 is already circular)
  using N_utg000004c:
    no adjustment needed (C_Utg1136 is already circular)
  using O_utg000005c:
    no adjustment needed (C_Utg1136 is already circular)
  using P_utg000004c:
    no adjustment needed (C_Utg1136 is already circular)
  circularisation complete (55,511 bp)

Circularising F_contig_4:
  using B_Utg1060:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using C_Utg1136:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using G_contig_2:
    unable to circularise: F_contig_4's end could not be found in G_contig_2
  using I_contig_3:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using J_contig_6:
    unable to circularise: F_contig_4's start/end is the same as J_contig_6's start/end
  using K_contig_1:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using L_utg000003c:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using M_utg000003c:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using N_utg000004c:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using O_utg000005c:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using P_utg000004c:
    unable to circularise: F_contig_4's start could not be found in P_utg000004c
  circularisation complete (55,527 bp)

Circularising G_contig_2:
  using B_Utg1060:
    no adjustment needed (G_contig_2 is already circular)
  using C_Utg1136:
    no adjustment needed (G_contig_2 is already circular)
  using F_contig_4:
    unable to circularise: G_contig_2's start could not be found in F_contig_4
  using I_contig_3:
    no adjustment needed (G_contig_2 is already circular)
  using J_contig_6:
    unable to circularise: G_contig_2's start could not be found in J_contig_6
  using K_contig_1:
    no adjustment needed (G_contig_2 is already circular)
  using L_utg000003c:
    no adjustment needed (G_contig_2 is already circular)
  using M_utg000003c:
    no adjustment needed (G_contig_2 is already circular)
  using N_utg000004c:
    no adjustment needed (G_contig_2 is already circular)
  using O_utg000005c:
    no adjustment needed (G_contig_2 is already circular)
  using P_utg000004c:
    unable to circularise: G_contig_2's start could not be found in P_utg000004c
  circularisation complete (55,525 bp)

Circularising I_contig_3:
  using B_Utg1060:
    no adjustment needed (I_contig_3 is already circular)
  using C_Utg1136:
    no adjustment needed (I_contig_3 is already circular)
  using F_contig_4:
    no adjustment needed (I_contig_3 is already circular)
  using G_contig_2:
    no adjustment needed (I_contig_3 is already circular)
  using J_contig_6:
    no adjustment needed (I_contig_3 is already circular)
  using K_contig_1:
    no adjustment needed (I_contig_3 is already circular)
  using L_utg000003c:
    no adjustment needed (I_contig_3 is already circular)
  using M_utg000003c:
    no adjustment needed (I_contig_3 is already circular)
  using N_utg000004c:
    no adjustment needed (I_contig_3 is already circular)
  using O_utg000005c:
    no adjustment needed (I_contig_3 is already circular)
  using P_utg000004c:
    no adjustment needed (I_contig_3 is already circular)
  circularisation complete (55,527 bp)

Circularising J_contig_6:
  using B_Utg1060:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using C_Utg1136:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using F_contig_4:
    unable to circularise: J_contig_6's start/end is the same as F_contig_4's start/end
  using G_contig_2:
    unable to circularise: J_contig_6's end could not be found in G_contig_2
  using I_contig_3:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using K_contig_1:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using L_utg000003c:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using M_utg000003c:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using N_utg000004c:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using O_utg000005c:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using P_utg000004c:
    unable to circularise: J_contig_6's start could not be found in P_utg000004c
  circularisation complete (55,524 bp)

Circularising K_contig_1:
  using B_Utg1060:
    circularising K_contig_1 by adding 1 bp of sequence from B_Utg1060 (44743-44744)
  using C_Utg1136:
    circularising K_contig_1 by adding 1 bp of sequence from C_Utg1136 (44738-44739)
  using F_contig_4:
    circularising K_contig_1 by adding 1 bp of sequence from F_contig_4 (51823-51824)
  using G_contig_2:
    circularising K_contig_1 by adding 1 bp of sequence from G_contig_2 (51919-51920)
  using I_contig_3:
    circularising K_contig_1 by adding 1 bp of sequence from I_contig_3 (15705-15706)
  using J_contig_6:
    circularising K_contig_1 by adding 1 bp of sequence from J_contig_6 (51821-51822)
  using L_utg000003c:
    circularising K_contig_1 by adding 1 bp of sequence from L_utg000003c (49213-49214)
  using M_utg000003c:
    circularising K_contig_1 by adding 1 bp of sequence from M_utg000003c (40739-40740)
  using N_utg000004c:
    circularising K_contig_1 by adding 1 bp of sequence from N_utg000004c (30359-30360)
  using O_utg000005c:
    circularising K_contig_1 by adding 1 bp of sequence from O_utg000005c (33694-33695)
  using P_utg000004c:
    circularising K_contig_1 by adding 1 bp of sequence from P_utg000004c (50969-50970)
  circularisation complete (55,527 bp)

Circularising L_utg000003c:
  using B_Utg1060:
    no adjustment needed (L_utg000003c is already circular)
  using C_Utg1136:
    no adjustment needed (L_utg000003c is already circular)
  using F_contig_4:
    no adjustment needed (L_utg000003c is already circular)
  using G_contig_2:
    no adjustment needed (L_utg000003c is already circular)
  using I_contig_3:
    no adjustment needed (L_utg000003c is already circular)
  using J_contig_6:
    no adjustment needed (L_utg000003c is already circular)
  using K_contig_1:
    no adjustment needed (L_utg000003c is already circular)
  using M_utg000003c:
    no adjustment needed (L_utg000003c is already circular)
  using N_utg000004c:
    no adjustment needed (L_utg000003c is already circular)
  using O_utg000005c:
    no adjustment needed (L_utg000003c is already circular)
  using P_utg000004c:
    no adjustment needed (L_utg000003c is already circular)
  circularisation complete (55,522 bp)

Circularising M_utg000003c:
  using B_Utg1060:
    no adjustment needed (M_utg000003c is already circular)
  using C_Utg1136:
    no adjustment needed (M_utg000003c is already circular)
  using F_contig_4:
    no adjustment needed (M_utg000003c is already circular)
  using G_contig_2:
    no adjustment needed (M_utg000003c is already circular)
  using I_contig_3:
    no adjustment needed (M_utg000003c is already circular)
  using J_contig_6:
    no adjustment needed (M_utg000003c is already circular)
  using K_contig_1:
    no adjustment needed (M_utg000003c is already circular)
  using L_utg000003c:
    no adjustment needed (M_utg000003c is already circular)
  using N_utg000004c:
    no adjustment needed (M_utg000003c is already circular)
  using O_utg000005c:
    no adjustment needed (M_utg000003c is already circular)
  using P_utg000004c:
    no adjustment needed (M_utg000003c is already circular)
  circularisation complete (55,524 bp)

Circularising N_utg000004c:
  using B_Utg1060:
    no adjustment needed (N_utg000004c is already circular)
  using C_Utg1136:
    no adjustment needed (N_utg000004c is already circular)
  using F_contig_4:
    no adjustment needed (N_utg000004c is already circular)
  using G_contig_2:
    no adjustment needed (N_utg000004c is already circular)
  using I_contig_3:
    no adjustment needed (N_utg000004c is already circular)
  using J_contig_6:
    no adjustment needed (N_utg000004c is already circular)
  using K_contig_1:
    no adjustment needed (N_utg000004c is already circular)
  using L_utg000003c:
    no adjustment needed (N_utg000004c is already circular)
  using M_utg000003c:
    no adjustment needed (N_utg000004c is already circular)
  using O_utg000005c:
    no adjustment needed (N_utg000004c is already circular)
  using P_utg000004c:
    no adjustment needed (N_utg000004c is already circular)
  circularisation complete (55,522 bp)

Circularising O_utg000005c:
  using B_Utg1060:
    no adjustment needed (O_utg000005c is already circular)
  using C_Utg1136:
    no adjustment needed (O_utg000005c is already circular)
  using F_contig_4:
    no adjustment needed (O_utg000005c is already circular)
  using G_contig_2:
    no adjustment needed (O_utg000005c is already circular)
  using I_contig_3:
    no adjustment needed (O_utg000005c is already circular)
  using J_contig_6:
    no adjustment needed (O_utg000005c is already circular)
  using K_contig_1:
    no adjustment needed (O_utg000005c is already circular)
  using L_utg000003c:
    no adjustment needed (O_utg000005c is already circular)
  using M_utg000003c:
    no adjustment needed (O_utg000005c is already circular)
  using N_utg000004c:
    no adjustment needed (O_utg000005c is already circular)
  using P_utg000004c:
    no adjustment needed (O_utg000005c is already circular)
  circularisation complete (55,524 bp)

Circularising P_utg000004c:
  using B_Utg1060:
    no adjustment needed (P_utg000004c is already circular)
  using C_Utg1136:
    no adjustment needed (P_utg000004c is already circular)
  using F_contig_4:
    unable to circularise: P_utg000004c's end could not be found in F_contig_4
  using G_contig_2:
    unable to circularise: P_utg000004c's end could not be found in G_contig_2
  using I_contig_3:
    no adjustment needed (P_utg000004c is already circular)
  using J_contig_6:
    unable to circularise: P_utg000004c's end could not be found in J_contig_6
  using K_contig_1:
    no adjustment needed (P_utg000004c is already circular)
  using L_utg000003c:
    no adjustment needed (P_utg000004c is already circular)
  using M_utg000003c:
    no adjustment needed (P_utg000004c is already circular)
  using N_utg000004c:
    no adjustment needed (P_utg000004c is already circular)
  using O_utg000005c:
    no adjustment needed (P_utg000004c is already circular)
  circularisation complete (55,524 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 12:33:28)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0100_A6D67_RS28830 (replication initiation protein)
  ATGGGAAAGAGGTCAAGTTCAGTTCTCAATTATCCACTTGTGGATAAAGT...

B_Utg1060:    - strand (using reverse complement)
C_Utg1136:    - strand (using reverse complement)
F_contig_4:   - strand (using reverse complement)
G_contig_2:   - strand (using reverse complement)
I_contig_3:   - strand (using reverse complement)
J_contig_6:   - strand (using reverse complement)
K_contig_1:   - strand (using reverse complement)
L_utg000003c: - strand (using reverse complement)
M_utg000003c: - strand (using reverse complement)
N_utg000004c: - strand (using reverse complement)
O_utg000005c: - strand (using reverse complement)
P_utg000004c: - strand (using reverse complement)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 12:33:29)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

B_Utg1060: rotating by 45,123 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,514 bp)

C_Utg1136: rotating by 45,126 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,511 bp)

F_contig_4: rotating by 38,062 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,527 bp)

G_contig_2: rotating by 37,963 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,525 bp)

I_contig_3: rotating by 18,653 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,527 bp)

J_contig_6: rotating by 38,059 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,524 bp)

K_contig_1: rotating by 34,358 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,527 bp)

L_utg000003c: rotating by 40,664 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,522 bp)

M_utg000003c: rotating by 49,141 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,524 bp)

N_utg000004c: rotating by 3,996 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,522 bp)

O_utg000005c: rotating by 662 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,524 bp)

P_utg000004c: rotating by 38,911 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,524 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 12:33:29)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   B_Utg1060 vs C_Utg1136...    99.955% overall identity, 99.3% worst-1kbp identity
   B_Utg1060 vs F_contig_4...   99.957% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs G_contig_2...   99.968% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs I_contig_3...   99.962% overall identity, 99.5% worst-1kbp identity
   B_Utg1060 vs J_contig_6...   99.960% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs K_contig_1...   99.959% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs L_utg000003c... 99.964% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs M_utg000003c... 99.964% overall identity, 99.5% worst-1kbp identity
   B_Utg1060 vs N_utg000004c... 99.964% overall identity, 99.5% worst-1kbp identity
   B_Utg1060 vs O_utg000005c... 99.964% overall identity, 99.5% worst-1kbp identity
   B_Utg1060 vs P_utg000004c... 99.960% overall identity, 99.4% worst-1kbp identity
   C_Utg1136 vs F_contig_4...   99.953% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs G_contig_2...   99.960% overall identity, 99.1% worst-1kbp identity
   C_Utg1136 vs I_contig_3...   99.955% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs J_contig_6...   99.953% overall identity, 98.9% worst-1kbp identity
   C_Utg1136 vs K_contig_1...   99.951% overall identity, 98.9% worst-1kbp identity
   C_Utg1136 vs L_utg000003c... 99.960% overall identity, 99.1% worst-1kbp identity
   C_Utg1136 vs M_utg000003c... 99.960% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs N_utg000004c... 99.953% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs O_utg000005c... 99.960% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs P_utg000004c... 99.953% overall identity, 98.7% worst-1kbp identity
  F_contig_4 vs G_contig_2...   99.986% overall identity, 99.7% worst-1kbp identity
  F_contig_4 vs I_contig_3...   99.991% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs J_contig_6...   99.989% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs K_contig_1...   99.987% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs L_utg000003c... 99.989% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs M_utg000003c... 99.989% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs N_utg000004c... 99.986% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs O_utg000005c... 99.986% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs P_utg000004c... 99.986% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs I_contig_3...   99.987% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs J_contig_6...   99.989% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs K_contig_1...   99.991% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs L_utg000003c... 99.989% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs M_utg000003c... 99.986% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs N_utg000004c... 99.982% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs O_utg000005c... 99.986% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs P_utg000004c... 99.989% overall identity, 99.6% worst-1kbp identity
  I_contig_3 vs J_contig_6...   99.995% overall identity, 99.9% worst-1kbp identity
  I_contig_3 vs K_contig_1...   99.993% overall identity, 99.9% worst-1kbp identity
  I_contig_3 vs L_utg000003c... 99.991% overall identity, 99.8% worst-1kbp identity
  I_contig_3 vs M_utg000003c... 99.995% overall identity, 99.9% worst-1kbp identity
  I_contig_3 vs N_utg000004c... 99.991% overall identity, 99.9% worst-1kbp identity
  I_contig_3 vs O_utg000005c... 99.991% overall identity, 99.8% worst-1kbp identity
  I_contig_3 vs P_utg000004c... 99.987% overall identity, 99.7% worst-1kbp identity
  J_contig_6 vs K_contig_1...   99.995% overall identity, 99.9% worst-1kbp identity
  J_contig_6 vs L_utg000003c... 99.989% overall identity, 99.8% worst-1kbp identity
  J_contig_6 vs M_utg000003c... 99.989% overall identity, 99.9% worst-1kbp identity
  J_contig_6 vs N_utg000004c... 99.986% overall identity, 99.9% worst-1kbp identity
  J_contig_6 vs O_utg000005c... 99.986% overall identity, 99.7% worst-1kbp identity
  J_contig_6 vs P_utg000004c... 99.989% overall identity, 99.8% worst-1kbp identity
  K_contig_1 vs L_utg000003c... 99.987% overall identity, 99.8% worst-1kbp identity
  K_contig_1 vs M_utg000003c... 99.987% overall identity, 99.9% worst-1kbp identity
  K_contig_1 vs N_utg000004c... 99.984% overall identity, 99.9% worst-1kbp identity
  K_contig_1 vs O_utg000005c... 99.984% overall identity, 99.7% worst-1kbp identity
  K_contig_1 vs P_utg000004c... 99.991% overall identity, 99.8% worst-1kbp identity
L_utg000003c vs M_utg000003c... 99.993% overall identity, 99.9% worst-1kbp identity
L_utg000003c vs N_utg000004c... 99.989% overall identity, 99.9% worst-1kbp identity
L_utg000003c vs O_utg000005c... 99.993% overall identity, 99.9% worst-1kbp identity
L_utg000003c vs P_utg000004c... 99.989% overall identity, 99.6% worst-1kbp identity
M_utg000003c vs N_utg000004c... 99.993% overall identity, 99.9% worst-1kbp identity
M_utg000003c vs O_utg000005c... 99.996% overall identity, 99.8% worst-1kbp identity
M_utg000003c vs P_utg000004c... 99.989% overall identity, 99.7% worst-1kbp identity
N_utg000004c vs O_utg000005c... 99.989% overall identity, 99.8% worst-1kbp identity
N_utg000004c vs P_utg000004c... 99.986% overall identity, 99.7% worst-1kbp identity
O_utg000005c vs P_utg000004c... 99.989% overall identity, 99.7% worst-1kbp identity

Overall pairwise identities:
  B_Utg1060:    [2m100.000%[0m   99.955%   99.957%   99.968%   99.962%   99.960%   99.959%   99.964%   99.964%   99.964%   99.964%   99.960%
  C_Utg1136:     99.955%  [2m100.000%[0m   99.953%   99.960%   99.955%   99.953%   99.951%   99.960%   99.960%   99.953%   99.960%   99.953%
  F_contig_4:    99.957%   99.953%  [2m100.000%[0m   99.986%   99.991%   99.989%   99.987%   99.989%   99.989%   99.986%   99.986%   99.986%
  G_contig_2:    99.968%   99.960%   99.986%  [2m100.000%[0m   99.987%   99.989%   99.991%   99.989%   99.986%   99.982%   99.986%   99.989%
  I_contig_3:    99.962%   99.955%   99.991%   99.987%  [2m100.000%[0m   99.995%   99.993%   99.991%   99.995%   99.991%   99.991%   99.987%
  J_contig_6:    99.960%   99.953%   99.989%   99.989%   99.995%  [2m100.000%[0m   99.995%   99.989%   99.989%   99.986%   99.986%   99.989%
  K_contig_1:    99.959%   99.951%   99.987%   99.991%   99.993%   99.995%  [2m100.000%[0m   99.987%   99.987%   99.984%   99.984%   99.991%
  L_utg000003c:  99.964%   99.960%   99.989%   99.989%   99.991%   99.989%   99.987%  [2m100.000%[0m   99.993%   99.989%   99.993%   99.989%
  M_utg000003c:  99.964%   99.960%   99.989%   99.986%   99.995%   99.989%   99.987%   99.993%  [2m100.000%[0m   99.993%   99.996%   99.989%
  N_utg000004c:  99.964%   99.953%   99.986%   99.982%   99.991%   99.986%   99.984%   99.989%   99.993%  [2m100.000%[0m   99.989%   99.986%
  O_utg000005c:  99.964%   99.960%   99.986%   99.986%   99.991%   99.986%   99.984%   99.993%   99.996%   99.989%  [2m100.000%[0m   99.989%
  P_utg000004c:  99.960%   99.953%   99.986%   99.989%   99.987%   99.989%   99.991%   99.989%   99.989%   99.986%   99.989%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  B_Utg1060:    [2m100.0%[0m   99.3%   99.4%   99.4%   99.5%   99.4%   99.4%   99.4%   99.5%   99.5%   99.5%   99.4%
  C_Utg1136:     99.3%  [2m100.0%[0m   99.0%   99.1%   99.0%   98.9%   98.9%   99.1%   99.0%   99.0%   99.0%   98.7%
  F_contig_4:    99.4%   99.0%  [2m100.0%[0m   99.7%   99.8%   99.8%   99.8%   99.8%   99.8%   99.8%   99.8%   99.7%
  G_contig_2:    99.4%   99.1%   99.7%  [2m100.0%[0m   99.7%   99.8%   99.8%   99.8%   99.7%   99.7%   99.7%   99.6%
  I_contig_3:    99.5%   99.0%   99.8%   99.7%  [2m100.0%[0m   99.9%   99.9%   99.8%   99.9%   99.9%   99.8%   99.7%
  J_contig_6:    99.4%   98.9%   99.8%   99.8%   99.9%  [2m100.0%[0m   99.9%   99.8%   99.9%   99.9%   99.7%   99.8%
  K_contig_1:    99.4%   98.9%   99.8%   99.8%   99.9%   99.9%  [2m100.0%[0m   99.8%   99.9%   99.9%   99.7%   99.8%
  L_utg000003c:  99.4%   99.1%   99.8%   99.8%   99.8%   99.8%   99.8%  [2m100.0%[0m   99.9%   99.9%   99.9%   99.6%
  M_utg000003c:  99.5%   99.0%   99.8%   99.7%   99.9%   99.9%   99.9%   99.9%  [2m100.0%[0m   99.9%   99.8%   99.7%
  N_utg000004c:  99.5%   99.0%   99.8%   99.7%   99.9%   99.9%   99.9%   99.9%   99.9%  [2m100.0%[0m   99.8%   99.7%
  O_utg000005c:  99.5%   99.0%   99.8%   99.7%   99.8%   99.7%   99.7%   99.9%   99.8%   99.8%  [2m100.0%[0m   99.7%
  P_utg000004c:  99.4%   98.7%   99.7%   99.6%   99.7%   99.8%   99.8%   99.6%   99.7%   99.7%   99.7%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 12:33:31)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/CAAUE8/cluster_004/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 12:33:31)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_005/1_contigs/A_Utg1104.fasta (4,340 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/D_Utg1084.fasta (4,343 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/L_utg000005c.fasta (4,348 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/M_utg000005c.fasta (4,352 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/N_utg000005c.fasta (4,352 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/O_utg000004c.fasta (4,346 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/P_utg000005c.fasta (4,344 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 12:33:31)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  A_Utg1104:    [2m1.000[0m  0.999  0.998  0.997  0.997  0.999  0.999
  D_Utg1084:    1.001  [2m1.000[0m  0.999  0.998  0.998  0.999  1.000
  L_utg000005c: 1.002  1.001  [2m1.000[0m  0.999  0.999  1.000  1.001
  M_utg000005c: 1.003  1.002  1.001  [2m1.000[0m  1.000  1.001  1.002
  N_utg000005c: 1.003  1.002  1.001  1.000  [2m1.000[0m  1.001  1.002
  O_utg000004c: 1.001  1.001  1.000  0.999  0.999  [2m1.000[0m  1.000
  P_utg000005c: 1.001  1.000  0.999  0.998  0.998  1.000  [2m1.000[0m

Mash distances:
  A_Utg1104:    [2m0.000[0m  0.002  0.003  0.003  0.005  0.003  0.003
  D_Utg1084:    0.002  [2m0.000[0m  0.002  0.003  0.004  0.001  0.001
  L_utg000005c: 0.003  0.002  [2m0.000[0m  0.003  0.005  0.002  0.002
  M_utg000005c: 0.003  0.003  0.003  [2m0.000[0m  0.003  0.003  0.003
  N_utg000005c: 0.005  0.004  0.004  0.003  [2m0.000[0m  0.004  0.004
  O_utg000004c: 0.003  0.001  0.002  0.003  0.005  [2m0.000[0m  0.001
  P_utg000005c: 0.003  0.001  0.002  0.003  0.005  0.001  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 12:33:31)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  TGTTGTTCTACTCTTACCCGTCAGTCGGGCAGCCTCACTAATAGACACTC
  TGGCCATCAGTTATCATCCTGTAATCCATCCAGTCTCGAGGACAGTGTAC
  GGAAAAGATGCTCCGCATCATCGTGGAGTTTCTCACAAAGGTCGGCCTCA
  ACATCGAGGTCAAGCTCGTTAAGCTTCTCCAGCAGGAGCAGAGACTGATT
  CTGGATGAATTTAGCCATGTTCAGCGCTGTTTTCTGTTGTTTCGTCATAA

A_Utg1104:    + strand (using original sequence)
D_Utg1084:    + strand (using original sequence)
L_utg000005c: + strand (using original sequence)
M_utg000005c: - strand (using reverse complement)
N_utg000005c: - strand (using reverse complement)
O_utg000004c: + strand (using original sequence)
P_utg000005c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 12:33:31)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising A_Utg1104:
  using D_Utg1084:
    unable to circularise: A_Utg1104's start/end is the same as D_Utg1084's start/end
  using L_utg000005c:
    no adjustment needed (A_Utg1104 is already circular)
  using M_utg000005c:
    unable to circularise: A_Utg1104's end could not be found in M_utg000005c
  using N_utg000005c:
    no adjustment needed (A_Utg1104 is already circular)
  using O_utg000004c:
    no adjustment needed (A_Utg1104 is already circular)
  using P_utg000005c:
    no adjustment needed (A_Utg1104 is already circular)
  circularisation complete (4,340 bp)

Circularising D_Utg1084:
  using A_Utg1104:
    unable to circularise: D_Utg1084's start/end is the same as A_Utg1104's start/end
  using L_utg000005c:
    no adjustment needed (D_Utg1084 is already circular)
  using M_utg000005c:
    unable to circularise: D_Utg1084's end could not be found in M_utg000005c
  using N_utg000005c:
    no adjustment needed (D_Utg1084 is already circular)
  using O_utg000004c:
    no adjustment needed (D_Utg1084 is already circular)
  using P_utg000005c:
    no adjustment needed (D_Utg1084 is already circular)
  circularisation complete (4,343 bp)

Circularising L_utg000005c:
  using A_Utg1104:
    no adjustment needed (L_utg000005c is already circular)
  using D_Utg1084:
    no adjustment needed (L_utg000005c is already circular)
  using M_utg000005c:
    no adjustment needed (L_utg000005c is already circular)
  using N_utg000005c:
    no adjustment needed (L_utg000005c is already circular)
  using O_utg000004c:
    no adjustment needed (L_utg000005c is already circular)
  using P_utg000005c:
    unable to circularise: L_utg000005c's end could not be found in P_utg000005c
  circularisation complete (4,348 bp)

Circularising M_utg000005c:
  using A_Utg1104:
    unable to circularise: M_utg000005c's start could not be found in A_Utg1104
  using D_Utg1084:
    unable to circularise: M_utg000005c's start could not be found in D_Utg1084
  using L_utg000005c:
    no adjustment needed (M_utg000005c is already circular)
  using N_utg000005c:
    circularising M_utg000005c by adding 4 bp of sequence from N_utg000005c (3845-3849)
  using O_utg000004c:
    no adjustment needed (M_utg000005c is already circular)
  using P_utg000005c:
    no adjustment needed (M_utg000005c is already circular)
  choosing most common circularisation
  circularisation complete (4,352 bp)

Circularising N_utg000005c:
  using A_Utg1104:
    no adjustment needed (N_utg000005c is already circular)
  using D_Utg1084:
    no adjustment needed (N_utg000005c is already circular)
  using L_utg000005c:
    no adjustment needed (N_utg000005c is already circular)
  using M_utg000005c:
    no adjustment needed (N_utg000005c is already circular)
  using O_utg000004c:
    no adjustment needed (N_utg000005c is already circular)
  using P_utg000005c:
    no adjustment needed (N_utg000005c is already circular)
  circularisation complete (4,352 bp)

Circularising O_utg000004c:
  using A_Utg1104:
    no adjustment needed (O_utg000004c is already circular)
  using D_Utg1084:
    no adjustment needed (O_utg000004c is already circular)
  using L_utg000005c:
    no adjustment needed (O_utg000004c is already circular)
  using M_utg000005c:
    no adjustment needed (O_utg000004c is already circular)
  using N_utg000005c:
    no adjustment needed (O_utg000004c is already circular)
  using P_utg000005c:
    no adjustment needed (O_utg000004c is already circular)
  circularisation complete (4,346 bp)

Circularising P_utg000005c:
  using A_Utg1104:
    no adjustment needed (P_utg000005c is already circular)
  using D_Utg1084:
    no adjustment needed (P_utg000005c is already circular)
  using L_utg000005c:
    unable to circularise: P_utg000005c's start could not be found in L_utg000005c
  using M_utg000005c:
    no adjustment needed (P_utg000005c is already circular)
  using N_utg000005c:
    no adjustment needed (P_utg000005c is already circular)
  using O_utg000004c:
    no adjustment needed (P_utg000005c is already circular)
  circularisation complete (4,344 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 12:33:32)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 1967_SEEH1578_RS25770 (replication initiation protein)
  ATGCACGACCCCCCCGTTCAGTCCGACCGCTGCGCCTTGTCCGGTAACTA...

A_Utg1104:    + strand (using original sequence)
D_Utg1084:    + strand (using original sequence)
L_utg000005c: + strand (using original sequence)
M_utg000005c: + strand (using original sequence)
N_utg000005c: + strand (using original sequence)
O_utg000004c: + strand (using original sequence)
P_utg000005c: + strand (using original sequence)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 12:33:32)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

A_Utg1104: rotating by 68 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,340 bp)

D_Utg1084: rotating by 77 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,343 bp)

L_utg000005c: rotating by 2,294 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,348 bp)

M_utg000005c: rotating by 133 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,352 bp)

N_utg000005c: rotating by 3,978 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,352 bp)

O_utg000004c: rotating by 3,270 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,346 bp)

P_utg000005c: rotating by 2,343 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,344 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 12:33:32)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   A_Utg1104 vs D_Utg1084...    99.517% overall identity, 98.3% worst-1kbp identity
   A_Utg1104 vs L_utg000005c... 99.494% overall identity, 98.2% worst-1kbp identity
   A_Utg1104 vs M_utg000005c... 99.380% overall identity, 97.9% worst-1kbp identity
   A_Utg1104 vs N_utg000005c... 98.990% overall identity, 97.9% worst-1kbp identity
   A_Utg1104 vs O_utg000004c... 99.494% overall identity, 98.4% worst-1kbp identity
   A_Utg1104 vs P_utg000005c... 99.540% overall identity, 98.5% worst-1kbp identity
   D_Utg1084 vs L_utg000005c... 99.563% overall identity, 98.1% worst-1kbp identity
   D_Utg1084 vs M_utg000005c... 99.586% overall identity, 98.5% worst-1kbp identity
   D_Utg1084 vs N_utg000005c... 99.288% overall identity, 98.8% worst-1kbp identity
   D_Utg1084 vs O_utg000004c... 99.885% overall identity, 99.7% worst-1kbp identity
   D_Utg1084 vs P_utg000005c... 99.931% overall identity, 99.8% worst-1kbp identity
L_utg000005c vs M_utg000005c... 99.449% overall identity, 98.0% worst-1kbp identity
L_utg000005c vs N_utg000005c... 99.265% overall identity, 98.8% worst-1kbp identity
L_utg000005c vs O_utg000004c... 99.540% overall identity, 98.2% worst-1kbp identity
L_utg000005c vs P_utg000005c... 99.586% overall identity, 98.3% worst-1kbp identity
M_utg000005c vs N_utg000005c... 99.312% overall identity, 98.6% worst-1kbp identity
M_utg000005c vs O_utg000004c... 99.564% overall identity, 98.3% worst-1kbp identity
M_utg000005c vs P_utg000005c... 99.609% overall identity, 98.4% worst-1kbp identity
N_utg000005c vs O_utg000004c... 99.265% overall identity, 98.6% worst-1kbp identity
N_utg000005c vs P_utg000005c... 99.311% overall identity, 98.7% worst-1kbp identity
O_utg000004c vs P_utg000005c... 99.908% overall identity, 99.7% worst-1kbp identity

Overall pairwise identities:
  A_Utg1104:    [2m100.000%[0m   99.517%   99.494%   99.380%   98.990%   99.494%   99.540%
  D_Utg1084:     99.517%  [2m100.000%[0m   99.563%   99.586%   99.288%   99.885%   99.931%
  L_utg000005c:  99.494%   99.563%  [2m100.000%[0m   99.449%   99.265%   99.540%   99.586%
  M_utg000005c:  99.380%   99.586%   99.449%  [2m100.000%[0m   99.312%   99.564%   99.609%
  N_utg000005c:  98.990%   99.288%   99.265%   99.312%  [2m100.000%[0m   99.265%   99.311%
  O_utg000004c:  99.494%   99.885%   99.540%   99.564%   99.265%  [2m100.000%[0m   99.908%
  P_utg000005c:  99.540%   99.931%   99.586%   99.609%   99.311%   99.908%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  A_Utg1104:    [2m100.0%[0m   98.3%   98.2%   97.9%   97.9%   98.4%   98.5%
  D_Utg1084:     98.3%  [2m100.0%[0m   98.1%   98.5%   98.8%   99.7%   99.8%
  L_utg000005c:  98.2%   98.1%  [2m100.0%[0m   98.0%   98.8%   98.2%   98.3%
  M_utg000005c:  97.9%   98.5%   98.0%  [2m100.0%[0m   98.6%   98.3%   98.4%
  N_utg000005c:  97.9%   98.8%   98.8%   98.6%  [2m100.0%[0m   98.6%   98.7%
  O_utg000004c:  98.4%   99.7%   98.2%   98.3%   98.6%  [2m100.0%[0m   99.7%
  P_utg000005c:  98.5%   99.8%   98.3%   98.4%   98.7%   99.7%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 12:33:32)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/CAAUE8/cluster_005/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 12:33:32)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_006/1_contigs/O_utg000006c.fasta (5,456 bp)
  results/clusters/CAAUE8/cluster_006/1_contigs/P_utg000006c.fasta (5,456 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 12:33:32)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  O_utg000006c: [2m1.000[0m  1.000
  P_utg000006c: 1.000  [2m1.000[0m

Mash distances:
  O_utg000006c: [2m0.000[0m  0.000
  P_utg000006c: 0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 12:33:32)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  ATTTCCGGAAAGATTGATTTCAACTACTTTTCCTGCTGAAAGATTGTTCA
  GATTGTAGTGTTGGTATTGCATAATGTGGTCTCTTGTATAAGGAGACTGT
  TGACCTAAATTCAAAAAATTGAGATTGTAGTCAACAGCCTGCTAGGGTTA
  AGCACTTAACTTCCCCAAGAAAGTGCATTCAAACGAAATAAAGCGGATTG
  TCGTAAGACAATCCGCTTTATTTTTCCTTCCTTACGCCCTTGAAAGGCGT

O_utg000006c: + strand (using original sequence)
P_utg000006c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 12:33:32)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising O_utg000006c:
  using P_utg000006c:
    no adjustment needed (O_utg000006c is already circular)
  circularisation complete (5,456 bp)

Circularising P_utg000006c:
  using O_utg000006c:
    no adjustment needed (P_utg000006c is already circular)
  circularisation complete (5,456 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 12:33:32)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0701_AM488_RS29905 (replication initiation protein)
  ATGCACGAACCCCCCGTTCAGTCCGACTGCTGCGCCTTATCCGGTAACTA...

O_utg000006c: - strand (using reverse complement)
P_utg000006c: - strand (using reverse complement)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 12:33:33)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

O_utg000006c: rotating by 4,542 bp
   ATGCACGAACCCCCGTTCAG...TTCGCTCCAAGCTGGACTGT (5,456 bp)

P_utg000006c: rotating by 1,432 bp
   ATGCACGAACCCCCGTTCAG...TTCGCTCCAAGCTGGACTGT (5,456 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 12:33:33)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

O_utg000006c vs P_utg000006c... 100.000% overall identity, 100.0% worst-1kbp identity

Overall pairwise identities:
  O_utg000006c: [2m100.000%[0m  100.000%
  P_utg000006c: 100.000%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  O_utg000006c: [2m100.0%[0m  100.0%
  P_utg000006c: 100.0%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 12:33:33)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/CAAUE8/cluster_006/2_all_seqs.fasta

