
[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 10:00:59)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_001/1_contigs/A_Utg1100.fasta (5,312,566 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/B_Utg1058.fasta (5,313,226 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/C_Utg1134.fasta (5,312,261 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/D_Utg1086.fasta (5,312,292 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/E_Utg1034.fasta (5,312,286 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/F_contig_6.fasta (5,312,107 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/G_contig_4.fasta (5,312,112 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/H_contig_5.fasta (5,312,105 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/I_contig_2.fasta (5,312,110 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/J_contig_5.fasta (5,312,094 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/K_contig_4.fasta (5,312,100 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/L_utg000001c.fasta (5,312,721 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/M_utg000001c.fasta (5,312,627 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/N_utg000001c.fasta (5,312,553 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/O_utg000001c.fasta (5,312,396 bp)
  results/clusters/CAAUE8/cluster_001/1_contigs/P_utg000001c.fasta (5,312,371 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 10:01:00)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  A_Utg1100:    [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  B_Utg1058:    1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  C_Utg1134:    1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  D_Utg1086:    1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  E_Utg1034:    1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  F_contig_6:   1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  G_contig_4:   1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  H_contig_5:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  I_contig_2:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  J_contig_5:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000
  K_contig_4:   1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000
  L_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000
  M_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000
  N_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000
  O_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000
  P_utg000001c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m

Mash distances:
  A_Utg1100:    [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  B_Utg1058:    0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  C_Utg1134:    0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  D_Utg1086:    0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  E_Utg1034:    0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  F_contig_6:   0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_4:   0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  H_contig_5:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  I_contig_2:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  J_contig_5:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  K_contig_4:   0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  L_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  M_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  N_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  O_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000001c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 10:01:13)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  TCCCCGAGGTACTGCGGGCTGTTGGGATCCAGCGCTTCCGTCGCCAGCGG
  CAGTCCCATATTGACGAGCTCGACCAGCAGACGACGCGCAATCTTCAGGC
  CGCCTTCAACATCAAACGAACCATCCATGTGCGGATCGTTAATCAGCCCC
  TTCCATCCGACGGTGGTACGGGGTTTTTCAAAATAGACGCGCATCACCAG
  GTAGAGGCTATCGCTGACCTCTGCGGCAAGGGCTTTAAACCGACGAGCAT

A_Utg1100:    - strand (using reverse complement)
B_Utg1058:    - strand (using reverse complement)
C_Utg1134:    - strand (using reverse complement)
D_Utg1086:    + strand (using original sequence)
E_Utg1034:    + strand (using original sequence)
F_contig_6:   + strand (using original sequence)
G_contig_4:   - strand (using reverse complement)
H_contig_5:   - strand (using reverse complement)
I_contig_2:   + strand (using original sequence)
J_contig_5:   - strand (using reverse complement)
K_contig_4:   + strand (using original sequence)
L_utg000001c: + strand (using original sequence)
M_utg000001c: + strand (using original sequence)
N_utg000001c: + strand (using original sequence)
O_utg000001c: + strand (using original sequence)
P_utg000001c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 10:01:26)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising A_Utg1100:
  using B_Utg1058:
    unable to circularise: A_Utg1100's start could not be found in B_Utg1058
  using C_Utg1134:
    unable to circularise: A_Utg1100's start could not be found in C_Utg1134
  using D_Utg1086:
    no adjustment needed (A_Utg1100 is already circular)
  using E_Utg1034:
    no adjustment needed (A_Utg1100 is already circular)
  using F_contig_6:
    no adjustment needed (A_Utg1100 is already circular)
  using G_contig_4:
    no adjustment needed (A_Utg1100 is already circular)
  using H_contig_5:
    no adjustment needed (A_Utg1100 is already circular)
  using I_contig_2:
    no adjustment needed (A_Utg1100 is already circular)
  using J_contig_5:
    no adjustment needed (A_Utg1100 is already circular)
  using K_contig_4:
    no adjustment needed (A_Utg1100 is already circular)
  using L_utg000001c:
    no adjustment needed (A_Utg1100 is already circular)
  using M_utg000001c:
    no adjustment needed (A_Utg1100 is already circular)
  using N_utg000001c:
    no adjustment needed (A_Utg1100 is already circular)
  using O_utg000001c:
    no adjustment needed (A_Utg1100 is already circular)
  using P_utg000001c:
    no adjustment needed (A_Utg1100 is already circular)
  circularisation complete (5,312,566 bp)

Circularising B_Utg1058:
  using A_Utg1100:
    unable to circularise: B_Utg1058's end could not be found in A_Utg1100
  using C_Utg1134:
    unable to circularise: B_Utg1058's start/end is the same as C_Utg1134's start/end
  using D_Utg1086:
    no adjustment needed (B_Utg1058 is already circular)
  using E_Utg1034:
    no adjustment needed (B_Utg1058 is already circular)
  using F_contig_6:
    no adjustment needed (B_Utg1058 is already circular)
  using G_contig_4:
    no adjustment needed (B_Utg1058 is already circular)
  using H_contig_5:
    no adjustment needed (B_Utg1058 is already circular)
  using I_contig_2:
    no adjustment needed (B_Utg1058 is already circular)
  using J_contig_5:
    no adjustment needed (B_Utg1058 is already circular)
  using K_contig_4:
    no adjustment needed (B_Utg1058 is already circular)
  using L_utg000001c:
    no adjustment needed (B_Utg1058 is already circular)
  using M_utg000001c:
    no adjustment needed (B_Utg1058 is already circular)
  using N_utg000001c:
    no adjustment needed (B_Utg1058 is already circular)
  using O_utg000001c:
    no adjustment needed (B_Utg1058 is already circular)
  using P_utg000001c:
    no adjustment needed (B_Utg1058 is already circular)
  circularisation complete (5,313,226 bp)

Circularising C_Utg1134:
  using A_Utg1100:
    unable to circularise: C_Utg1134's end could not be found in A_Utg1100
  using B_Utg1058:
    unable to circularise: C_Utg1134's start/end is the same as B_Utg1058's start/end
  using D_Utg1086:
    no adjustment needed (C_Utg1134 is already circular)
  using E_Utg1034:
    no adjustment needed (C_Utg1134 is already circular)
  using F_contig_6:
    no adjustment needed (C_Utg1134 is already circular)
  using G_contig_4:
    no adjustment needed (C_Utg1134 is already circular)
  using H_contig_5:
    no adjustment needed (C_Utg1134 is already circular)
  using I_contig_2:
    no adjustment needed (C_Utg1134 is already circular)
  using J_contig_5:
    no adjustment needed (C_Utg1134 is already circular)
  using K_contig_4:
    no adjustment needed (C_Utg1134 is already circular)
  using L_utg000001c:
    no adjustment needed (C_Utg1134 is already circular)
  using M_utg000001c:
    no adjustment needed (C_Utg1134 is already circular)
  using N_utg000001c:
    no adjustment needed (C_Utg1134 is already circular)
  using O_utg000001c:
    no adjustment needed (C_Utg1134 is already circular)
  using P_utg000001c:
    no adjustment needed (C_Utg1134 is already circular)
  circularisation complete (5,312,261 bp)

Circularising D_Utg1086:
  using A_Utg1100:
    no adjustment needed (D_Utg1086 is already circular)
  using B_Utg1058:
    no adjustment needed (D_Utg1086 is already circular)
  using C_Utg1134:
    no adjustment needed (D_Utg1086 is already circular)
  using E_Utg1034:
    unable to circularise: D_Utg1086's start/end is the same as E_Utg1034's start/end
  using F_contig_6:
    no adjustment needed (D_Utg1086 is already circular)
  using G_contig_4:
    no adjustment needed (D_Utg1086 is already circular)
  using H_contig_5:
    no adjustment needed (D_Utg1086 is already circular)
  using I_contig_2:
    no adjustment needed (D_Utg1086 is already circular)
  using J_contig_5:
    no adjustment needed (D_Utg1086 is already circular)
  using K_contig_4:
    no adjustment needed (D_Utg1086 is already circular)
  using L_utg000001c:
    no adjustment needed (D_Utg1086 is already circular)
  using M_utg000001c:
    no adjustment needed (D_Utg1086 is already circular)
  using N_utg000001c:
    no adjustment needed (D_Utg1086 is already circular)
  using O_utg000001c:
    no adjustment needed (D_Utg1086 is already circular)
  using P_utg000001c:
    no adjustment needed (D_Utg1086 is already circular)
  circularisation complete (5,312,292 bp)

Circularising E_Utg1034:
  using A_Utg1100:
    no adjustment needed (E_Utg1034 is already circular)
  using B_Utg1058:
    no adjustment needed (E_Utg1034 is already circular)
  using C_Utg1134:
    no adjustment needed (E_Utg1034 is already circular)
  using D_Utg1086:
    unable to circularise: E_Utg1034's start/end is the same as D_Utg1086's start/end
  using F_contig_6:
    no adjustment needed (E_Utg1034 is already circular)
  using G_contig_4:
    no adjustment needed (E_Utg1034 is already circular)
  using H_contig_5:
    no adjustment needed (E_Utg1034 is already circular)
  using I_contig_2:
    no adjustment needed (E_Utg1034 is already circular)
  using J_contig_5:
    no adjustment needed (E_Utg1034 is already circular)
  using K_contig_4:
    no adjustment needed (E_Utg1034 is already circular)
  using L_utg000001c:
    no adjustment needed (E_Utg1034 is already circular)
  using M_utg000001c:
    no adjustment needed (E_Utg1034 is already circular)
  using N_utg000001c:
    no adjustment needed (E_Utg1034 is already circular)
  using O_utg000001c:
    no adjustment needed (E_Utg1034 is already circular)
  using P_utg000001c:
    no adjustment needed (E_Utg1034 is already circular)
  circularisation complete (5,312,286 bp)

Circularising F_contig_6:
  using A_Utg1100:
    no adjustment needed (F_contig_6 is already circular)
  using B_Utg1058:
    no adjustment needed (F_contig_6 is already circular)
  using C_Utg1134:
    no adjustment needed (F_contig_6 is already circular)
  using D_Utg1086:
    no adjustment needed (F_contig_6 is already circular)
  using E_Utg1034:
    no adjustment needed (F_contig_6 is already circular)
  using G_contig_4:
    no adjustment needed (F_contig_6 is already circular)
  using H_contig_5:
    no adjustment needed (F_contig_6 is already circular)
  using I_contig_2:
    no adjustment needed (F_contig_6 is already circular)
  using J_contig_5:
    no adjustment needed (F_contig_6 is already circular)
  using K_contig_4:
    no adjustment needed (F_contig_6 is already circular)
  using L_utg000001c:
    no adjustment needed (F_contig_6 is already circular)
  using M_utg000001c:
    no adjustment needed (F_contig_6 is already circular)
  using N_utg000001c:
    no adjustment needed (F_contig_6 is already circular)
  using O_utg000001c:
    no adjustment needed (F_contig_6 is already circular)
  using P_utg000001c:
    no adjustment needed (F_contig_6 is already circular)
  circularisation complete (5,312,107 bp)

Circularising G_contig_4:
  using A_Utg1100:
    no adjustment needed (G_contig_4 is already circular)
  using B_Utg1058:
    no adjustment needed (G_contig_4 is already circular)
  using C_Utg1134:
    no adjustment needed (G_contig_4 is already circular)
  using D_Utg1086:
    no adjustment needed (G_contig_4 is already circular)
  using E_Utg1034:
    no adjustment needed (G_contig_4 is already circular)
  using F_contig_6:
    no adjustment needed (G_contig_4 is already circular)
  using H_contig_5:
    no adjustment needed (G_contig_4 is already circular)
  using I_contig_2:
    no adjustment needed (G_contig_4 is already circular)
  using J_contig_5:
    no adjustment needed (G_contig_4 is already circular)
  using K_contig_4:
    no adjustment needed (G_contig_4 is already circular)
  using L_utg000001c:
    no adjustment needed (G_contig_4 is already circular)
  using M_utg000001c:
    no adjustment needed (G_contig_4 is already circular)
  using N_utg000001c:
    no adjustment needed (G_contig_4 is already circular)
  using O_utg000001c:
    no adjustment needed (G_contig_4 is already circular)
  using P_utg000001c:
    no adjustment needed (G_contig_4 is already circular)
  circularisation complete (5,312,112 bp)

Circularising H_contig_5:
  using A_Utg1100:
    no adjustment needed (H_contig_5 is already circular)
  using B_Utg1058:
    no adjustment needed (H_contig_5 is already circular)
  using C_Utg1134:
    no adjustment needed (H_contig_5 is already circular)
  using D_Utg1086:
    no adjustment needed (H_contig_5 is already circular)
  using E_Utg1034:
    no adjustment needed (H_contig_5 is already circular)
  using F_contig_6:
    no adjustment needed (H_contig_5 is already circular)
  using G_contig_4:
    no adjustment needed (H_contig_5 is already circular)
  using I_contig_2:
    no adjustment needed (H_contig_5 is already circular)
  using J_contig_5:
    no adjustment needed (H_contig_5 is already circular)
  using K_contig_4:
    no adjustment needed (H_contig_5 is already circular)
  using L_utg000001c:
    no adjustment needed (H_contig_5 is already circular)
  using M_utg000001c:
    no adjustment needed (H_contig_5 is already circular)
  using N_utg000001c:
    no adjustment needed (H_contig_5 is already circular)
  using O_utg000001c:
    no adjustment needed (H_contig_5 is already circular)
  using P_utg000001c:
    no adjustment needed (H_contig_5 is already circular)
  circularisation complete (5,312,105 bp)

Circularising I_contig_2:
  using A_Utg1100:
    no adjustment needed (I_contig_2 is already circular)
  using B_Utg1058:
    no adjustment needed (I_contig_2 is already circular)
  using C_Utg1134:
    no adjustment needed (I_contig_2 is already circular)
  using D_Utg1086:
    no adjustment needed (I_contig_2 is already circular)
  using E_Utg1034:
    no adjustment needed (I_contig_2 is already circular)
  using F_contig_6:
    no adjustment needed (I_contig_2 is already circular)
  using G_contig_4:
    no adjustment needed (I_contig_2 is already circular)
  using H_contig_5:
    no adjustment needed (I_contig_2 is already circular)
  using J_contig_5:
    no adjustment needed (I_contig_2 is already circular)
  using K_contig_4:
    no adjustment needed (I_contig_2 is already circular)
  using L_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  using M_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  using N_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  using O_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  using P_utg000001c:
    no adjustment needed (I_contig_2 is already circular)
  circularisation complete (5,312,110 bp)

Circularising J_contig_5:
  using A_Utg1100:
    no adjustment needed (J_contig_5 is already circular)
  using B_Utg1058:
    no adjustment needed (J_contig_5 is already circular)
  using C_Utg1134:
    no adjustment needed (J_contig_5 is already circular)
  using D_Utg1086:
    no adjustment needed (J_contig_5 is already circular)
  using E_Utg1034:
    no adjustment needed (J_contig_5 is already circular)
  using F_contig_6:
    no adjustment needed (J_contig_5 is already circular)
  using G_contig_4:
    no adjustment needed (J_contig_5 is already circular)
  using H_contig_5:
    no adjustment needed (J_contig_5 is already circular)
  using I_contig_2:
    no adjustment needed (J_contig_5 is already circular)
  using K_contig_4:
    no adjustment needed (J_contig_5 is already circular)
  using L_utg000001c:
    no adjustment needed (J_contig_5 is already circular)
  using M_utg000001c:
    no adjustment needed (J_contig_5 is already circular)
  using N_utg000001c:
    no adjustment needed (J_contig_5 is already circular)
  using O_utg000001c:
    no adjustment needed (J_contig_5 is already circular)
  using P_utg000001c:
    no adjustment needed (J_contig_5 is already circular)
  circularisation complete (5,312,094 bp)

Circularising K_contig_4:
  using A_Utg1100:
    no adjustment needed (K_contig_4 is already circular)
  using B_Utg1058:
    no adjustment needed (K_contig_4 is already circular)
  using C_Utg1134:
    no adjustment needed (K_contig_4 is already circular)
  using D_Utg1086:
    no adjustment needed (K_contig_4 is already circular)
  using E_Utg1034:
    no adjustment needed (K_contig_4 is already circular)
  using F_contig_6:
    no adjustment needed (K_contig_4 is already circular)
  using G_contig_4:
    no adjustment needed (K_contig_4 is already circular)
  using H_contig_5:
    no adjustment needed (K_contig_4 is already circular)
  using I_contig_2:
    no adjustment needed (K_contig_4 is already circular)
  using J_contig_5:
    no adjustment needed (K_contig_4 is already circular)
  using L_utg000001c:
    no adjustment needed (K_contig_4 is already circular)
  using M_utg000001c:
    no adjustment needed (K_contig_4 is already circular)
  using N_utg000001c:
    no adjustment needed (K_contig_4 is already circular)
  using O_utg000001c:
    no adjustment needed (K_contig_4 is already circular)
  using P_utg000001c:
    no adjustment needed (K_contig_4 is already circular)
  circularisation complete (5,312,100 bp)

Circularising L_utg000001c:
  using A_Utg1100:
    no adjustment needed (L_utg000001c is already circular)
  using B_Utg1058:
    no adjustment needed (L_utg000001c is already circular)
  using C_Utg1134:
    no adjustment needed (L_utg000001c is already circular)
  using D_Utg1086:
    no adjustment needed (L_utg000001c is already circular)
  using E_Utg1034:
    no adjustment needed (L_utg000001c is already circular)
  using F_contig_6:
    no adjustment needed (L_utg000001c is already circular)
  using G_contig_4:
    no adjustment needed (L_utg000001c is already circular)
  using H_contig_5:
    no adjustment needed (L_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (L_utg000001c is already circular)
  using J_contig_5:
    no adjustment needed (L_utg000001c is already circular)
  using K_contig_4:
    no adjustment needed (L_utg000001c is already circular)
  using M_utg000001c:
    no adjustment needed (L_utg000001c is already circular)
  using N_utg000001c:
    no adjustment needed (L_utg000001c is already circular)
  using O_utg000001c:
    no adjustment needed (L_utg000001c is already circular)
  using P_utg000001c:
    no adjustment needed (L_utg000001c is already circular)
  circularisation complete (5,312,721 bp)

Circularising M_utg000001c:
  using A_Utg1100:
    no adjustment needed (M_utg000001c is already circular)
  using B_Utg1058:
    no adjustment needed (M_utg000001c is already circular)
  using C_Utg1134:
    no adjustment needed (M_utg000001c is already circular)
  using D_Utg1086:
    no adjustment needed (M_utg000001c is already circular)
  using E_Utg1034:
    no adjustment needed (M_utg000001c is already circular)
  using F_contig_6:
    no adjustment needed (M_utg000001c is already circular)
  using G_contig_4:
    no adjustment needed (M_utg000001c is already circular)
  using H_contig_5:
    no adjustment needed (M_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (M_utg000001c is already circular)
  using J_contig_5:
    no adjustment needed (M_utg000001c is already circular)
  using K_contig_4:
    no adjustment needed (M_utg000001c is already circular)
  using L_utg000001c:
    no adjustment needed (M_utg000001c is already circular)
  using N_utg000001c:
    no adjustment needed (M_utg000001c is already circular)
  using O_utg000001c:
    no adjustment needed (M_utg000001c is already circular)
  using P_utg000001c:
    no adjustment needed (M_utg000001c is already circular)
  circularisation complete (5,312,627 bp)

Circularising N_utg000001c:
  using A_Utg1100:
    no adjustment needed (N_utg000001c is already circular)
  using B_Utg1058:
    no adjustment needed (N_utg000001c is already circular)
  using C_Utg1134:
    no adjustment needed (N_utg000001c is already circular)
  using D_Utg1086:
    no adjustment needed (N_utg000001c is already circular)
  using E_Utg1034:
    no adjustment needed (N_utg000001c is already circular)
  using F_contig_6:
    no adjustment needed (N_utg000001c is already circular)
  using G_contig_4:
    no adjustment needed (N_utg000001c is already circular)
  using H_contig_5:
    no adjustment needed (N_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (N_utg000001c is already circular)
  using J_contig_5:
    no adjustment needed (N_utg000001c is already circular)
  using K_contig_4:
    no adjustment needed (N_utg000001c is already circular)
  using L_utg000001c:
    no adjustment needed (N_utg000001c is already circular)
  using M_utg000001c:
    circularising N_utg000001c by adding 3 bp of sequence from M_utg000001c (3736555-3736558)
  using O_utg000001c:
    no adjustment needed (N_utg000001c is already circular)
  using P_utg000001c:
    no adjustment needed (N_utg000001c is already circular)
  choosing most common circularisation
  circularisation complete (5,312,553 bp)

Circularising O_utg000001c:
  using A_Utg1100:
    no adjustment needed (O_utg000001c is already circular)
  using B_Utg1058:
    no adjustment needed (O_utg000001c is already circular)
  using C_Utg1134:
    no adjustment needed (O_utg000001c is already circular)
  using D_Utg1086:
    no adjustment needed (O_utg000001c is already circular)
  using E_Utg1034:
    no adjustment needed (O_utg000001c is already circular)
  using F_contig_6:
    no adjustment needed (O_utg000001c is already circular)
  using G_contig_4:
    no adjustment needed (O_utg000001c is already circular)
  using H_contig_5:
    no adjustment needed (O_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (O_utg000001c is already circular)
  using J_contig_5:
    no adjustment needed (O_utg000001c is already circular)
  using K_contig_4:
    no adjustment needed (O_utg000001c is already circular)
  using L_utg000001c:
    no adjustment needed (O_utg000001c is already circular)
  using M_utg000001c:
    no adjustment needed (O_utg000001c is already circular)
  using N_utg000001c:
    no adjustment needed (O_utg000001c is already circular)
  using P_utg000001c:
    unable to circularise: O_utg000001c's start could not be found in P_utg000001c
  circularisation complete (5,312,396 bp)

Circularising P_utg000001c:
  using A_Utg1100:
    no adjustment needed (P_utg000001c is already circular)
  using B_Utg1058:
    no adjustment needed (P_utg000001c is already circular)
  using C_Utg1134:
    no adjustment needed (P_utg000001c is already circular)
  using D_Utg1086:
    no adjustment needed (P_utg000001c is already circular)
  using E_Utg1034:
    no adjustment needed (P_utg000001c is already circular)
  using F_contig_6:
    no adjustment needed (P_utg000001c is already circular)
  using G_contig_4:
    no adjustment needed (P_utg000001c is already circular)
  using H_contig_5:
    no adjustment needed (P_utg000001c is already circular)
  using I_contig_2:
    no adjustment needed (P_utg000001c is already circular)
  using J_contig_5:
    no adjustment needed (P_utg000001c is already circular)
  using K_contig_4:
    no adjustment needed (P_utg000001c is already circular)
  using L_utg000001c:
    no adjustment needed (P_utg000001c is already circular)
  using M_utg000001c:
    no adjustment needed (P_utg000001c is already circular)
  using N_utg000001c:
    no adjustment needed (P_utg000001c is already circular)
  using O_utg000001c:
    unable to circularise: P_utg000001c's end could not be found in O_utg000001c
  circularisation complete (5,312,371 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 10:03:46)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0003_A4U70_RS00005 (chromosomal replication initiator protein DnaA)
  GTGTCACTTTCGCTTTGGCAGCAGTGTCTTGCCCGATTGCAGGATGAGTT...

A_Utg1100:    - strand (using reverse complement)
B_Utg1058:    - strand (using reverse complement)
C_Utg1134:    - strand (using reverse complement)
D_Utg1086:    - strand (using reverse complement)
E_Utg1034:    - strand (using reverse complement)
F_contig_6:   - strand (using reverse complement)
G_contig_4:   - strand (using reverse complement)
H_contig_5:   - strand (using reverse complement)
I_contig_2:   - strand (using reverse complement)
J_contig_5:   - strand (using reverse complement)
K_contig_4:   - strand (using reverse complement)
L_utg000001c: - strand (using reverse complement)
M_utg000001c: - strand (using reverse complement)
N_utg000001c: - strand (using reverse complement)
O_utg000001c: - strand (using reverse complement)
P_utg000001c: - strand (using reverse complement)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 10:04:05)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

A_Utg1100: rotating by 2,279,394 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,566 bp)

B_Utg1058: rotating by 2,279,332 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,313,226 bp)

C_Utg1134: rotating by 2,279,317 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,261 bp)

D_Utg1086: rotating by 1,972,854 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,292 bp)

E_Utg1034: rotating by 1,973,059 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,286 bp)

F_contig_6: rotating by 2,415,359 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,107 bp)

G_contig_4: rotating by 631,342 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,112 bp)

H_contig_5: rotating by 745,390 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,105 bp)

I_contig_2: rotating by 3,817,395 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,110 bp)

J_contig_5: rotating by 1,040,836 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,094 bp)

K_contig_4: rotating by 2,104,908 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,100 bp)

L_utg000001c: rotating by 2,879,230 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,721 bp)

M_utg000001c: rotating by 1,085,127 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,627 bp)

N_utg000001c: rotating by 4,821,610 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,553 bp)

O_utg000001c: rotating by 4,142,345 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,396 bp)

P_utg000001c: rotating by 4,142,701 bp
   GTGTCACTTTCGCTTTGGCA...ATGTTCGAGTGGAGTCCGCC (5,312,371 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 10:04:10)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   A_Utg1100 vs B_Utg1058...    99.940% overall identity, 9.9% worst-1kbp identity
   A_Utg1100 vs C_Utg1134...    99.960% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs D_Utg1086...    99.954% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs E_Utg1034...    99.960% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs F_contig_6...   99.969% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs G_contig_4...   99.970% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs H_contig_5...   99.969% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs I_contig_2...   99.968% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs J_contig_5...   99.968% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs K_contig_4...   99.968% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs L_utg000001c... 99.975% overall identity, 90.1% worst-1kbp identity
   A_Utg1100 vs M_utg000001c... 99.976% overall identity, 90.1% worst-1kbp identity
   A_Utg1100 vs N_utg000001c... 99.960% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs O_utg000001c... 99.964% overall identity, 56.0% worst-1kbp identity
   A_Utg1100 vs P_utg000001c... 99.965% overall identity, 56.0% worst-1kbp identity
   B_Utg1058 vs C_Utg1134...    99.948% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs D_Utg1086...    99.939% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs E_Utg1034...    99.942% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs F_contig_6...   99.953% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs G_contig_4...   99.953% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs H_contig_5...   99.954% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs I_contig_2...   99.953% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs J_contig_5...   99.953% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs K_contig_4...   99.953% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs L_utg000001c... 99.944% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs M_utg000001c... 99.945% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs N_utg000001c... 99.945% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs O_utg000001c... 99.948% overall identity, 9.4% worst-1kbp identity
   B_Utg1058 vs P_utg000001c... 99.949% overall identity, 9.4% worst-1kbp identity
   C_Utg1134 vs D_Utg1086...    99.965% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs E_Utg1034...    99.965% overall identity, 81.0% worst-1kbp identity
   C_Utg1134 vs F_contig_6...   99.976% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs G_contig_4...   99.977% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs H_contig_5...   99.977% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs I_contig_2...   99.978% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs J_contig_5...   99.976% overall identity, 82.3% worst-1kbp identity
   C_Utg1134 vs K_contig_4...   99.976% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs L_utg000001c... 99.966% overall identity, 56.0% worst-1kbp identity
   C_Utg1134 vs M_utg000001c... 99.969% overall identity, 56.0% worst-1kbp identity
   C_Utg1134 vs N_utg000001c... 99.970% overall identity, 62.6% worst-1kbp identity
   C_Utg1134 vs O_utg000001c... 99.972% overall identity, 82.4% worst-1kbp identity
   C_Utg1134 vs P_utg000001c... 99.972% overall identity, 82.4% worst-1kbp identity
   D_Utg1086 vs E_Utg1034...    99.965% overall identity, 81.0% worst-1kbp identity
   D_Utg1086 vs F_contig_6...   99.973% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs G_contig_4...   99.973% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs H_contig_5...   99.973% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs I_contig_2...   99.975% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs J_contig_5...   99.974% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs K_contig_4...   99.974% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs L_utg000001c... 99.962% overall identity, 56.0% worst-1kbp identity
   D_Utg1086 vs M_utg000001c... 99.965% overall identity, 56.0% worst-1kbp identity
   D_Utg1086 vs N_utg000001c... 99.967% overall identity, 62.7% worst-1kbp identity
   D_Utg1086 vs O_utg000001c... 99.970% overall identity, 86.2% worst-1kbp identity
   D_Utg1086 vs P_utg000001c... 99.969% overall identity, 84.4% worst-1kbp identity
   E_Utg1034 vs F_contig_6...   99.977% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs G_contig_4...   99.977% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs H_contig_5...   99.976% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs I_contig_2...   99.977% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs J_contig_5...   99.977% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs K_contig_4...   99.978% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs L_utg000001c... 99.965% overall identity, 56.0% worst-1kbp identity
   E_Utg1034 vs M_utg000001c... 99.967% overall identity, 56.0% worst-1kbp identity
   E_Utg1034 vs N_utg000001c... 99.968% overall identity, 62.7% worst-1kbp identity
   E_Utg1034 vs O_utg000001c... 99.972% overall identity, 81.0% worst-1kbp identity
   E_Utg1034 vs P_utg000001c... 99.974% overall identity, 81.0% worst-1kbp identity
  F_contig_6 vs G_contig_4...   99.997% overall identity, 99.8% worst-1kbp identity
  F_contig_6 vs H_contig_5...   99.993% overall identity, 99.7% worst-1kbp identity
  F_contig_6 vs I_contig_2...   99.993% overall identity, 99.7% worst-1kbp identity
  F_contig_6 vs J_contig_5...   99.994% overall identity, 99.6% worst-1kbp identity
  F_contig_6 vs K_contig_4...   99.995% overall identity, 99.7% worst-1kbp identity
  F_contig_6 vs L_utg000001c... 99.980% overall identity, 56.0% worst-1kbp identity
  F_contig_6 vs M_utg000001c... 99.981% overall identity, 56.0% worst-1kbp identity
  F_contig_6 vs N_utg000001c... 99.982% overall identity, 62.6% worst-1kbp identity
  F_contig_6 vs O_utg000001c... 99.986% overall identity, 86.2% worst-1kbp identity
  F_contig_6 vs P_utg000001c... 99.987% overall identity, 84.4% worst-1kbp identity
  G_contig_4 vs H_contig_5...   99.994% overall identity, 99.7% worst-1kbp identity
  G_contig_4 vs I_contig_2...   99.993% overall identity, 99.7% worst-1kbp identity
  G_contig_4 vs J_contig_5...   99.993% overall identity, 99.6% worst-1kbp identity
  G_contig_4 vs K_contig_4...   99.994% overall identity, 99.7% worst-1kbp identity
  G_contig_4 vs L_utg000001c... 99.980% overall identity, 56.0% worst-1kbp identity
  G_contig_4 vs M_utg000001c... 99.981% overall identity, 56.0% worst-1kbp identity
  G_contig_4 vs N_utg000001c... 99.982% overall identity, 62.6% worst-1kbp identity
  G_contig_4 vs O_utg000001c... 99.985% overall identity, 86.2% worst-1kbp identity
  G_contig_4 vs P_utg000001c... 99.987% overall identity, 84.4% worst-1kbp identity
  H_contig_5 vs I_contig_2...   99.994% overall identity, 99.7% worst-1kbp identity
  H_contig_5 vs J_contig_5...   99.992% overall identity, 99.6% worst-1kbp identity
  H_contig_5 vs K_contig_4...   99.992% overall identity, 99.7% worst-1kbp identity
  H_contig_5 vs L_utg000001c... 99.980% overall identity, 56.0% worst-1kbp identity
  H_contig_5 vs M_utg000001c... 99.981% overall identity, 56.0% worst-1kbp identity
  H_contig_5 vs N_utg000001c... 99.982% overall identity, 62.7% worst-1kbp identity
  H_contig_5 vs O_utg000001c... 99.985% overall identity, 86.2% worst-1kbp identity
  H_contig_5 vs P_utg000001c... 99.985% overall identity, 84.4% worst-1kbp identity
  I_contig_2 vs J_contig_5...   99.995% overall identity, 99.7% worst-1kbp identity
  I_contig_2 vs K_contig_4...   99.994% overall identity, 99.7% worst-1kbp identity
  I_contig_2 vs L_utg000001c... 99.979% overall identity, 56.0% worst-1kbp identity
  I_contig_2 vs M_utg000001c... 99.982% overall identity, 56.0% worst-1kbp identity
  I_contig_2 vs N_utg000001c... 99.983% overall identity, 62.7% worst-1kbp identity
  I_contig_2 vs O_utg000001c... 99.987% overall identity, 86.2% worst-1kbp identity
  I_contig_2 vs P_utg000001c... 99.986% overall identity, 84.4% worst-1kbp identity
  J_contig_5 vs K_contig_4...   99.997% overall identity, 99.8% worst-1kbp identity
  J_contig_5 vs L_utg000001c... 99.979% overall identity, 56.0% worst-1kbp identity
  J_contig_5 vs M_utg000001c... 99.981% overall identity, 56.0% worst-1kbp identity
  J_contig_5 vs N_utg000001c... 99.982% overall identity, 62.6% worst-1kbp identity
  J_contig_5 vs O_utg000001c... 99.987% overall identity, 86.2% worst-1kbp identity
  J_contig_5 vs P_utg000001c... 99.986% overall identity, 84.4% worst-1kbp identity
  K_contig_4 vs L_utg000001c... 99.979% overall identity, 56.0% worst-1kbp identity
  K_contig_4 vs M_utg000001c... 99.981% overall identity, 56.0% worst-1kbp identity
  K_contig_4 vs N_utg000001c... 99.982% overall identity, 62.6% worst-1kbp identity
  K_contig_4 vs O_utg000001c... 99.987% overall identity, 86.2% worst-1kbp identity
  K_contig_4 vs P_utg000001c... 99.987% overall identity, 84.4% worst-1kbp identity
L_utg000001c vs M_utg000001c... 99.989% overall identity, 94.1% worst-1kbp identity
L_utg000001c vs N_utg000001c... 99.972% overall identity, 56.0% worst-1kbp identity
L_utg000001c vs O_utg000001c... 99.975% overall identity, 56.0% worst-1kbp identity
L_utg000001c vs P_utg000001c... 99.977% overall identity, 56.0% worst-1kbp identity
M_utg000001c vs N_utg000001c... 99.977% overall identity, 56.0% worst-1kbp identity
M_utg000001c vs O_utg000001c... 99.978% overall identity, 56.0% worst-1kbp identity
M_utg000001c vs P_utg000001c... 99.978% overall identity, 56.0% worst-1kbp identity
N_utg000001c vs O_utg000001c... 99.980% overall identity, 62.7% worst-1kbp identity
N_utg000001c vs P_utg000001c... 99.979% overall identity, 62.7% worst-1kbp identity
O_utg000001c vs P_utg000001c... 99.983% overall identity, 84.4% worst-1kbp identity

Overall pairwise identities:
  A_Utg1100:    [2m100.000%[0m   99.940%   99.960%   99.954%   99.960%   99.969%   99.970%   99.969%   99.968%   99.968%   99.968%   99.975%   99.976%   99.960%   99.964%   99.965%
  B_Utg1058:     99.940%  [2m100.000%[0m   99.948%   99.939%   99.942%   99.953%   99.953%   99.954%   99.953%   99.953%   99.953%   99.944%   99.945%   99.945%   99.948%   99.949%
  C_Utg1134:     99.960%   99.948%  [2m100.000%[0m   99.965%   99.965%   99.976%   99.977%   99.977%   99.978%   99.976%   99.976%   99.966%   99.969%   99.970%   99.972%   99.972%
  D_Utg1086:     99.954%   99.939%   99.965%  [2m100.000%[0m   99.965%   99.973%   99.973%   99.973%   99.975%   99.974%   99.974%   99.962%   99.965%   99.967%   99.970%   99.969%
  E_Utg1034:     99.960%   99.942%   99.965%   99.965%  [2m100.000%[0m   99.977%   99.977%   99.976%   99.977%   99.977%   99.978%   99.965%   99.967%   99.968%   99.972%   99.974%
  F_contig_6:    99.969%   99.953%   99.976%   99.973%   99.977%  [2m100.000%[0m   99.997%   99.993%   99.993%   99.994%   99.995%   99.980%   99.981%   99.982%   99.986%   99.987%
  G_contig_4:    99.970%   99.953%   99.977%   99.973%   99.977%   99.997%  [2m100.000%[0m   99.994%   99.993%   99.993%   99.994%   99.980%   99.981%   99.982%   99.985%   99.987%
  H_contig_5:    99.969%   99.954%   99.977%   99.973%   99.976%   99.993%   99.994%  [2m100.000%[0m   99.994%   99.992%   99.992%   99.980%   99.981%   99.982%   99.985%   99.985%
  I_contig_2:    99.968%   99.953%   99.978%   99.975%   99.977%   99.993%   99.993%   99.994%  [2m100.000%[0m   99.995%   99.994%   99.979%   99.982%   99.983%   99.987%   99.986%
  J_contig_5:    99.968%   99.953%   99.976%   99.974%   99.977%   99.994%   99.993%   99.992%   99.995%  [2m100.000%[0m   99.997%   99.979%   99.981%   99.982%   99.987%   99.986%
  K_contig_4:    99.968%   99.953%   99.976%   99.974%   99.978%   99.995%   99.994%   99.992%   99.994%   99.997%  [2m100.000%[0m   99.979%   99.981%   99.982%   99.987%   99.987%
  L_utg000001c:  99.975%   99.944%   99.966%   99.962%   99.965%   99.980%   99.980%   99.980%   99.979%   99.979%   99.979%  [2m100.000%[0m   99.989%   99.972%   99.975%   99.977%
  M_utg000001c:  99.976%   99.945%   99.969%   99.965%   99.967%   99.981%   99.981%   99.981%   99.982%   99.981%   99.981%   99.989%  [2m100.000%[0m   99.977%   99.978%   99.978%
  N_utg000001c:  99.960%   99.945%   99.970%   99.967%   99.968%   99.982%   99.982%   99.982%   99.983%   99.982%   99.982%   99.972%   99.977%  [2m100.000%[0m   99.980%   99.979%
  O_utg000001c:  99.964%   99.948%   99.972%   99.970%   99.972%   99.986%   99.985%   99.985%   99.987%   99.987%   99.987%   99.975%   99.978%   99.980%  [2m100.000%[0m   99.983%
  P_utg000001c:  99.965%   99.949%   99.972%   99.969%   99.974%   99.987%   99.987%   99.985%   99.986%   99.986%   99.987%   99.977%   99.978%   99.979%   99.983%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  A_Utg1100:    [2m100.0%[0m  [31m  9.9%[0m   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   90.1%   90.1%   56.0%   56.0%   56.0%
  B_Utg1058:    [31m  9.9%[0m  [2m100.0%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m  [31m  9.4%[0m
  C_Utg1134:     56.0%  [31m  9.4%[0m  [2m100.0%[0m   82.4%   81.0%   82.4%   82.4%   82.4%   82.4%   82.3%   82.4%   56.0%   56.0%   62.6%   82.4%   82.4%
  D_Utg1086:     56.0%  [31m  9.4%[0m   82.4%  [2m100.0%[0m   81.0%   86.2%   86.2%   86.2%   86.2%   86.2%   86.2%   56.0%   56.0%   62.7%   86.2%   84.4%
  E_Utg1034:     56.0%  [31m  9.4%[0m   81.0%   81.0%  [2m100.0%[0m   81.0%   81.0%   81.0%   81.0%   81.0%   81.0%   56.0%   56.0%   62.7%   81.0%   81.0%
  F_contig_6:    56.0%  [31m  9.4%[0m   82.4%   86.2%   81.0%  [2m100.0%[0m   99.8%   99.7%   99.7%   99.6%   99.7%   56.0%   56.0%   62.6%   86.2%   84.4%
  G_contig_4:    56.0%  [31m  9.4%[0m   82.4%   86.2%   81.0%   99.8%  [2m100.0%[0m   99.7%   99.7%   99.6%   99.7%   56.0%   56.0%   62.6%   86.2%   84.4%
  H_contig_5:    56.0%  [31m  9.4%[0m   82.4%   86.2%   81.0%   99.7%   99.7%  [2m100.0%[0m   99.7%   99.6%   99.7%   56.0%   56.0%   62.7%   86.2%   84.4%
  I_contig_2:    56.0%  [31m  9.4%[0m   82.4%   86.2%   81.0%   99.7%   99.7%   99.7%  [2m100.0%[0m   99.7%   99.7%   56.0%   56.0%   62.7%   86.2%   84.4%
  J_contig_5:    56.0%  [31m  9.4%[0m   82.3%   86.2%   81.0%   99.6%   99.6%   99.6%   99.7%  [2m100.0%[0m   99.8%   56.0%   56.0%   62.6%   86.2%   84.4%
  K_contig_4:    56.0%  [31m  9.4%[0m   82.4%   86.2%   81.0%   99.7%   99.7%   99.7%   99.7%   99.8%  [2m100.0%[0m   56.0%   56.0%   62.6%   86.2%   84.4%
  L_utg000001c:  90.1%  [31m  9.4%[0m   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%  [2m100.0%[0m   94.1%   56.0%   56.0%   56.0%
  M_utg000001c:  90.1%  [31m  9.4%[0m   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   56.0%   94.1%  [2m100.0%[0m   56.0%   56.0%   56.0%
  N_utg000001c:  56.0%  [31m  9.4%[0m   62.6%   62.7%   62.7%   62.6%   62.6%   62.7%   62.7%   62.6%   62.6%   56.0%   56.0%  [2m100.0%[0m   62.7%   62.7%
  O_utg000001c:  56.0%  [31m  9.4%[0m   82.4%   86.2%   81.0%   86.2%   86.2%   86.2%   86.2%   86.2%   86.2%   56.0%   56.0%   62.7%  [2m100.0%[0m   84.4%
  P_utg000001c:  56.0%  [31m  9.4%[0m   82.4%   84.4%   81.0%   84.4%   84.4%   84.4%   84.4%   84.4%   84.4%   56.0%   56.0%   62.7%   84.4%  [2m100.0%[0m


Error: some pairwise worst-1kbp identities are below the minimum allowed value
of 25.0%. Please remove offending sequences or lower the --min_1kbp_identity
threshold and try again.


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 10:12:36)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_002/1_contigs/B_Utg1062.fasta (201,401 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/C_Utg1140.fasta (200,836 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/D_Utg1078.fasta (201,490 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/F_contig_5.fasta (201,942 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/G_contig_3.fasta (201,805 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/H_contig_4.fasta (201,814 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/I_contig_1.fasta (201,808 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/J_contig_1.fasta (201,812 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/K_contig_3.fasta (201,831 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/L_utg000002c.fasta (201,794 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/M_utg000002l.fasta (227,632 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/N_utg000003c.fasta (201,806 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/O_utg000003c.fasta (201,802 bp)
  results/clusters/CAAUE8/cluster_002/1_contigs/P_utg000003c.fasta (201,804 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 10:12:36)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  B_Utg1062:    [2m1.000[0m  1.003  1.000  0.997  0.998  0.998  0.998  0.998  0.998  0.998  [31m0.885[0m  0.998  0.998  0.998
  C_Utg1140:    0.997  [2m1.000[0m  0.997  0.995  0.995  0.995  0.995  0.995  0.995  0.995  [31m0.882[0m  0.995  0.995  0.995
  D_Utg1078:    1.000  1.003  [2m1.000[0m  0.998  0.998  0.998  0.998  0.998  0.998  0.998  [31m0.885[0m  0.998  0.998  0.998
  F_contig_5:   1.003  1.006  1.002  [2m1.000[0m  1.001  1.001  1.001  1.001  1.001  1.001  [31m0.887[0m  1.001  1.001  1.001
  G_contig_3:   1.002  1.005  1.002  0.999  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  [31m0.887[0m  1.000  1.000  1.000
  H_contig_4:   1.002  1.005  1.002  0.999  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  [31m0.887[0m  1.000  1.000  1.000
  I_contig_1:   1.002  1.005  1.002  0.999  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  [31m0.887[0m  1.000  1.000  1.000
  J_contig_1:   1.002  1.005  1.002  0.999  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  [31m0.887[0m  1.000  1.000  1.000
  K_contig_3:   1.002  1.005  1.002  0.999  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  [31m0.887[0m  1.000  1.000  1.000
  L_utg000002c: 1.002  1.005  1.002  0.999  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  [31m0.886[0m  1.000  1.000  1.000
  M_utg000002l: [31m1.130[0m  [31m1.133[0m  [31m1.130[0m  [31m1.127[0m  [31m1.128[0m  [31m1.128[0m  [31m1.128[0m  [31m1.128[0m  [31m1.128[0m  [31m1.128[0m  [2m1.000[0m  [31m1.128[0m  [31m1.128[0m  [31m1.128[0m
  N_utg000003c: 1.002  1.005  1.002  0.999  1.000  1.000  1.000  1.000  1.000  1.000  [31m0.887[0m  [2m1.000[0m  1.000  1.000
  O_utg000003c: 1.002  1.005  1.002  0.999  1.000  1.000  1.000  1.000  1.000  1.000  [31m0.887[0m  1.000  [2m1.000[0m  1.000
  P_utg000003c: 1.002  1.005  1.002  0.999  1.000  1.000  1.000  1.000  1.000  1.000  [31m0.887[0m  1.000  1.000  [2m1.000[0m


Error: there is too much length difference between contigs. You must either
exclude or repair the offending contig sequences and then try running trycycler
reconcile again. If one of the sequences is too long, it could be due to
excessive circularisation overlap, and trimming that overlap may allow
trycycler reconcile to continue.


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 10:12:36)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_003/1_contigs/B_Utg1064.fasta (144,100 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/C_Utg1138.fasta (144,157 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/D_Utg1082.fasta (144,173 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/F_contig_1.fasta (144,113 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/G_contig_1.fasta (144,113 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/H_contig_2.fasta (144,114 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/I_contig_4.fasta (126,322 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/J_contig_2.fasta (144,110 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/K_contig_2.fasta (144,118 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/L_utg000004c.fasta (144,385 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/M_utg000004l.fasta (175,843 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/N_utg000002c.fasta (144,191 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/O_utg000002c.fasta (144,119 bp)
  results/clusters/CAAUE8/cluster_003/1_contigs/P_utg000002c.fasta (144,113 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 10:12:36)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  B_Utg1064:    [2m1.000[0m  1.000  0.999  1.000  1.000  1.000  [31m1.141[0m  1.000  1.000  0.998  [31m0.819[0m  0.999  1.000  1.000
  C_Utg1138:    1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  [31m1.141[0m  1.000  1.000  0.998  [31m0.820[0m  1.000  1.000  1.000
  D_Utg1082:    1.001  1.000  [2m1.000[0m  1.000  1.000  1.000  [31m1.141[0m  1.000  1.000  0.999  [31m0.820[0m  1.000  1.000  1.000
  F_contig_1:   1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  [31m1.141[0m  1.000  1.000  0.998  [31m0.820[0m  0.999  1.000  1.000
  G_contig_1:   1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  [31m1.141[0m  1.000  1.000  0.998  [31m0.820[0m  0.999  1.000  1.000
  H_contig_2:   1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  [31m1.141[0m  1.000  1.000  0.998  [31m0.820[0m  0.999  1.000  1.000
  I_contig_4:   [31m0.877[0m  [31m0.876[0m  [31m0.876[0m  [31m0.877[0m  [31m0.877[0m  [31m0.877[0m  [2m1.000[0m  [31m0.877[0m  [31m0.877[0m  [31m0.875[0m  [31m0.718[0m  [31m0.876[0m  [31m0.877[0m  [31m0.877[0m
  J_contig_2:   1.000  1.000  1.000  1.000  1.000  1.000  [31m1.141[0m  [2m1.000[0m  1.000  0.998  [31m0.820[0m  0.999  1.000  1.000
  K_contig_2:   1.000  1.000  1.000  1.000  1.000  1.000  [31m1.141[0m  1.000  [2m1.000[0m  0.998  [31m0.820[0m  0.999  1.000  1.000
  L_utg000004c: 1.002  1.002  1.001  1.002  1.002  1.002  [31m1.143[0m  1.002  1.002  [2m1.000[0m  [31m0.821[0m  1.001  1.002  1.002
  M_utg000004l: [31m1.220[0m  [31m1.220[0m  [31m1.220[0m  [31m1.220[0m  [31m1.220[0m  [31m1.220[0m  [31m1.392[0m  [31m1.220[0m  [31m1.220[0m  [31m1.218[0m  [2m1.000[0m  [31m1.220[0m  [31m1.220[0m  [31m1.220[0m
  N_utg000002c: 1.001  1.000  1.000  1.001  1.001  1.001  [31m1.141[0m  1.001  1.001  0.999  [31m0.820[0m  [2m1.000[0m  1.000  1.001
  O_utg000002c: 1.000  1.000  1.000  1.000  1.000  1.000  [31m1.141[0m  1.000  1.000  0.998  [31m0.820[0m  1.000  [2m1.000[0m  1.000
  P_utg000002c: 1.000  1.000  1.000  1.000  1.000  1.000  [31m1.141[0m  1.000  1.000  0.998  [31m0.820[0m  0.999  1.000  [2m1.000[0m


Error: there is too much length difference between contigs. You must either
exclude or repair the offending contig sequences and then try running trycycler
reconcile again. If one of the sequences is too long, it could be due to
excessive circularisation overlap, and trimming that overlap may allow
trycycler reconcile to continue.


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 10:12:36)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_004/1_contigs/B_Utg1060.fasta (55,514 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/C_Utg1136.fasta (55,511 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/F_contig_4.fasta (55,530 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/G_contig_2.fasta (55,525 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/I_contig_3.fasta (55,527 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/J_contig_6.fasta (55,528 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/K_contig_1.fasta (55,526 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/L_utg000003c.fasta (55,522 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/M_utg000003c.fasta (55,524 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/N_utg000004c.fasta (55,522 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/O_utg000005c.fasta (55,524 bp)
  results/clusters/CAAUE8/cluster_004/1_contigs/P_utg000004c.fasta (55,524 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 10:12:36)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  B_Utg1060:    [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  C_Utg1136:    1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  F_contig_4:   1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  G_contig_2:   1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  I_contig_3:   1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000  1.000
  J_contig_6:   1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000  1.000
  K_contig_1:   1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000  1.000
  L_utg000003c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000  1.000
  M_utg000003c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000  1.000
  N_utg000004c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000  1.000
  O_utg000005c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m  1.000
  P_utg000004c: 1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  [2m1.000[0m

Mash distances:
  B_Utg1060:    [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  C_Utg1136:    0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  F_contig_4:   0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  G_contig_2:   0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  I_contig_3:   0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000  0.000
  J_contig_6:   0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000  0.000
  K_contig_1:   0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000  0.000
  L_utg000003c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000  0.000
  M_utg000003c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000  0.000
  N_utg000004c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000  0.000
  O_utg000005c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m  0.000
  P_utg000004c: 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 10:12:37)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  GGCTTTGGTTCCATGATAGAACGGTCCTTGCACCTGCTTGTAATTATCAT
  GAGAGATGGGAATCCAATCTTTTACCATTTTAAGACCCTTAATTGTTGGG
  ATTTGGCTGCATAACGTTTGACATGAGGGGCGGCCAAGGGCGCCAGCCCT
  TGGACGTCCCCCTCGATGGAAGGGTTAGGCATCACTGCGTGTTCGCTCGA
  ATGCCTGGCGTGTTTGAACCATGTACACGGCTGGACCATATGGGGTGGTT

B_Utg1060:    + strand (using original sequence)
C_Utg1136:    + strand (using original sequence)
F_contig_4:   + strand (using original sequence)
G_contig_2:   + strand (using original sequence)
I_contig_3:   + strand (using original sequence)
J_contig_6:   + strand (using original sequence)
K_contig_1:   - strand (using reverse complement)
L_utg000003c: - strand (using reverse complement)
M_utg000003c: + strand (using original sequence)
N_utg000004c: + strand (using original sequence)
O_utg000005c: + strand (using original sequence)
P_utg000004c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 10:12:38)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising B_Utg1060:
  using C_Utg1136:
    unable to circularise: B_Utg1060's start/end is the same as C_Utg1136's start/end
  using F_contig_4:
    no adjustment needed (B_Utg1060 is already circular)
  using G_contig_2:
    no adjustment needed (B_Utg1060 is already circular)
  using I_contig_3:
    no adjustment needed (B_Utg1060 is already circular)
  using J_contig_6:
    no adjustment needed (B_Utg1060 is already circular)
  using K_contig_1:
    no adjustment needed (B_Utg1060 is already circular)
  using L_utg000003c:
    no adjustment needed (B_Utg1060 is already circular)
  using M_utg000003c:
    no adjustment needed (B_Utg1060 is already circular)
  using N_utg000004c:
    no adjustment needed (B_Utg1060 is already circular)
  using O_utg000005c:
    no adjustment needed (B_Utg1060 is already circular)
  using P_utg000004c:
    no adjustment needed (B_Utg1060 is already circular)
  circularisation complete (55,514 bp)

Circularising C_Utg1136:
  using B_Utg1060:
    unable to circularise: C_Utg1136's start/end is the same as B_Utg1060's start/end
  using F_contig_4:
    no adjustment needed (C_Utg1136 is already circular)
  using G_contig_2:
    no adjustment needed (C_Utg1136 is already circular)
  using I_contig_3:
    no adjustment needed (C_Utg1136 is already circular)
  using J_contig_6:
    no adjustment needed (C_Utg1136 is already circular)
  using K_contig_1:
    no adjustment needed (C_Utg1136 is already circular)
  using L_utg000003c:
    no adjustment needed (C_Utg1136 is already circular)
  using M_utg000003c:
    no adjustment needed (C_Utg1136 is already circular)
  using N_utg000004c:
    no adjustment needed (C_Utg1136 is already circular)
  using O_utg000005c:
    no adjustment needed (C_Utg1136 is already circular)
  using P_utg000004c:
    no adjustment needed (C_Utg1136 is already circular)
  circularisation complete (55,511 bp)

Circularising F_contig_4:
  using B_Utg1060:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using C_Utg1136:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using G_contig_2:
    unable to circularise: F_contig_4's end could not be found in G_contig_2
  using I_contig_3:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using J_contig_6:
    unable to circularise: F_contig_4's start/end is the same as J_contig_6's start/end
  using K_contig_1:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using L_utg000003c:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using M_utg000003c:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using N_utg000004c:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using O_utg000005c:
    circularising F_contig_4 by trimming 3 bp of sequence from the end
  using P_utg000004c:
    unable to circularise: F_contig_4's start could not be found in P_utg000004c
  circularisation complete (55,527 bp)

Circularising G_contig_2:
  using B_Utg1060:
    no adjustment needed (G_contig_2 is already circular)
  using C_Utg1136:
    no adjustment needed (G_contig_2 is already circular)
  using F_contig_4:
    unable to circularise: G_contig_2's start could not be found in F_contig_4
  using I_contig_3:
    no adjustment needed (G_contig_2 is already circular)
  using J_contig_6:
    unable to circularise: G_contig_2's start could not be found in J_contig_6
  using K_contig_1:
    no adjustment needed (G_contig_2 is already circular)
  using L_utg000003c:
    no adjustment needed (G_contig_2 is already circular)
  using M_utg000003c:
    no adjustment needed (G_contig_2 is already circular)
  using N_utg000004c:
    no adjustment needed (G_contig_2 is already circular)
  using O_utg000005c:
    no adjustment needed (G_contig_2 is already circular)
  using P_utg000004c:
    unable to circularise: G_contig_2's start could not be found in P_utg000004c
  circularisation complete (55,525 bp)

Circularising I_contig_3:
  using B_Utg1060:
    no adjustment needed (I_contig_3 is already circular)
  using C_Utg1136:
    no adjustment needed (I_contig_3 is already circular)
  using F_contig_4:
    no adjustment needed (I_contig_3 is already circular)
  using G_contig_2:
    no adjustment needed (I_contig_3 is already circular)
  using J_contig_6:
    no adjustment needed (I_contig_3 is already circular)
  using K_contig_1:
    no adjustment needed (I_contig_3 is already circular)
  using L_utg000003c:
    no adjustment needed (I_contig_3 is already circular)
  using M_utg000003c:
    no adjustment needed (I_contig_3 is already circular)
  using N_utg000004c:
    no adjustment needed (I_contig_3 is already circular)
  using O_utg000005c:
    no adjustment needed (I_contig_3 is already circular)
  using P_utg000004c:
    no adjustment needed (I_contig_3 is already circular)
  circularisation complete (55,527 bp)

Circularising J_contig_6:
  using B_Utg1060:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using C_Utg1136:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using F_contig_4:
    unable to circularise: J_contig_6's start/end is the same as F_contig_4's start/end
  using G_contig_2:
    unable to circularise: J_contig_6's end could not be found in G_contig_2
  using I_contig_3:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using K_contig_1:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using L_utg000003c:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using M_utg000003c:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using N_utg000004c:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using O_utg000005c:
    circularising J_contig_6 by trimming 4 bp of sequence from the end
  using P_utg000004c:
    unable to circularise: J_contig_6's start could not be found in P_utg000004c
  circularisation complete (55,524 bp)

Circularising K_contig_1:
  using B_Utg1060:
    circularising K_contig_1 by adding 1 bp of sequence from B_Utg1060 (44743-44744)
  using C_Utg1136:
    circularising K_contig_1 by adding 1 bp of sequence from C_Utg1136 (44738-44739)
  using F_contig_4:
    circularising K_contig_1 by adding 1 bp of sequence from F_contig_4 (51823-51824)
  using G_contig_2:
    circularising K_contig_1 by adding 1 bp of sequence from G_contig_2 (51919-51920)
  using I_contig_3:
    circularising K_contig_1 by adding 1 bp of sequence from I_contig_3 (15705-15706)
  using J_contig_6:
    circularising K_contig_1 by adding 1 bp of sequence from J_contig_6 (51821-51822)
  using L_utg000003c:
    circularising K_contig_1 by adding 1 bp of sequence from L_utg000003c (49213-49214)
  using M_utg000003c:
    circularising K_contig_1 by adding 1 bp of sequence from M_utg000003c (40739-40740)
  using N_utg000004c:
    circularising K_contig_1 by adding 1 bp of sequence from N_utg000004c (30359-30360)
  using O_utg000005c:
    circularising K_contig_1 by adding 1 bp of sequence from O_utg000005c (33694-33695)
  using P_utg000004c:
    circularising K_contig_1 by adding 1 bp of sequence from P_utg000004c (50969-50970)
  circularisation complete (55,527 bp)

Circularising L_utg000003c:
  using B_Utg1060:
    no adjustment needed (L_utg000003c is already circular)
  using C_Utg1136:
    no adjustment needed (L_utg000003c is already circular)
  using F_contig_4:
    no adjustment needed (L_utg000003c is already circular)
  using G_contig_2:
    no adjustment needed (L_utg000003c is already circular)
  using I_contig_3:
    no adjustment needed (L_utg000003c is already circular)
  using J_contig_6:
    no adjustment needed (L_utg000003c is already circular)
  using K_contig_1:
    no adjustment needed (L_utg000003c is already circular)
  using M_utg000003c:
    no adjustment needed (L_utg000003c is already circular)
  using N_utg000004c:
    no adjustment needed (L_utg000003c is already circular)
  using O_utg000005c:
    no adjustment needed (L_utg000003c is already circular)
  using P_utg000004c:
    no adjustment needed (L_utg000003c is already circular)
  circularisation complete (55,522 bp)

Circularising M_utg000003c:
  using B_Utg1060:
    no adjustment needed (M_utg000003c is already circular)
  using C_Utg1136:
    no adjustment needed (M_utg000003c is already circular)
  using F_contig_4:
    no adjustment needed (M_utg000003c is already circular)
  using G_contig_2:
    no adjustment needed (M_utg000003c is already circular)
  using I_contig_3:
    no adjustment needed (M_utg000003c is already circular)
  using J_contig_6:
    no adjustment needed (M_utg000003c is already circular)
  using K_contig_1:
    no adjustment needed (M_utg000003c is already circular)
  using L_utg000003c:
    no adjustment needed (M_utg000003c is already circular)
  using N_utg000004c:
    no adjustment needed (M_utg000003c is already circular)
  using O_utg000005c:
    no adjustment needed (M_utg000003c is already circular)
  using P_utg000004c:
    no adjustment needed (M_utg000003c is already circular)
  circularisation complete (55,524 bp)

Circularising N_utg000004c:
  using B_Utg1060:
    no adjustment needed (N_utg000004c is already circular)
  using C_Utg1136:
    no adjustment needed (N_utg000004c is already circular)
  using F_contig_4:
    no adjustment needed (N_utg000004c is already circular)
  using G_contig_2:
    no adjustment needed (N_utg000004c is already circular)
  using I_contig_3:
    no adjustment needed (N_utg000004c is already circular)
  using J_contig_6:
    no adjustment needed (N_utg000004c is already circular)
  using K_contig_1:
    no adjustment needed (N_utg000004c is already circular)
  using L_utg000003c:
    no adjustment needed (N_utg000004c is already circular)
  using M_utg000003c:
    no adjustment needed (N_utg000004c is already circular)
  using O_utg000005c:
    no adjustment needed (N_utg000004c is already circular)
  using P_utg000004c:
    no adjustment needed (N_utg000004c is already circular)
  circularisation complete (55,522 bp)

Circularising O_utg000005c:
  using B_Utg1060:
    no adjustment needed (O_utg000005c is already circular)
  using C_Utg1136:
    no adjustment needed (O_utg000005c is already circular)
  using F_contig_4:
    no adjustment needed (O_utg000005c is already circular)
  using G_contig_2:
    no adjustment needed (O_utg000005c is already circular)
  using I_contig_3:
    no adjustment needed (O_utg000005c is already circular)
  using J_contig_6:
    no adjustment needed (O_utg000005c is already circular)
  using K_contig_1:
    no adjustment needed (O_utg000005c is already circular)
  using L_utg000003c:
    no adjustment needed (O_utg000005c is already circular)
  using M_utg000003c:
    no adjustment needed (O_utg000005c is already circular)
  using N_utg000004c:
    no adjustment needed (O_utg000005c is already circular)
  using P_utg000004c:
    no adjustment needed (O_utg000005c is already circular)
  circularisation complete (55,524 bp)

Circularising P_utg000004c:
  using B_Utg1060:
    no adjustment needed (P_utg000004c is already circular)
  using C_Utg1136:
    no adjustment needed (P_utg000004c is already circular)
  using F_contig_4:
    unable to circularise: P_utg000004c's end could not be found in F_contig_4
  using G_contig_2:
    unable to circularise: P_utg000004c's end could not be found in G_contig_2
  using I_contig_3:
    no adjustment needed (P_utg000004c is already circular)
  using J_contig_6:
    unable to circularise: P_utg000004c's end could not be found in J_contig_6
  using K_contig_1:
    no adjustment needed (P_utg000004c is already circular)
  using L_utg000003c:
    no adjustment needed (P_utg000004c is already circular)
  using M_utg000003c:
    no adjustment needed (P_utg000004c is already circular)
  using N_utg000004c:
    no adjustment needed (P_utg000004c is already circular)
  using O_utg000005c:
    no adjustment needed (P_utg000004c is already circular)
  circularisation complete (55,524 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 10:12:42)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0100_A6D67_RS28830 (replication initiation protein)
  ATGGGAAAGAGGTCAAGTTCAGTTCTCAATTATCCACTTGTGGATAAAGT...

B_Utg1060:    - strand (using reverse complement)
C_Utg1136:    - strand (using reverse complement)
F_contig_4:   - strand (using reverse complement)
G_contig_2:   - strand (using reverse complement)
I_contig_3:   - strand (using reverse complement)
J_contig_6:   - strand (using reverse complement)
K_contig_1:   - strand (using reverse complement)
L_utg000003c: - strand (using reverse complement)
M_utg000003c: - strand (using reverse complement)
N_utg000004c: - strand (using reverse complement)
O_utg000005c: - strand (using reverse complement)
P_utg000004c: - strand (using reverse complement)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 10:12:43)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

B_Utg1060: rotating by 45,123 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,514 bp)

C_Utg1136: rotating by 45,126 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,511 bp)

F_contig_4: rotating by 38,062 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,527 bp)

G_contig_2: rotating by 37,963 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,525 bp)

I_contig_3: rotating by 18,653 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,527 bp)

J_contig_6: rotating by 38,059 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,524 bp)

K_contig_1: rotating by 34,358 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,527 bp)

L_utg000003c: rotating by 40,664 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,522 bp)

M_utg000003c: rotating by 49,141 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,524 bp)

N_utg000004c: rotating by 3,996 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,522 bp)

O_utg000005c: rotating by 662 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,524 bp)

P_utg000004c: rotating by 38,911 bp
   ATGGGAAAGAGGTCAAGTTC...GGGATACGCATCAACAAGCT (55,524 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 10:12:43)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   B_Utg1060 vs C_Utg1136...    99.955% overall identity, 99.3% worst-1kbp identity
   B_Utg1060 vs F_contig_4...   99.957% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs G_contig_2...   99.968% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs I_contig_3...   99.962% overall identity, 99.5% worst-1kbp identity
   B_Utg1060 vs J_contig_6...   99.960% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs K_contig_1...   99.959% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs L_utg000003c... 99.964% overall identity, 99.4% worst-1kbp identity
   B_Utg1060 vs M_utg000003c... 99.964% overall identity, 99.5% worst-1kbp identity
   B_Utg1060 vs N_utg000004c... 99.964% overall identity, 99.5% worst-1kbp identity
   B_Utg1060 vs O_utg000005c... 99.964% overall identity, 99.5% worst-1kbp identity
   B_Utg1060 vs P_utg000004c... 99.960% overall identity, 99.4% worst-1kbp identity
   C_Utg1136 vs F_contig_4...   99.953% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs G_contig_2...   99.960% overall identity, 99.1% worst-1kbp identity
   C_Utg1136 vs I_contig_3...   99.955% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs J_contig_6...   99.953% overall identity, 98.9% worst-1kbp identity
   C_Utg1136 vs K_contig_1...   99.951% overall identity, 98.9% worst-1kbp identity
   C_Utg1136 vs L_utg000003c... 99.960% overall identity, 99.1% worst-1kbp identity
   C_Utg1136 vs M_utg000003c... 99.960% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs N_utg000004c... 99.953% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs O_utg000005c... 99.960% overall identity, 99.0% worst-1kbp identity
   C_Utg1136 vs P_utg000004c... 99.953% overall identity, 98.7% worst-1kbp identity
  F_contig_4 vs G_contig_2...   99.986% overall identity, 99.7% worst-1kbp identity
  F_contig_4 vs I_contig_3...   99.991% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs J_contig_6...   99.989% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs K_contig_1...   99.987% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs L_utg000003c... 99.989% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs M_utg000003c... 99.989% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs N_utg000004c... 99.986% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs O_utg000005c... 99.986% overall identity, 99.8% worst-1kbp identity
  F_contig_4 vs P_utg000004c... 99.986% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs I_contig_3...   99.987% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs J_contig_6...   99.989% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs K_contig_1...   99.991% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs L_utg000003c... 99.989% overall identity, 99.8% worst-1kbp identity
  G_contig_2 vs M_utg000003c... 99.986% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs N_utg000004c... 99.982% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs O_utg000005c... 99.986% overall identity, 99.7% worst-1kbp identity
  G_contig_2 vs P_utg000004c... 99.989% overall identity, 99.6% worst-1kbp identity
  I_contig_3 vs J_contig_6...   99.995% overall identity, 99.9% worst-1kbp identity
  I_contig_3 vs K_contig_1...   99.993% overall identity, 99.9% worst-1kbp identity
  I_contig_3 vs L_utg000003c... 99.991% overall identity, 99.8% worst-1kbp identity
  I_contig_3 vs M_utg000003c... 99.995% overall identity, 99.9% worst-1kbp identity
  I_contig_3 vs N_utg000004c... 99.991% overall identity, 99.9% worst-1kbp identity
  I_contig_3 vs O_utg000005c... 99.991% overall identity, 99.8% worst-1kbp identity
  I_contig_3 vs P_utg000004c... 99.987% overall identity, 99.7% worst-1kbp identity
  J_contig_6 vs K_contig_1...   99.995% overall identity, 99.9% worst-1kbp identity
  J_contig_6 vs L_utg000003c... 99.989% overall identity, 99.8% worst-1kbp identity
  J_contig_6 vs M_utg000003c... 99.989% overall identity, 99.9% worst-1kbp identity
  J_contig_6 vs N_utg000004c... 99.986% overall identity, 99.9% worst-1kbp identity
  J_contig_6 vs O_utg000005c... 99.986% overall identity, 99.7% worst-1kbp identity
  J_contig_6 vs P_utg000004c... 99.989% overall identity, 99.8% worst-1kbp identity
  K_contig_1 vs L_utg000003c... 99.987% overall identity, 99.8% worst-1kbp identity
  K_contig_1 vs M_utg000003c... 99.987% overall identity, 99.9% worst-1kbp identity
  K_contig_1 vs N_utg000004c... 99.984% overall identity, 99.9% worst-1kbp identity
  K_contig_1 vs O_utg000005c... 99.984% overall identity, 99.7% worst-1kbp identity
  K_contig_1 vs P_utg000004c... 99.991% overall identity, 99.8% worst-1kbp identity
L_utg000003c vs M_utg000003c... 99.993% overall identity, 99.9% worst-1kbp identity
L_utg000003c vs N_utg000004c... 99.989% overall identity, 99.9% worst-1kbp identity
L_utg000003c vs O_utg000005c... 99.993% overall identity, 99.9% worst-1kbp identity
L_utg000003c vs P_utg000004c... 99.989% overall identity, 99.6% worst-1kbp identity
M_utg000003c vs N_utg000004c... 99.993% overall identity, 99.9% worst-1kbp identity
M_utg000003c vs O_utg000005c... 99.996% overall identity, 99.8% worst-1kbp identity
M_utg000003c vs P_utg000004c... 99.989% overall identity, 99.7% worst-1kbp identity
N_utg000004c vs O_utg000005c... 99.989% overall identity, 99.8% worst-1kbp identity
N_utg000004c vs P_utg000004c... 99.986% overall identity, 99.7% worst-1kbp identity
O_utg000005c vs P_utg000004c... 99.989% overall identity, 99.7% worst-1kbp identity

Overall pairwise identities:
  B_Utg1060:    [2m100.000%[0m   99.955%   99.957%   99.968%   99.962%   99.960%   99.959%   99.964%   99.964%   99.964%   99.964%   99.960%
  C_Utg1136:     99.955%  [2m100.000%[0m   99.953%   99.960%   99.955%   99.953%   99.951%   99.960%   99.960%   99.953%   99.960%   99.953%
  F_contig_4:    99.957%   99.953%  [2m100.000%[0m   99.986%   99.991%   99.989%   99.987%   99.989%   99.989%   99.986%   99.986%   99.986%
  G_contig_2:    99.968%   99.960%   99.986%  [2m100.000%[0m   99.987%   99.989%   99.991%   99.989%   99.986%   99.982%   99.986%   99.989%
  I_contig_3:    99.962%   99.955%   99.991%   99.987%  [2m100.000%[0m   99.995%   99.993%   99.991%   99.995%   99.991%   99.991%   99.987%
  J_contig_6:    99.960%   99.953%   99.989%   99.989%   99.995%  [2m100.000%[0m   99.995%   99.989%   99.989%   99.986%   99.986%   99.989%
  K_contig_1:    99.959%   99.951%   99.987%   99.991%   99.993%   99.995%  [2m100.000%[0m   99.987%   99.987%   99.984%   99.984%   99.991%
  L_utg000003c:  99.964%   99.960%   99.989%   99.989%   99.991%   99.989%   99.987%  [2m100.000%[0m   99.993%   99.989%   99.993%   99.989%
  M_utg000003c:  99.964%   99.960%   99.989%   99.986%   99.995%   99.989%   99.987%   99.993%  [2m100.000%[0m   99.993%   99.996%   99.989%
  N_utg000004c:  99.964%   99.953%   99.986%   99.982%   99.991%   99.986%   99.984%   99.989%   99.993%  [2m100.000%[0m   99.989%   99.986%
  O_utg000005c:  99.964%   99.960%   99.986%   99.986%   99.991%   99.986%   99.984%   99.993%   99.996%   99.989%  [2m100.000%[0m   99.989%
  P_utg000004c:  99.960%   99.953%   99.986%   99.989%   99.987%   99.989%   99.991%   99.989%   99.989%   99.986%   99.989%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  B_Utg1060:    [2m100.0%[0m   99.3%   99.4%   99.4%   99.5%   99.4%   99.4%   99.4%   99.5%   99.5%   99.5%   99.4%
  C_Utg1136:     99.3%  [2m100.0%[0m   99.0%   99.1%   99.0%   98.9%   98.9%   99.1%   99.0%   99.0%   99.0%   98.7%
  F_contig_4:    99.4%   99.0%  [2m100.0%[0m   99.7%   99.8%   99.8%   99.8%   99.8%   99.8%   99.8%   99.8%   99.7%
  G_contig_2:    99.4%   99.1%   99.7%  [2m100.0%[0m   99.7%   99.8%   99.8%   99.8%   99.7%   99.7%   99.7%   99.6%
  I_contig_3:    99.5%   99.0%   99.8%   99.7%  [2m100.0%[0m   99.9%   99.9%   99.8%   99.9%   99.9%   99.8%   99.7%
  J_contig_6:    99.4%   98.9%   99.8%   99.8%   99.9%  [2m100.0%[0m   99.9%   99.8%   99.9%   99.9%   99.7%   99.8%
  K_contig_1:    99.4%   98.9%   99.8%   99.8%   99.9%   99.9%  [2m100.0%[0m   99.8%   99.9%   99.9%   99.7%   99.8%
  L_utg000003c:  99.4%   99.1%   99.8%   99.8%   99.8%   99.8%   99.8%  [2m100.0%[0m   99.9%   99.9%   99.9%   99.6%
  M_utg000003c:  99.5%   99.0%   99.8%   99.7%   99.9%   99.9%   99.9%   99.9%  [2m100.0%[0m   99.9%   99.8%   99.7%
  N_utg000004c:  99.5%   99.0%   99.8%   99.7%   99.9%   99.9%   99.9%   99.9%   99.9%  [2m100.0%[0m   99.8%   99.7%
  O_utg000005c:  99.5%   99.0%   99.8%   99.7%   99.8%   99.7%   99.7%   99.9%   99.8%   99.8%  [2m100.0%[0m   99.7%
  P_utg000004c:  99.4%   98.7%   99.7%   99.6%   99.7%   99.8%   99.8%   99.6%   99.7%   99.7%   99.7%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 10:12:45)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/CAAUE8/cluster_004/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 10:12:45)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_005/1_contigs/A_Utg1104.fasta (4,340 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/D_Utg1084.fasta (4,343 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/L_utg000005c.fasta (4,348 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/M_utg000005c.fasta (4,352 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/N_utg000005c.fasta (4,352 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/O_utg000004c.fasta (4,346 bp)
  results/clusters/CAAUE8/cluster_005/1_contigs/P_utg000005c.fasta (4,344 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 10:12:45)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  A_Utg1104:    [2m1.000[0m  0.999  0.998  0.997  0.997  0.999  0.999
  D_Utg1084:    1.001  [2m1.000[0m  0.999  0.998  0.998  0.999  1.000
  L_utg000005c: 1.002  1.001  [2m1.000[0m  0.999  0.999  1.000  1.001
  M_utg000005c: 1.003  1.002  1.001  [2m1.000[0m  1.000  1.001  1.002
  N_utg000005c: 1.003  1.002  1.001  1.000  [2m1.000[0m  1.001  1.002
  O_utg000004c: 1.001  1.001  1.000  0.999  0.999  [2m1.000[0m  1.000
  P_utg000005c: 1.001  1.000  0.999  0.998  0.998  1.000  [2m1.000[0m

Mash distances:
  A_Utg1104:    [2m0.000[0m  0.002  0.003  0.003  0.005  0.003  0.003
  D_Utg1084:    0.002  [2m0.000[0m  0.002  0.003  0.004  0.001  0.001
  L_utg000005c: 0.003  0.002  [2m0.000[0m  0.003  0.005  0.002  0.002
  M_utg000005c: 0.003  0.003  0.003  [2m0.000[0m  0.003  0.003  0.003
  N_utg000005c: 0.005  0.004  0.004  0.003  [2m0.000[0m  0.004  0.004
  O_utg000004c: 0.003  0.001  0.002  0.003  0.005  [2m0.000[0m  0.001
  P_utg000005c: 0.003  0.001  0.002  0.003  0.005  0.001  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 10:12:45)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  TGTTGTTCTACTCTTACCCGTCAGTCGGGCAGCCTCACTAATAGACACTC
  TGGCCATCAGTTATCATCCTGTAATCCATCCAGTCTCGAGGACAGTGTAC
  GGAAAAGATGCTCCGCATCATCGTGGAGTTTCTCACAAAGGTCGGCCTCA
  ACATCGAGGTCAAGCTCGTTAAGCTTCTCCAGCAGGAGCAGAGACTGATT
  CTGGATGAATTTAGCCATGTTCAGCGCTGTTTTCTGTTGTTTCGTCATAA

A_Utg1104:    + strand (using original sequence)
D_Utg1084:    + strand (using original sequence)
L_utg000005c: + strand (using original sequence)
M_utg000005c: - strand (using reverse complement)
N_utg000005c: - strand (using reverse complement)
O_utg000004c: + strand (using original sequence)
P_utg000005c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 10:12:45)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising A_Utg1104:
  using D_Utg1084:
    unable to circularise: A_Utg1104's start/end is the same as D_Utg1084's start/end
  using L_utg000005c:
    no adjustment needed (A_Utg1104 is already circular)
  using M_utg000005c:
    unable to circularise: A_Utg1104's end could not be found in M_utg000005c
  using N_utg000005c:
    no adjustment needed (A_Utg1104 is already circular)
  using O_utg000004c:
    no adjustment needed (A_Utg1104 is already circular)
  using P_utg000005c:
    no adjustment needed (A_Utg1104 is already circular)
  circularisation complete (4,340 bp)

Circularising D_Utg1084:
  using A_Utg1104:
    unable to circularise: D_Utg1084's start/end is the same as A_Utg1104's start/end
  using L_utg000005c:
    no adjustment needed (D_Utg1084 is already circular)
  using M_utg000005c:
    unable to circularise: D_Utg1084's end could not be found in M_utg000005c
  using N_utg000005c:
    no adjustment needed (D_Utg1084 is already circular)
  using O_utg000004c:
    no adjustment needed (D_Utg1084 is already circular)
  using P_utg000005c:
    no adjustment needed (D_Utg1084 is already circular)
  circularisation complete (4,343 bp)

Circularising L_utg000005c:
  using A_Utg1104:
    no adjustment needed (L_utg000005c is already circular)
  using D_Utg1084:
    no adjustment needed (L_utg000005c is already circular)
  using M_utg000005c:
    no adjustment needed (L_utg000005c is already circular)
  using N_utg000005c:
    no adjustment needed (L_utg000005c is already circular)
  using O_utg000004c:
    no adjustment needed (L_utg000005c is already circular)
  using P_utg000005c:
    unable to circularise: L_utg000005c's end could not be found in P_utg000005c
  circularisation complete (4,348 bp)

Circularising M_utg000005c:
  using A_Utg1104:
    unable to circularise: M_utg000005c's start could not be found in A_Utg1104
  using D_Utg1084:
    unable to circularise: M_utg000005c's start could not be found in D_Utg1084
  using L_utg000005c:
    no adjustment needed (M_utg000005c is already circular)
  using N_utg000005c:
    circularising M_utg000005c by adding 4 bp of sequence from N_utg000005c (3845-3849)
  using O_utg000004c:
    no adjustment needed (M_utg000005c is already circular)
  using P_utg000005c:
    no adjustment needed (M_utg000005c is already circular)
  choosing most common circularisation
  circularisation complete (4,352 bp)

Circularising N_utg000005c:
  using A_Utg1104:
    no adjustment needed (N_utg000005c is already circular)
  using D_Utg1084:
    no adjustment needed (N_utg000005c is already circular)
  using L_utg000005c:
    no adjustment needed (N_utg000005c is already circular)
  using M_utg000005c:
    no adjustment needed (N_utg000005c is already circular)
  using O_utg000004c:
    no adjustment needed (N_utg000005c is already circular)
  using P_utg000005c:
    no adjustment needed (N_utg000005c is already circular)
  circularisation complete (4,352 bp)

Circularising O_utg000004c:
  using A_Utg1104:
    no adjustment needed (O_utg000004c is already circular)
  using D_Utg1084:
    no adjustment needed (O_utg000004c is already circular)
  using L_utg000005c:
    no adjustment needed (O_utg000004c is already circular)
  using M_utg000005c:
    no adjustment needed (O_utg000004c is already circular)
  using N_utg000005c:
    no adjustment needed (O_utg000004c is already circular)
  using P_utg000005c:
    no adjustment needed (O_utg000004c is already circular)
  circularisation complete (4,346 bp)

Circularising P_utg000005c:
  using A_Utg1104:
    no adjustment needed (P_utg000005c is already circular)
  using D_Utg1084:
    no adjustment needed (P_utg000005c is already circular)
  using L_utg000005c:
    unable to circularise: P_utg000005c's start could not be found in L_utg000005c
  using M_utg000005c:
    no adjustment needed (P_utg000005c is already circular)
  using N_utg000005c:
    no adjustment needed (P_utg000005c is already circular)
  using O_utg000004c:
    no adjustment needed (P_utg000005c is already circular)
  circularisation complete (4,344 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 10:12:46)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 1967_SEEH1578_RS25770 (replication initiation protein)
  ATGCACGACCCCCCCGTTCAGTCCGACCGCTGCGCCTTGTCCGGTAACTA...

A_Utg1104:    + strand (using original sequence)
D_Utg1084:    + strand (using original sequence)
L_utg000005c: + strand (using original sequence)
M_utg000005c: + strand (using original sequence)
N_utg000005c: + strand (using original sequence)
O_utg000004c: + strand (using original sequence)
P_utg000005c: + strand (using original sequence)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 10:12:46)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

A_Utg1104: rotating by 68 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,340 bp)

D_Utg1084: rotating by 77 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,343 bp)

L_utg000005c: rotating by 2,294 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,348 bp)

M_utg000005c: rotating by 133 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,352 bp)

N_utg000005c: rotating by 3,978 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,352 bp)

O_utg000004c: rotating by 3,270 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,346 bp)

P_utg000005c: rotating by 2,343 bp
   ATGCACGAACCCCCCGTTCA...TTCGCTCCAAGCTGGACTGT (4,344 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 10:12:46)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

   A_Utg1104 vs D_Utg1084...    99.517% overall identity, 98.3% worst-1kbp identity
   A_Utg1104 vs L_utg000005c... 99.494% overall identity, 98.2% worst-1kbp identity
   A_Utg1104 vs M_utg000005c... 99.380% overall identity, 97.9% worst-1kbp identity
   A_Utg1104 vs N_utg000005c... 98.990% overall identity, 97.9% worst-1kbp identity
   A_Utg1104 vs O_utg000004c... 99.494% overall identity, 98.4% worst-1kbp identity
   A_Utg1104 vs P_utg000005c... 99.540% overall identity, 98.5% worst-1kbp identity
   D_Utg1084 vs L_utg000005c... 99.563% overall identity, 98.1% worst-1kbp identity
   D_Utg1084 vs M_utg000005c... 99.586% overall identity, 98.5% worst-1kbp identity
   D_Utg1084 vs N_utg000005c... 99.288% overall identity, 98.8% worst-1kbp identity
   D_Utg1084 vs O_utg000004c... 99.885% overall identity, 99.7% worst-1kbp identity
   D_Utg1084 vs P_utg000005c... 99.931% overall identity, 99.8% worst-1kbp identity
L_utg000005c vs M_utg000005c... 99.449% overall identity, 98.0% worst-1kbp identity
L_utg000005c vs N_utg000005c... 99.265% overall identity, 98.8% worst-1kbp identity
L_utg000005c vs O_utg000004c... 99.540% overall identity, 98.2% worst-1kbp identity
L_utg000005c vs P_utg000005c... 99.586% overall identity, 98.3% worst-1kbp identity
M_utg000005c vs N_utg000005c... 99.312% overall identity, 98.6% worst-1kbp identity
M_utg000005c vs O_utg000004c... 99.564% overall identity, 98.3% worst-1kbp identity
M_utg000005c vs P_utg000005c... 99.609% overall identity, 98.4% worst-1kbp identity
N_utg000005c vs O_utg000004c... 99.265% overall identity, 98.6% worst-1kbp identity
N_utg000005c vs P_utg000005c... 99.311% overall identity, 98.7% worst-1kbp identity
O_utg000004c vs P_utg000005c... 99.908% overall identity, 99.7% worst-1kbp identity

Overall pairwise identities:
  A_Utg1104:    [2m100.000%[0m   99.517%   99.494%   99.380%   98.990%   99.494%   99.540%
  D_Utg1084:     99.517%  [2m100.000%[0m   99.563%   99.586%   99.288%   99.885%   99.931%
  L_utg000005c:  99.494%   99.563%  [2m100.000%[0m   99.449%   99.265%   99.540%   99.586%
  M_utg000005c:  99.380%   99.586%   99.449%  [2m100.000%[0m   99.312%   99.564%   99.609%
  N_utg000005c:  98.990%   99.288%   99.265%   99.312%  [2m100.000%[0m   99.265%   99.311%
  O_utg000004c:  99.494%   99.885%   99.540%   99.564%   99.265%  [2m100.000%[0m   99.908%
  P_utg000005c:  99.540%   99.931%   99.586%   99.609%   99.311%   99.908%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  A_Utg1104:    [2m100.0%[0m   98.3%   98.2%   97.9%   97.9%   98.4%   98.5%
  D_Utg1084:     98.3%  [2m100.0%[0m   98.1%   98.5%   98.8%   99.7%   99.8%
  L_utg000005c:  98.2%   98.1%  [2m100.0%[0m   98.0%   98.8%   98.2%   98.3%
  M_utg000005c:  97.9%   98.5%   98.0%  [2m100.0%[0m   98.6%   98.3%   98.4%
  N_utg000005c:  97.9%   98.8%   98.8%   98.6%  [2m100.0%[0m   98.6%   98.7%
  O_utg000004c:  98.4%   99.7%   98.2%   98.3%   98.6%  [2m100.0%[0m   99.7%
  P_utg000005c:  98.5%   99.8%   98.3%   98.4%   98.7%   99.7%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 10:12:46)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/CAAUE8/cluster_005/2_all_seqs.fasta


[93m[1m[4mStarting Trycycler reconcile[0m [2m(2024-07-06 10:12:47)[0m
[2m    Trycycler reconcile is a tool for reconciling multiple alternative contigs[0m
[2mwith each other.[0m

Input reads: data/ont/CAAUE8_0.fastq.gz
  size = 482,409,845 bytes

Input contigs:
  results/clusters/CAAUE8/cluster_006/1_contigs/O_utg000006c.fasta (5,456 bp)
  results/clusters/CAAUE8/cluster_006/1_contigs/P_utg000006c.fasta (5,456 bp)

Checking required software:
  minimap2: v2.24-r1122


[93m[1m[4mInitial check of contigs[0m [2m(2024-07-06 10:12:47)[0m
[2m    Before proceeding, Trycycler ensures that the input contigs appear[0m
[2msufficiently close to each other to make a consensus. If not, the program will[0m
[2mquit and the user must fix the input contigs (make them more similar to each[0m
[2mother) or exclude some before trying again.[0m

Relative sequence lengths:
  O_utg000006c: [2m1.000[0m  1.000
  P_utg000006c: 1.000  [2m1.000[0m

Mash distances:
  O_utg000006c: [2m0.000[0m  0.000
  P_utg000006c: 0.000  [2m0.000[0m

Contigs have passed the initial check - they seem sufficiently close to reconcile.


[93m[1m[4mNormalising strands[0m [2m(2024-07-06 10:12:47)[0m
[2m    In this step, Trycycler ensures that all sequences are on the same strand.[0m
[2mIt does this by first finding a sequence that occurs once in each contig and[0m
[2mthen flipping any of the contigs (converting to their reverse complement[0m
[2msequence) which have this sequence on the negative strand.[0m

Randomly-chosen common sequence:
  ATTTCCGGAAAGATTGATTTCAACTACTTTTCCTGCTGAAAGATTGTTCA
  GATTGTAGTGTTGGTATTGCATAATGTGGTCTCTTGTATAAGGAGACTGT
  TGACCTAAATTCAAAAAATTGAGATTGTAGTCAACAGCCTGCTAGGGTTA
  AGCACTTAACTTCCCCAAGAAAGTGCATTCAAACGAAATAAAGCGGATTG
  TCGTAAGACAATCCGCTTTATTTTTCCTTCCTTACGCCCTTGAAAGGCGT

O_utg000006c: + strand (using original sequence)
P_utg000006c: + strand (using original sequence)


[93m[1m[4mCircularisation[0m [2m(2024-07-06 10:12:47)[0m
[2m    Trycycler now compares the contigs to each other to repair any[0m
[2mcircularisation issues. After this step, each sequence should be cleanly[0m
[2mcircularised - i.e. the first base in the contig immediately follows the last[0m
[2mbase. Each contig will be circularised by looking for the position of its start[0m
[2mand end in the other contigs. If necessary, additional sequence will be added[0m
[2mor duplicated sequence will be removed. If there are multiple possible ways to[0m
[2mfix a contig's circularisation, then Trycycler will use read alignments to[0m
[2mchoose the best one.[0m

Circularising O_utg000006c:
  using P_utg000006c:
    no adjustment needed (O_utg000006c is already circular)
  circularisation complete (5,456 bp)

Circularising P_utg000006c:
  using O_utg000006c:
    no adjustment needed (P_utg000006c is already circular)
  circularisation complete (5,456 bp)


[93m[1m[4mFinding starting sequence[0m [2m(2024-07-06 10:12:47)[0m
[2m    In this step, Trycycler finds a sequence to use as a starting point for[0m
[2meach of the contigs. This can be a standard starting point (e.g. the dnaA gene)[0m
[2mor if one is not found, then a randomly-chosen unique sequence will be used. If[0m
[2mnecessary, the sequences will be flipped (converted to their reverse complement[0m
[2msequence) to ensure that the starting sequence is on the positive strand.[0m

Looking for known starting sequences in each contig...

Found starting sequence 0701_AM488_RS29905 (replication initiation protein)
  ATGCACGAACCCCCCGTTCAGTCCGACTGCTGCGCCTTATCCGGTAACTA...

O_utg000006c: - strand (using reverse complement)
P_utg000006c: - strand (using reverse complement)


[93m[1m[4mRotating contigs to starting sequence[0m [2m(2024-07-06 10:12:47)[0m
[2m    For a circular contig, any point in the sequence is a valid starting[0m
[2mposition and it can thus be 'rotated' by moving sequence from the contig start[0m
[2mto the contig end. In this step, Trycycler rotates each contig such that it[0m
[2mbegins with the starting sequence, ensuring that all contigs begin and end[0m
[2mtogether so they can be aligned to each other.[0m

O_utg000006c: rotating by 4,542 bp
   ATGCACGAACCCCCGTTCAG...TTCGCTCCAAGCTGGACTGT (5,456 bp)

P_utg000006c: rotating by 1,432 bp
   ATGCACGAACCCCCGTTCAG...TTCGCTCCAAGCTGGACTGT (5,456 bp)


[93m[1m[4mPairwise global alignments[0m [2m(2024-07-06 10:12:47)[0m
[2m    Trycycler uses the edlib aligner to get global alignments between all pairs[0m
[2mof sequences. This can help you to spot any problematic sequences that should[0m
[2mbe excluded before continuing. If you see any sequences with notably worse[0m
[2midentities, you can remove them (delete the contig's FASTA) and run this[0m
[2mcommand again.[0m

O_utg000006c vs P_utg000006c... 100.000% overall identity, 100.0% worst-1kbp identity

Overall pairwise identities:
  O_utg000006c: [2m100.000%[0m  100.000%
  P_utg000006c: 100.000%  [2m100.000%[0m

Worst-1kbp pairwise identities:
  O_utg000006c: [2m100.0%[0m  100.0%
  P_utg000006c: 100.0%  [2m100.0%[0m


[93m[1m[4mFinished![0m [2m(2024-07-06 10:12:47)[0m
[2m    All contig sequences are now reconciled and ready for the next step in the[0m
[2mpipeline: trycycler msa.[0m

Saving sequences to file: results/clusters/CAAUE8/cluster_006/2_all_seqs.fasta

